{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1480433353092},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1480433353092},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1480433353092},{"_id":"themes/landscape/_config.yml","hash":"218c5fb76666696c42dc86e2de4711e6b80befbf","modified":1480433353092},{"_id":"themes/landscape/README.md","hash":"e7cc82dc79596f36ba05a8139e7d6b2dfc4ae5f9","modified":1480433353092},{"_id":"themes/landscape/package.json","hash":"d07f326588fef82f1d23ae3101c9ddfff34c132f","modified":1480433353124},{"_id":"source/_posts/图片在数据库的保存与读取.md","hash":"194998e4ece2dcd8fd9df128d02c0e786ca900a3","modified":1480435034740},{"_id":"source/_posts/获取本地图片并显示.md","hash":"31054e051ae6031d1c7b6e448edc556213117a46","modified":1480259348009},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1480433353092},{"_id":"themes/landscape/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1480433353092},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1480433353092},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1480433353092},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1480433353092},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1480433353092},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1480433353092},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1480433353108},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1480433353124},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1480433353124},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1480433353124},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1480433353124},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1480433353124},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1480433353124},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1480433353124},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"a7faab4f3601b28107af5b1095b3966c2f88fec8","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"3beb0d164acacb6f21e1ca2038158a74ab4a73e4","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"89998e6b2929c4ff5093bbf6b86d611d7420be52","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"148bdf714dd1a7bf55e571f13808ceae079200cc","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1480433353108},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1480433353108},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1480433353108},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1480433353108},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1480433353108},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1480433353108},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1480433353124},{"_id":"themes/landscape/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1480433353139},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1480433353139},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1480433353139},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1480433353108},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1480433353108},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1480433353124},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1480433353124},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1480433353124},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1480433353124},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1480433353124},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1480433353124},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1480433353124},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1480433353124},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1480433353124},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1480433353124},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1480433353124},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1480433353124},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1480433353139},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1480433353139},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1480433353139},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1480433353139},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1480433353139},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1480433353139},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1480433353139},{"_id":"public/2016/04/01/获取本地图片并显示/index.html","hash":"d97dde3b67fec337c0a1fa209a133dcc818cb247","modified":1480435084142},{"_id":"public/archives/index.html","hash":"44deb0142cfe7091ce529e6749ba11b14e8cab76","modified":1480435084142},{"_id":"public/archives/2016/index.html","hash":"5678c9d5027b32629f099aa51c8f1c564528a83a","modified":1480435084142},{"_id":"public/archives/2016/03/index.html","hash":"4ae904d77d7fb2f08d150530c589cd387ff702de","modified":1480435084142},{"_id":"public/archives/2016/04/index.html","hash":"274a790f67636a6cf13e601ef89d9f27bbd73758","modified":1480435084142},{"_id":"public/categories/Java/index.html","hash":"5d0abbc4e72f68668fdbda2024a5993799582b70","modified":1480435084142},{"_id":"public/categories/html/index.html","hash":"e5abe7454e303250dd06a2364a69cfcdcfbb4612","modified":1480435084142},{"_id":"public/tags/Java/index.html","hash":"69e9c170fdf0fbfd35341ac1dbfc242dbff4bd46","modified":1480435084142},{"_id":"public/tags/mysql/index.html","hash":"52a359920863f37b45f98d501e6c50496fa3001b","modified":1480435084142},{"_id":"public/tags/html/index.html","hash":"30731421c379a01f9942bd32a8dd10a0447fa26e","modified":1480435084142},{"_id":"public/2016/03/28/图片在数据库的保存与读取/index.html","hash":"17705d947e1a7c73ea63e19b019d2720be852c3e","modified":1480435084142},{"_id":"public/index.html","hash":"ac1d7d073329e1a575341908d21083ef80410629","modified":1480435084142},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1480435084173},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1480435084173},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1480435084173},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1480435084173},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1480435084173},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1480435084173},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1480435084173},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1480435084173},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1480435084173},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1480435084173},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1480435085000},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1480435085000},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1480435085000},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1480435085015},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1480435085015},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1480435085015},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1480435085015},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1480435085015},{"_id":"public/css/style.css","hash":"fffb3966bf36057a325498aba9ce3a2ea7bd79e1","modified":1480435085015},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1480435085015},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1480435085015},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1480435085015},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1480435085015}],"Category":[{"name":"Java","_id":"ciw3otp9p0002jsd93z81n1it"},{"name":"html","_id":"ciw3otpa40004jsd9hbh7mh1v"}],"Data":[],"Page":[],"Post":[{"title":"图片在数据库的保存与读取","date":"2016-03-28T09:42:32.000Z","_content":"#### 将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\n---\n##### 这里以springmvc+hibernate为例\n```Java\n/*** \n * 上传文件 \n * 用@RequestParam注解来指定表单上的file为MultipartFile \n * @param file \n * @return \n */\n@RequestMapping(\"/fileUpload\")  \npublic String fileUpload(@RequestParam(\"file\") MultipartFile file) {  \n\t// 判断文件是否为空  \n\tif (!file.isEmpty()) {  \n\t\ttry(FileInputStream fis = new FileInputStream(file);) {\n\t\t\t// 限制文件大小不超过65k\n\t    \tlong size = fis.available();\n\t    \tif(size > 65 * 1024) {\n\t\t\t\treturn \"more than MaxSize\";\n\t\t\t}\n\t\t\t// Hibernate 3使用Hibernate.createBlob(fis)，Hibernate 4已经弃用，使用如下方法：\n\t\t\tLobHelper lh = session.getLobHelper();\n\t\t\tbyte[] b = new byte[(int) size];\n\t\t\tfis.read(b);\n\t\t\tBlob blob = lh.createBlob(b);\n\t\t\t// 假设这里要保存用户头像\n\t\t\tUser user = new User(); \n\t\t\tuser.setPortrait(blob);\n\t\t\tSession session = HibernateSessionFactory.getSession();\n\t\t\tsession.beginTransaction();\n\t\t\tsession.save(user);\n\t\t\tsession.getTransaction().commit();\n\t\t} catch (Exception e) {  \n\t\t\te.printStackTrace();  \n\t\t}  \n\t}  \n\t// 返回结果 \n\treturn \"SUCCESS\";  \n}\n```\n##### 客户端读取图片\n```JSP\n<img src=\"showimage?userId = 1\" id=\"image\" width=\"100px\" height=\"100px\"></img>\n```\n##### 服务端读取blob图片文件（注意：返回的是流的形式）\n```Java\n/*** \n * 读取图片\n * 用@RequestParam\n * @param userId \n * @return \n */\n@RequestMapping(\"/showimage\")  \npublic @ResponseBody InputStream showImage(@RequestParam(\"userId\") Long userId) {\n\tUser user = null;\n    \n    try {\n\t\tSession session = HibernateSessionFactory.getSession();\n\t\tuser = (User) session.get(User.class, id);\n\t\tif (null == user)\n\t\t\treturn null;\n\t\tsession.close;\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\t\n\tBlob blob = user.getPortrait();\n\tbyte[] data = null;\n\tPrintWriter out = null;\n\t// 可以将流写到文件中然后把文件地址返回给客户端去访问，这里将以流的形式返回给客户端\n\tInputStream inputStream = null;\n\t\n\ttry(InputStream is = blob.getBinaryStream();) {\n\t\tint length = (int) blob.length();\n\t\tdata = new byte[length];\n\t\tis.read(data);\n\t\tout = response.getWriter();\n\t\tinputStream = new ByteArrayInputStream(data);\n\t\tint a = inputStream.read();\n\t\twhile (a != -1) {\n\t\t\tout.print((char) a); \n\t\t\t// 以流的形式返回给客户端\n\t\t\ta = inputStream.read();\n\t\t}\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t} finally {\n\t\tif(null != out) {\n\t\t\tout.flush();\n\t\t\tout.close();\n\t\t}\n\t\tif (null != inputStream) {\n\t\t\tinputStream.cloase();\n\t\t}\n\t}\n}\n```","source":"_posts/图片在数据库的保存与读取.md","raw":"---\ntitle: 图片在数据库的保存与读取\ndate: 2016-03-28 17:42:32\ncategories: [Java]\ntags: [Java,mysql,html]\n---\n#### 将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\n---\n##### 这里以springmvc+hibernate为例\n```Java\n/*** \n * 上传文件 \n * 用@RequestParam注解来指定表单上的file为MultipartFile \n * @param file \n * @return \n */\n@RequestMapping(\"/fileUpload\")  \npublic String fileUpload(@RequestParam(\"file\") MultipartFile file) {  \n\t// 判断文件是否为空  \n\tif (!file.isEmpty()) {  \n\t\ttry(FileInputStream fis = new FileInputStream(file);) {\n\t\t\t// 限制文件大小不超过65k\n\t    \tlong size = fis.available();\n\t    \tif(size > 65 * 1024) {\n\t\t\t\treturn \"more than MaxSize\";\n\t\t\t}\n\t\t\t// Hibernate 3使用Hibernate.createBlob(fis)，Hibernate 4已经弃用，使用如下方法：\n\t\t\tLobHelper lh = session.getLobHelper();\n\t\t\tbyte[] b = new byte[(int) size];\n\t\t\tfis.read(b);\n\t\t\tBlob blob = lh.createBlob(b);\n\t\t\t// 假设这里要保存用户头像\n\t\t\tUser user = new User(); \n\t\t\tuser.setPortrait(blob);\n\t\t\tSession session = HibernateSessionFactory.getSession();\n\t\t\tsession.beginTransaction();\n\t\t\tsession.save(user);\n\t\t\tsession.getTransaction().commit();\n\t\t} catch (Exception e) {  \n\t\t\te.printStackTrace();  \n\t\t}  \n\t}  \n\t// 返回结果 \n\treturn \"SUCCESS\";  \n}\n```\n##### 客户端读取图片\n```JSP\n<img src=\"showimage?userId = 1\" id=\"image\" width=\"100px\" height=\"100px\"></img>\n```\n##### 服务端读取blob图片文件（注意：返回的是流的形式）\n```Java\n/*** \n * 读取图片\n * 用@RequestParam\n * @param userId \n * @return \n */\n@RequestMapping(\"/showimage\")  \npublic @ResponseBody InputStream showImage(@RequestParam(\"userId\") Long userId) {\n\tUser user = null;\n    \n    try {\n\t\tSession session = HibernateSessionFactory.getSession();\n\t\tuser = (User) session.get(User.class, id);\n\t\tif (null == user)\n\t\t\treturn null;\n\t\tsession.close;\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\t\n\tBlob blob = user.getPortrait();\n\tbyte[] data = null;\n\tPrintWriter out = null;\n\t// 可以将流写到文件中然后把文件地址返回给客户端去访问，这里将以流的形式返回给客户端\n\tInputStream inputStream = null;\n\t\n\ttry(InputStream is = blob.getBinaryStream();) {\n\t\tint length = (int) blob.length();\n\t\tdata = new byte[length];\n\t\tis.read(data);\n\t\tout = response.getWriter();\n\t\tinputStream = new ByteArrayInputStream(data);\n\t\tint a = inputStream.read();\n\t\twhile (a != -1) {\n\t\t\tout.print((char) a); \n\t\t\t// 以流的形式返回给客户端\n\t\t\ta = inputStream.read();\n\t\t}\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t} finally {\n\t\tif(null != out) {\n\t\t\tout.flush();\n\t\t\tout.close();\n\t\t}\n\t\tif (null != inputStream) {\n\t\t\tinputStream.cloase();\n\t\t}\n\t}\n}\n```","slug":"图片在数据库的保存与读取","published":1,"updated":"2016-11-29T15:57:14.740Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciw3otp9p0000jsd9a9gs8ldo","content":"<h4 id=\"将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\"><a href=\"#将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\" class=\"headerlink\" title=\"将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\"></a>将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型</h4><hr>\n<h5 id=\"这里以springmvc-hibernate为例\"><a href=\"#这里以springmvc-hibernate为例\" class=\"headerlink\" title=\"这里以springmvc+hibernate为例\"></a>这里以springmvc+hibernate为例</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*** </span></div><div class=\"line\"> * 上传文件 </div><div class=\"line\"> * 用<span class=\"doctag\">@RequestParam</span>注解来指定表单上的file为MultipartFile </div><div class=\"line\"> * <span class=\"doctag\">@param</span> file </div><div class=\"line\"> * <span class=\"doctag\">@return</span> </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/fileUpload\"</span>)  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">fileUpload</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"file\"</span>)</span> MultipartFile file) </span>&#123;  </div><div class=\"line\">\t<span class=\"comment\">// 判断文件是否为空  </span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (!file.isEmpty()) &#123;  </div><div class=\"line\">\t\t<span class=\"keyword\">try</span>(FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(file);) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 限制文件大小不超过65k</span></div><div class=\"line\">\t    \t<span class=\"keyword\">long</span> size = fis.available();</div><div class=\"line\">\t    \t<span class=\"keyword\">if</span>(size &gt; <span class=\"number\">65</span> * <span class=\"number\">1024</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"more than MaxSize\"</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"comment\">// Hibernate 3使用Hibernate.createBlob(fis)，Hibernate 4已经弃用，使用如下方法：</span></div><div class=\"line\">\t\t\tLobHelper lh = session.getLobHelper();</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] b = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(<span class=\"keyword\">int</span>) size];</div><div class=\"line\">\t\t\tfis.read(b);</div><div class=\"line\">\t\t\tBlob blob = lh.createBlob(b);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 假设这里要保存用户头像</span></div><div class=\"line\">\t\t\tUser user = <span class=\"keyword\">new</span> User(); </div><div class=\"line\">\t\t\tuser.setPortrait(blob);</div><div class=\"line\">\t\t\tSession session = HibernateSessionFactory.getSession();</div><div class=\"line\">\t\t\tsession.beginTransaction();</div><div class=\"line\">\t\t\tsession.save(user);</div><div class=\"line\">\t\t\tsession.getTransaction().commit();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;  </div><div class=\"line\">\t\t\te.printStackTrace();  </div><div class=\"line\">\t\t&#125;  </div><div class=\"line\">\t&#125;  </div><div class=\"line\">\t<span class=\"comment\">// 返回结果 </span></div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"SUCCESS\"</span>;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"客户端读取图片\"><a href=\"#客户端读取图片\" class=\"headerlink\" title=\"客户端读取图片\"></a>客户端读取图片</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;img src=\"showimage?userId = 1\" id=\"image\" width=\"100px\" height=\"100px\"&gt;&lt;/img&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"服务端读取blob图片文件（注意：返回的是流的形式）\"><a href=\"#服务端读取blob图片文件（注意：返回的是流的形式）\" class=\"headerlink\" title=\"服务端读取blob图片文件（注意：返回的是流的形式）\"></a>服务端读取blob图片文件（注意：返回的是流的形式）</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*** </span></div><div class=\"line\"> * 读取图片</div><div class=\"line\"> * 用<span class=\"doctag\">@RequestParam</span></div><div class=\"line\"> * <span class=\"doctag\">@param</span> userId </div><div class=\"line\"> * <span class=\"doctag\">@return</span> </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/showimage\"</span>)  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@ResponseBody</span> <span class=\"function\">InputStream <span class=\"title\">showImage</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"userId\"</span>)</span> Long userId) </span>&#123;</div><div class=\"line\">\tUser user = <span class=\"keyword\">null</span>;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tSession session = HibernateSessionFactory.getSession();</div><div class=\"line\">\t\tuser = (User) session.get(User.class, id);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == user)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tsession.close;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tBlob blob = user.getPortrait();</div><div class=\"line\">\t<span class=\"keyword\">byte</span>[] data = <span class=\"keyword\">null</span>;</div><div class=\"line\">\tPrintWriter out = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"comment\">// 可以将流写到文件中然后把文件地址返回给客户端去访问，这里将以流的形式返回给客户端</span></div><div class=\"line\">\tInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">try</span>(InputStream is = blob.getBinaryStream();) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> length = (<span class=\"keyword\">int</span>) blob.length();</div><div class=\"line\">\t\tdata = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[length];</div><div class=\"line\">\t\tis.read(data);</div><div class=\"line\">\t\tout = response.getWriter();</div><div class=\"line\">\t\tinputStream = <span class=\"keyword\">new</span> ByteArrayInputStream(data);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> a = inputStream.read();</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (a != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\tout.print((<span class=\"keyword\">char</span>) a); </div><div class=\"line\">\t\t\t<span class=\"comment\">// 以流的形式返回给客户端</span></div><div class=\"line\">\t\t\ta = inputStream.read();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != out) &#123;</div><div class=\"line\">\t\t\tout.flush();</div><div class=\"line\">\t\t\tout.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != inputStream) &#123;</div><div class=\"line\">\t\t\tinputStream.cloase();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<h4 id=\"将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\"><a href=\"#将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\" class=\"headerlink\" title=\"将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\"></a>将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型</h4><hr>\n<h5 id=\"这里以springmvc-hibernate为例\"><a href=\"#这里以springmvc-hibernate为例\" class=\"headerlink\" title=\"这里以springmvc+hibernate为例\"></a>这里以springmvc+hibernate为例</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*** </div><div class=\"line\"> * 上传文件 </div><div class=\"line\"> * 用<span class=\"doctag\">@RequestParam</span>注解来指定表单上的file为MultipartFile </div><div class=\"line\"> * <span class=\"doctag\">@param</span> file </div><div class=\"line\"> * <span class=\"doctag\">@return</span> </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/fileUpload\"</span>)  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">fileUpload</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"file\"</span>)</span> MultipartFile file) </span>&#123;  </div><div class=\"line\">\t<span class=\"comment\">// 判断文件是否为空  </span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (!file.isEmpty()) &#123;  </div><div class=\"line\">\t\t<span class=\"keyword\">try</span>(FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(file);) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 限制文件大小不超过65k</span></div><div class=\"line\">\t    \t<span class=\"keyword\">long</span> size = fis.available();</div><div class=\"line\">\t    \t<span class=\"keyword\">if</span>(size &gt; <span class=\"number\">65</span> * <span class=\"number\">1024</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"more than MaxSize\"</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"comment\">// Hibernate 3使用Hibernate.createBlob(fis)，Hibernate 4已经弃用，使用如下方法：</span></div><div class=\"line\">\t\t\tLobHelper lh = session.getLobHelper();</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] b = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(<span class=\"keyword\">int</span>) size];</div><div class=\"line\">\t\t\tfis.read(b);</div><div class=\"line\">\t\t\tBlob blob = lh.createBlob(b);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 假设这里要保存用户头像</span></div><div class=\"line\">\t\t\tUser user = <span class=\"keyword\">new</span> User(); </div><div class=\"line\">\t\t\tuser.setPortrait(blob);</div><div class=\"line\">\t\t\tSession session = HibernateSessionFactory.getSession();</div><div class=\"line\">\t\t\tsession.beginTransaction();</div><div class=\"line\">\t\t\tsession.save(user);</div><div class=\"line\">\t\t\tsession.getTransaction().commit();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;  </div><div class=\"line\">\t\t\te.printStackTrace();  </div><div class=\"line\">\t\t&#125;  </div><div class=\"line\">\t&#125;  </div><div class=\"line\">\t<span class=\"comment\">// 返回结果 </span></div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"SUCCESS\"</span>;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"客户端读取图片\"><a href=\"#客户端读取图片\" class=\"headerlink\" title=\"客户端读取图片\"></a>客户端读取图片</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;img src=\"showimage?userId = 1\" id=\"image\" width=\"100px\" height=\"100px\"&gt;&lt;/img&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"服务端读取blob图片文件（注意：返回的是流的形式）\"><a href=\"#服务端读取blob图片文件（注意：返回的是流的形式）\" class=\"headerlink\" title=\"服务端读取blob图片文件（注意：返回的是流的形式）\"></a>服务端读取blob图片文件（注意：返回的是流的形式）</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*** </div><div class=\"line\"> * 读取图片</div><div class=\"line\"> * 用<span class=\"doctag\">@RequestParam</span></div><div class=\"line\"> * <span class=\"doctag\">@param</span> userId </div><div class=\"line\"> * <span class=\"doctag\">@return</span> </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/showimage\"</span>)  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@ResponseBody</span> <span class=\"function\">InputStream <span class=\"title\">showImage</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"userId\"</span>)</span> Long userId) </span>&#123;</div><div class=\"line\">\tUser user = <span class=\"keyword\">null</span>;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tSession session = HibernateSessionFactory.getSession();</div><div class=\"line\">\t\tuser = (User) session.get(User.class, id);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == user)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tsession.close;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tBlob blob = user.getPortrait();</div><div class=\"line\">\t<span class=\"keyword\">byte</span>[] data = <span class=\"keyword\">null</span>;</div><div class=\"line\">\tPrintWriter out = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"comment\">// 可以将流写到文件中然后把文件地址返回给客户端去访问，这里将以流的形式返回给客户端</span></div><div class=\"line\">\tInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">try</span>(InputStream is = blob.getBinaryStream();) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> length = (<span class=\"keyword\">int</span>) blob.length();</div><div class=\"line\">\t\tdata = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[length];</div><div class=\"line\">\t\tis.read(data);</div><div class=\"line\">\t\tout = response.getWriter();</div><div class=\"line\">\t\tinputStream = <span class=\"keyword\">new</span> ByteArrayInputStream(data);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> a = inputStream.read();</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (a != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\tout.print((<span class=\"keyword\">char</span>) a); </div><div class=\"line\">\t\t\t<span class=\"comment\">// 以流的形式返回给客户端</span></div><div class=\"line\">\t\t\ta = inputStream.read();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != out) &#123;</div><div class=\"line\">\t\t\tout.flush();</div><div class=\"line\">\t\t\tout.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != inputStream) &#123;</div><div class=\"line\">\t\t\tinputStream.cloase();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"input标签获取本地图片并显示","date":"2016-04-01T03:31:29.000Z","_content":"```HTML\n<!doctype html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"UTF-8\">\n  <title>Document</title>\n </head>\n <body>\n  <input type=\"file\" name=\"file\" id=\"file\" />\n </body>\n <script>\n\t $('#file').change(function(event) {\n\t\t// 根据这个 <input> 获取文件的 HTML5 js 对象\n\t\tvar files = event.target.files;\n\t\tif (files && files.length > 0) {\n\t\t\t// 获取目前上传的文件\n\t\t\tfile = files[0];\n\t\t\t// 来在控制台看看到底这个对象是什么\n\t\t\tconsole.log(file);\n\t\t\t// 那么我们可以做一下诸如文件大小校验的动作\n\t\t\tif(file.size > 1024 * 64) {\n\t\t\t\talert('图片大小不能超过 64kB!');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// 下面是关键的关键，通过这个 file 对象生成一个可用的图像 URL\n\t\t\t// 获取 window 的 URL 工具\n\t\t\tvar URL = window.URL || window.webkitURL;\n\t\t\t// 通过 file 生成目标 url\n\t\t\tvar imgURL = URL.createObjectURL(file);\n\t\t\t// 用这个 URL 产生一个 <img> 将其显示出来\n\t\t\t$(\"#imghead\" ).attr(\"src\", imgURL);\n\t\t}\n\t});\n </script>\n</html>\n```","source":"_posts/获取本地图片并显示.md","raw":"---\ntitle: input标签获取本地图片并显示\ndate: 2016-04-01 11:31:29\ncategories: [html]\ntags: [html]\n---\n```HTML\n<!doctype html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"UTF-8\">\n  <title>Document</title>\n </head>\n <body>\n  <input type=\"file\" name=\"file\" id=\"file\" />\n </body>\n <script>\n\t $('#file').change(function(event) {\n\t\t// 根据这个 <input> 获取文件的 HTML5 js 对象\n\t\tvar files = event.target.files;\n\t\tif (files && files.length > 0) {\n\t\t\t// 获取目前上传的文件\n\t\t\tfile = files[0];\n\t\t\t// 来在控制台看看到底这个对象是什么\n\t\t\tconsole.log(file);\n\t\t\t// 那么我们可以做一下诸如文件大小校验的动作\n\t\t\tif(file.size > 1024 * 64) {\n\t\t\t\talert('图片大小不能超过 64kB!');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// 下面是关键的关键，通过这个 file 对象生成一个可用的图像 URL\n\t\t\t// 获取 window 的 URL 工具\n\t\t\tvar URL = window.URL || window.webkitURL;\n\t\t\t// 通过 file 生成目标 url\n\t\t\tvar imgURL = URL.createObjectURL(file);\n\t\t\t// 用这个 URL 产生一个 <img> 将其显示出来\n\t\t\t$(\"#imghead\" ).attr(\"src\", imgURL);\n\t\t}\n\t});\n </script>\n</html>\n```","slug":"获取本地图片并显示","published":1,"updated":"2016-11-27T15:09:08.009Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciw3otp9p0001jsd9zqftwqrg","content":"<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file\"</span> /&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"xml\"></span></div><div class=\"line\">\t $('#file').change(function(event) &#123;</div><div class=\"line\">\t\t// 根据这个 <span class=\"tag\">&lt;<span class=\"name\">input</span>&gt;</span> 获取文件的 HTML5 js 对象</div><div class=\"line\">\t\tvar files = event.target.files;</div><div class=\"line\">\t\tif (files &amp;&amp; files.length &gt; 0) &#123;</div><div class=\"line\">\t\t\t// 获取目前上传的文件</div><div class=\"line\">\t\t\tfile = files[0];</div><div class=\"line\">\t\t\t// 来在控制台看看到底这个对象是什么</div><div class=\"line\">\t\t\tconsole.log(file);</div><div class=\"line\">\t\t\t// 那么我们可以做一下诸如文件大小校验的动作</div><div class=\"line\">\t\t\tif(file.size &gt; 1024 * 64) &#123;</div><div class=\"line\">\t\t\t\talert('图片大小不能超过 64kB!');</div><div class=\"line\">\t\t\t\treturn false;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t// 下面是关键的关键，通过这个 file 对象生成一个可用的图像 URL</div><div class=\"line\">\t\t\t// 获取 window 的 URL 工具</div><div class=\"line\">\t\t\tvar URL = window.URL || window.webkitURL;</div><div class=\"line\">\t\t\t// 通过 file 生成目标 url</div><div class=\"line\">\t\t\tvar imgURL = URL.createObjectURL(file);</div><div class=\"line\">\t\t\t// 用这个 URL 产生一个 <span class=\"tag\">&lt;<span class=\"name\">img</span>&gt;</span> 将其显示出来</div><div class=\"line\">\t\t\t$(\"#imghead\" ).attr(\"src\", imgURL);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file\"</span> /&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"xml\"></div><div class=\"line\">\t $('#file').change(function(event) &#123;</div><div class=\"line\">\t\t// 根据这个 <span class=\"tag\">&lt;<span class=\"name\">input</span>&gt;</span> 获取文件的 HTML5 js 对象</div><div class=\"line\">\t\tvar files = event.target.files;</div><div class=\"line\">\t\tif (files &amp;&amp; files.length &gt; 0) &#123;</div><div class=\"line\">\t\t\t// 获取目前上传的文件</div><div class=\"line\">\t\t\tfile = files[0];</div><div class=\"line\">\t\t\t// 来在控制台看看到底这个对象是什么</div><div class=\"line\">\t\t\tconsole.log(file);</div><div class=\"line\">\t\t\t// 那么我们可以做一下诸如文件大小校验的动作</div><div class=\"line\">\t\t\tif(file.size &gt; 1024 * 64) &#123;</div><div class=\"line\">\t\t\t\talert('图片大小不能超过 64kB!');</div><div class=\"line\">\t\t\t\treturn false;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t// 下面是关键的关键，通过这个 file 对象生成一个可用的图像 URL</div><div class=\"line\">\t\t\t// 获取 window 的 URL 工具</div><div class=\"line\">\t\t\tvar URL = window.URL || window.webkitURL;</div><div class=\"line\">\t\t\t// 通过 file 生成目标 url</div><div class=\"line\">\t\t\tvar imgURL = URL.createObjectURL(file);</div><div class=\"line\">\t\t\t// 用这个 URL 产生一个 <span class=\"tag\">&lt;<span class=\"name\">img</span>&gt;</span> 将其显示出来</div><div class=\"line\">\t\t\t$(\"#imghead\" ).attr(\"src\", imgURL);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\"> </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ciw3otp9p0000jsd9a9gs8ldo","category_id":"ciw3otp9p0002jsd93z81n1it","_id":"ciw3otpa40006jsd9q5y7fioh"},{"post_id":"ciw3otp9p0001jsd9zqftwqrg","category_id":"ciw3otpa40004jsd9hbh7mh1v","_id":"ciw3otpa40008jsd9kbg4uftd"}],"PostTag":[{"post_id":"ciw3otp9p0000jsd9a9gs8ldo","tag_id":"ciw3otpa40003jsd9bijl5ngo","_id":"ciw3otpa4000ajsd9ijvdfo77"},{"post_id":"ciw3otp9p0000jsd9a9gs8ldo","tag_id":"ciw3otpa40005jsd9od3ke1qf","_id":"ciw3otpa4000bjsd977lqkewx"},{"post_id":"ciw3otp9p0000jsd9a9gs8ldo","tag_id":"ciw3otpa40007jsd9i1gvh6fj","_id":"ciw3otpa4000cjsd96tyhru6h"},{"post_id":"ciw3otp9p0001jsd9zqftwqrg","tag_id":"ciw3otpa40007jsd9i1gvh6fj","_id":"ciw3otpa4000djsd9dneckhya"}],"Tag":[{"name":"Java","_id":"ciw3otpa40003jsd9bijl5ngo"},{"name":"mysql","_id":"ciw3otpa40005jsd9od3ke1qf"},{"name":"html","_id":"ciw3otpa40007jsd9i1gvh6fj"}]}}