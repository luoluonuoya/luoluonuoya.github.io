{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/BlueLake/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"source/image/swimming/8字浮板.jpg","path":"image/swimming/8字浮板.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/五分泳裤.jpg","path":"image/swimming/五分泳裤.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/傅爷表情.jpg","path":"image/swimming/傅爷表情.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/小跟屁虫.jpg","path":"image/swimming/小跟屁虫.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/打水浮板.jpg","path":"image/swimming/打水浮板.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/收腿.jpg","path":"image/swimming/收腿.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/普通平角泳裤.jpg","path":"image/swimming/普通平角泳裤.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/比基尼.jpg","path":"image/swimming/比基尼.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/泳帽的戴法.jpg","path":"image/swimming/泳帽的戴法.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/海豚腿水中练习.jpg","path":"image/swimming/海豚腿水中练习.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/游泳脚蹼.jpg","path":"image/swimming/游泳脚蹼.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/潜水脚蹼.jpg","path":"image/swimming/潜水脚蹼.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/爬泳划手.jpg","path":"image/swimming/爬泳划手.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/爬泳划水到底.jpg","path":"image/swimming/爬泳划水到底.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/爬泳手臂入手.jpg","path":"image/swimming/爬泳手臂入手.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/爬泳换气.jpg","path":"image/swimming/爬泳换气.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/爬泳柔韧性不够的移臂.jpg","path":"image/swimming/爬泳柔韧性不够的移臂.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/爬泳正确移臂.jpg","path":"image/swimming/爬泳正确移臂.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/爬泳腿法.jpg","path":"image/swimming/爬泳腿法.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/爬泳转髋.jpg","path":"image/swimming/爬泳转髋.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/爬泳错误移臂.jpg","path":"image/swimming/爬泳错误移臂.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/狗爬式.jpg","path":"image/swimming/狗爬式.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/电镀泳镜.jpg","path":"image/swimming/电镀泳镜.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/竞速泳衣.jpg","path":"image/swimming/竞速泳衣.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蛙泳伸手蹬夹.jpg","path":"image/swimming/蛙泳伸手蹬夹.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蛙泳内划.jpg","path":"image/swimming/蛙泳内划.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蛙泳外划.jpg","path":"image/swimming/蛙泳外划.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蛙泳抓腿.jpg","path":"image/swimming/蛙泳抓腿.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蛙泳抱水.jpg","path":"image/swimming/蛙泳抱水.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蛙泳翻腿.jpg","path":"image/swimming/蛙泳翻腿.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蛙泳蹬夹.jpg","path":"image/swimming/蛙泳蹬夹.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蝶仰泳.jpg","path":"image/swimming/蝶仰泳.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蝶泳第一次打腿1.jpg","path":"image/swimming/蝶泳第一次打腿1.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蝶泳第二次打腿.jpg","path":"image/swimming/蝶泳第二次打腿.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蝶泳第二次打腿预备.jpg","path":"image/swimming/蝶泳第二次打腿预备.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/透明泳镜.jpg","path":"image/swimming/透明泳镜.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/钥匙手环.jpg","path":"image/swimming/钥匙手环.jpg","modified":0,"renderable":0},{"_id":"themes/BlueLake/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","path":"iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","path":"iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","path":"iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","path":"iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/search.json.js","path":"js/search.json.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/toctotop.js","path":"js/toctotop.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"source/image/swimming/大框泳镜.jpg","path":"image/swimming/大框泳镜.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/海豚泳陆地练习.jpg","path":"image/swimming/海豚泳陆地练习.jpg","modified":0,"renderable":0},{"_id":"themes/BlueLake/source/img/bg.jpg","path":"img/bg.jpg","modified":0,"renderable":1},{"_id":"source/image/POI导出excel表/excel导出效果图.jpg","path":"image/POI导出excel表/excel导出效果图.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/大跟屁虫.jpg","path":"image/swimming/大跟屁虫.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/时尚背交叉连体.jpg","path":"image/swimming/时尚背交叉连体.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/背交叉连体.jpg","path":"image/swimming/背交叉连体.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/蝶泳第一次打腿.jpg","path":"image/swimming/蝶泳第一次打腿.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/主题.jpg","path":"image/swimming/主题.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/漂流包.jpg","path":"image/swimming/漂流包.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/花边泳衣.jpg","path":"image/swimming/花边泳衣.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/三角连体.jpg","path":"image/swimming/三角连体.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/低边平角泳裤.jpg","path":"image/swimming/低边平角泳裤.jpg","modified":0,"renderable":0},{"_id":"source/image/swimming/分装瓶.jpg","path":"image/swimming/分装瓶.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"themes/BlueLake/LICENSE","hash":"3e191ca3f51efc111863c4941051291a696ef43e","modified":1496090962000},{"_id":"themes/BlueLake/README.en.md","hash":"b9f84036214ec79a8c319c5383696e0076305dfe","modified":1496090962000},{"_id":"themes/BlueLake/README.md","hash":"152969bd5a7e94a595d058f085c517b65d3b61d2","modified":1496090962000},{"_id":"themes/BlueLake/_config.yml","hash":"52d1d3e48852c90e10e2ec9fdc1768e133dfb0f3","modified":1497409564612},{"_id":"themes/BlueLake/package.json","hash":"e06eea20c64b2821631a49e8902e645bad2c5102","modified":1496090962000},{"_id":"source/_posts/AOP拦截Controller.md","hash":"462f0e71d6299e682bb9e15000a521b2fb3d2ba5","modified":1493806049629},{"_id":"source/_posts/Angularjs内置过滤器.md","hash":"53163f86f5849b4511062e1a9de323bf62ffa9d9","modified":1484640597317},{"_id":"source/_posts/Controller异常处理.md","hash":"0b9a963f0c29266a68c984c20595d87f65a3db69","modified":1484621230150},{"_id":"source/_posts/JDK1.7特性.md","hash":"90290be0d346949b6b0c691fe7ac48e6c9ea8dd0","modified":1483406603941},{"_id":"source/_posts/Java下载文件损坏问题.md","hash":"b36dd64470341b676e725f3177389b4919f0735a","modified":1492757635280},{"_id":"source/_posts/Java去除Html标签.md","hash":"7733a6ff14e3bbf947ccbd116af474cdc9f20e1f","modified":1483406597716},{"_id":"source/_posts/Java操作Excel.md","hash":"79c79ca17bf1c49e5340e1b859176e45da3e9cca","modified":1483406588606},{"_id":"source/_posts/Java操作redis.md","hash":"b339e5d1df0df82c507304b0f7877657d1775c96","modified":1484619927001},{"_id":"source/_posts/Java自定义验证注解.md","hash":"b51b79b61721b0a2edcedc8bd3b245221439fd2e","modified":1484557183666},{"_id":"source/_posts/Mybatis执行insert后获取主键方式.md","hash":"dc260206460c64ee021e718268d9a332fb9bf50e","modified":1484620627156},{"_id":"source/_posts/POI导出excel表.md","hash":"0f0973fc45b111d334ffe6bb7c647e0fddfbe9f2","modified":1497318094628},{"_id":"source/_posts/Spring boot的入门使用.md","hash":"b755848ecc654027c68a18efeb909b75591174cd","modified":1485246911776},{"_id":"source/_posts/SpringMvc接收参数.md","hash":"21867baf9a782d61cf1b4bf8df336a15c0980b57","modified":1484551684053},{"_id":"source/_posts/SpringMvc整合Swagger UI.md","hash":"d29163fef4fc77af9ae5c57c99eda01fe6e0c053","modified":1484636712007},{"_id":"source/_posts/StaleStateException.md","hash":"c4e90b2b02bd8894646bd135f61745fb5eed522f","modified":1484538211665},{"_id":"source/_posts/URL下载资源.md","hash":"de61d685822f5b80d33c29ccfab088115f1a0f9d","modified":1483059580699},{"_id":"source/_posts/eclipse从svn检出项目报错.md","hash":"2c89276d8450f572caf69dc6108330183d1b42fb","modified":1483406577311},{"_id":"source/_posts/eclipse安装svn.md","hash":"1006456d84c4287bdd5439ffb1dad08b71c392ab","modified":1484620008366},{"_id":"source/_posts/fatjar打包项目.md","hash":"2d3b072e3716b9e2f8dd17f78276bf8e3931d93c","modified":1484621254108},{"_id":"source/_posts/log4j发邮件配置.md","hash":"17b285cdd5ac9c23413f1c78080784a50f292158","modified":1484621601176},{"_id":"source/_posts/maven引用外部jar包.md","hash":"16c427a92b54a0aa95ba4d5717108b34d347a5e3","modified":1485070329226},{"_id":"source/_posts/maven打包可执行项目.md","hash":"eb652aeae44b64cde63abeb1b5373aad5bebecc8","modified":1484638751923},{"_id":"source/_posts/mysql 1044 错误.md","hash":"518ec83f7c23c127177c1d32efdd6fa7e316c390","modified":1483002841123},{"_id":"source/_posts/open implementation异常退出.md","hash":"7cd82fffe88cf17f260871acedccb3cfeb3f1509","modified":1484548235019},{"_id":"source/_posts/springboot+rabbitmq简单使用.md","hash":"0e3a5679faf1ebd1da2152e9398dcd11b5002f4e","modified":1495856501173},{"_id":"source/_posts/tomcat配置https单-双向验证.md","hash":"e14d2fea2c930210ccd11534649db2f59ad96b03","modified":1484620233964},{"_id":"source/_posts/使用kong管理api.md","hash":"383110e26c729f27fd50a658f4d3d7285968fc00","modified":1497316197309},{"_id":"source/_posts/使用kong配置oauth2.0的坑.md","hash":"3da60008d546f48e1b3ba1f45f1d472652cf634d","modified":1499155766162},{"_id":"source/_posts/使用redis维护token.md","hash":"69045f42e831944129868aae54adf0f4da206c7a","modified":1493803434037},{"_id":"source/_posts/判断浏览器版本.md","hash":"6533dc0c66742e1b7bcf0ec5842dd9b117e69c11","modified":1482999838163},{"_id":"source/_posts/原生数据库访问.md","hash":"66bdc104cc06e361250f586149e5d5e4da6908ea","modified":1483406649165},{"_id":"source/_posts/图片在数据库的保存与读取.md","hash":"1d363b4b3e6144cf8950e6d1207309b02120c1b5","modified":1480467967379},{"_id":"source/_posts/游泳攻略.md","hash":"118afc64083bfce3f5219b12d181fc626de2179b","modified":1497318072439},{"_id":"source/_posts/获取URL链接的文件类型.md","hash":"b7224e3ae09b8bb5dbecf246754142159c5824ed","modified":1483406624252},{"_id":"source/_posts/获取properties文件键值.md","hash":"438533e47e8caeffced01e6719aa3c0e07345a2c","modified":1484638941302},{"_id":"source/_posts/获取本地图片并显示.md","hash":"6d4b2b2e92ef5f864f25441d220edb95ce9888ff","modified":1480467967380},{"_id":"source/_posts/读取jar包中的文件.md","hash":"0dfad7cb73bb75797917e294702ccc4469af7453","modified":1484638958336},{"_id":"source/about/index.md","hash":"c87f46378d116b20d9835e947a8ad203d39edfa8","modified":1497409212805},{"_id":"themes/BlueLake/languages/de-DE.yml","hash":"da84cc38fe1fe39d9449efd5ba0a8371981d5082","modified":1496090962000},{"_id":"themes/BlueLake/languages/en.yml","hash":"f019b6352648b23ac1262b4bf39f404476a1dcf3","modified":1496090962000},{"_id":"themes/BlueLake/languages/es-ES.yml","hash":"db9e692899096ec88316100e9cb8461cfe15a0ab","modified":1496090962000},{"_id":"themes/BlueLake/languages/fr-FR.yml","hash":"3db5d8119fd777a366a9a5a45a837729a23b3bd9","modified":1496090962000},{"_id":"themes/BlueLake/languages/ko.yml","hash":"2e5684f02d1ba58a9a27088c045e3a2a48709bb5","modified":1496090962000},{"_id":"themes/BlueLake/languages/tr.yml","hash":"73481561e2a79adec621c4ba4b0ce431b68102c7","modified":1496090962000},{"_id":"themes/BlueLake/languages/zh-CN.yml","hash":"d9ae8c40bc4fb7c326712f0460b517368f76e8fa","modified":1496090962000},{"_id":"themes/BlueLake/languages/zh-TW.yml","hash":"4b2445eadcad7612cd75678bd6bf5cf267f342d4","modified":1496090962000},{"_id":"themes/BlueLake/layout/archive.jade","hash":"0497469c869f0ac28f150295dbddf6920e6582c1","modified":1496090962000},{"_id":"themes/BlueLake/layout/base.jade","hash":"0f0291077c4ab6d8fd8450744137e83be21fc639","modified":1496090962000},{"_id":"themes/BlueLake/layout/category.jade","hash":"384e2e2588ecab3f518f03f11f2b052d3827fad8","modified":1496090962000},{"_id":"themes/BlueLake/layout/page.jade","hash":"7d2a48f6a902605fd6cfc237e3c2f9c02d76492e","modified":1496090962000},{"_id":"themes/BlueLake/layout/index.jade","hash":"87fdda623f084dff078898d3e736da9e44dcfe2c","modified":1496090962000},{"_id":"themes/BlueLake/layout/post.jade","hash":"8bff7bf10dd7121b68cd3e8408ef000ec8958998","modified":1496090962000},{"_id":"themes/BlueLake/layout/tag.jade","hash":"835da21846c730f0e3e344dc7e2e59154030b4f7","modified":1496090962000},{"_id":"themes/BlueLake/source/apple-touch-icon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1496090962000},{"_id":"themes/BlueLake/source/favicon.ico","hash":"94e5d25d942bff5479470322454c951f2ddebac6","modified":1496090962000},{"_id":"source/image/swimming/8字浮板.jpg","hash":"08af732cd8100902d6a83ccd5f72b92b77ccae1b","modified":1497074046690},{"_id":"source/image/swimming/五分泳裤.jpg","hash":"5b62ce8cfd0cd090c46142fbea217049b0ae0d64","modified":1497075908844},{"_id":"source/image/swimming/傅爷表情.jpg","hash":"61d7476f39f4c4a014bdb9ce3ba898881c749460","modified":1497073889875},{"_id":"source/image/swimming/小跟屁虫.jpg","hash":"814b2fbbd676d4dfd6cd9ac302aacae5aef6e616","modified":1497074096295},{"_id":"source/image/swimming/打水浮板.jpg","hash":"60e8c3592f478f2505f5eaaece9e9c89f6436c49","modified":1497074016160},{"_id":"source/image/swimming/收腿.jpg","hash":"2e0cfa98d71f9d1da49d9326464bfd2f6dae71af","modified":1497093905208},{"_id":"source/image/swimming/普通平角泳裤.jpg","hash":"fd1bb501af82fe9018e41af480cf75e522158aac","modified":1497076044432},{"_id":"source/image/swimming/比基尼.jpg","hash":"3c1a50d828ca805fac16c4ee9b4083d4015e7abc","modified":1497077858387},{"_id":"source/image/swimming/泳帽的戴法.jpg","hash":"00f8c57322bc849ad2b003bcb97f85d7d18326ee","modified":1497029044041},{"_id":"source/image/swimming/海豚腿水中练习.jpg","hash":"9c25bd403a72dfe7dc80d7282045271efb912792","modified":1497101673338},{"_id":"source/image/swimming/游泳脚蹼.jpg","hash":"6fd231b50ef56224eb44b291297e082f95782717","modified":1497074268356},{"_id":"source/image/swimming/潜水脚蹼.jpg","hash":"14921de9e5bad4c26a49e256f354deb37464ac10","modified":1497074302153},{"_id":"source/image/swimming/爬泳划手.jpg","hash":"de44fb6b583a25502cd060778c6ddc188b67ffe8","modified":1497098284891},{"_id":"source/image/swimming/爬泳划水到底.jpg","hash":"43706f5a713b8606819a724dc027f78b355d3928","modified":1497098581555},{"_id":"source/image/swimming/爬泳手臂入手.jpg","hash":"74927c9c5e40f9676fc6c4a5bb6a11a90a6d7dc4","modified":1497099129995},{"_id":"source/image/swimming/爬泳换气.jpg","hash":"e807f083509f78be4a49b30936892ea15f090634","modified":1497099785033},{"_id":"source/image/swimming/爬泳柔韧性不够的移臂.jpg","hash":"a45f2b71c14ba194e116612ce9e116b623bca2d8","modified":1497098813128},{"_id":"source/image/swimming/爬泳正确移臂.jpg","hash":"d6fe5d9084635051eec377158de93cfde8e5f679","modified":1497098777841},{"_id":"source/image/swimming/爬泳腿法.jpg","hash":"bbcbd4ccb18b8ef511e55eb8a4dba600e6682442","modified":1497096987857},{"_id":"source/image/swimming/爬泳转髋.jpg","hash":"ad14427224a1c9a685bd76764d6be458176bdbe6","modified":1497097266121},{"_id":"source/image/swimming/爬泳错误移臂.jpg","hash":"0612f7db1fa54a8908599bad133ab4b6c58b4465","modified":1497098666402},{"_id":"source/image/swimming/狗爬式.jpg","hash":"54c6464e8f48126bfd628f9791c554a451e5dbfb","modified":1497081078993},{"_id":"source/image/swimming/电镀泳镜.jpg","hash":"3c7813c32674b2bd4445c353ce98d6b8459105bd","modified":1497029616977},{"_id":"source/image/swimming/竞速泳衣.jpg","hash":"b97ada478ff03f51ae47811a5bda729b331e8924","modified":1497077070495},{"_id":"source/image/swimming/蛙泳伸手蹬夹.jpg","hash":"a6980a0a482d0f3b50d633f9ca29ed78b1aeede7","modified":1497095957917},{"_id":"source/image/swimming/蛙泳内划.jpg","hash":"16bd6f3c1f1e7cc5a5ff1bfe8589c710b938606d","modified":1497095254441},{"_id":"source/image/swimming/蛙泳外划.jpg","hash":"f776179864de6ada1a2485da1a56dfe93728def3","modified":1497094961977},{"_id":"source/image/swimming/蛙泳抓腿.jpg","hash":"da4059af097e290db4bc5f6b8b75789157959ba1","modified":1497094482835},{"_id":"source/image/swimming/蛙泳抱水.jpg","hash":"cd709a00df5a6ce8b145827bd64e7f9ce4a6776e","modified":1497095788487},{"_id":"source/image/swimming/蛙泳翻腿.jpg","hash":"f63e5422c5c235ab15c2be02d631272e90484484","modified":1497093964227},{"_id":"source/image/swimming/蛙泳蹬夹.jpg","hash":"c4da56a6af9b872dca3aa7141f9b7f4fe237351a","modified":1497094624242},{"_id":"source/image/swimming/蝶仰泳.jpg","hash":"6bd6d0395cf7f0677ad8c8660e0b233760749b48","modified":1497100130584},{"_id":"source/image/swimming/蝶泳第一次打腿1.jpg","hash":"2335c1e6a8df79f14470e06f4c3a50348ac2cf2c","modified":1497104227099},{"_id":"source/image/swimming/蝶泳第二次打腿.jpg","hash":"84ba9b286dd3828aad680d44cf740cceb23a709e","modified":1497105433645},{"_id":"source/image/swimming/蝶泳第二次打腿预备.jpg","hash":"deacc7e716039af16dc135d3d0cc032b916896de","modified":1497105677661},{"_id":"source/image/swimming/透明泳镜.jpg","hash":"77557bf6c09ab822915ee3b88fd231b1fc5f4583","modified":1497029654687},{"_id":"source/image/swimming/钥匙手环.jpg","hash":"0bb5d8fc1396713a1c5e119649d53b2f65637555","modified":1497073947213},{"_id":"themes/BlueLake/layout/_partial/after_footer.jade","hash":"26ae121ecc5bbe351927dd273d58871f69454500","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/comment_count.jade","hash":"c45a61f81c2a93d8440c2eca37c37285f6b71b48","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/comments.jade","hash":"af9a4a65eba65c5140921326f2b5cae9db5d7d28","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/comments_js.jade","hash":"7b3ed6cdff8d83cf86167fa99112fb98ee2cf053","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/footer.jade","hash":"dbc5c401f4d8aa80fe9e73423aadb8b8969f0b62","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/search.jade","hash":"1c988c7e1f716036e428ee16b8005a7b1bfb33c7","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/share.jade","hash":"28d79fbb9d8ecc5692d3063e439f16224188abac","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1496090962000},{"_id":"themes/BlueLake/layout/_partial/totop.jade","hash":"3e4141538285aef2bd019832ba62bafd094c6097","modified":1496090962000},{"_id":"themes/BlueLake/layout/_widget/archive.jade","hash":"082ae16dad18ada28913772675861d7230134bea","modified":1496090962000},{"_id":"themes/BlueLake/layout/_widget/category.jade","hash":"ba43bd011d64cd86fa420677c9000d328f4f6114","modified":1496090962000},{"_id":"themes/BlueLake/layout/_widget/links.jade","hash":"ff46afdedc1ab3c075ffed686b98f23aed066124","modified":1496090962000},{"_id":"themes/BlueLake/layout/_widget/recent_comments.jade","hash":"f8ae55d5514fe493651ec04fbe73cb5fc482f7cd","modified":1496090962000},{"_id":"themes/BlueLake/layout/_widget/recent_posts.jade","hash":"a0309137277323f2fd61a3c6691e1bc51026f711","modified":1496090962000},{"_id":"themes/BlueLake/layout/_widget/tag.jade","hash":"3df9a00a21d3bc151026b2d403a99c28fe1ccd13","modified":1496090962000},{"_id":"themes/BlueLake/layout/_widget/weibo.jade","hash":"53e99461ae7f8efb2a1e78ad3090dd93d18bcd5c","modified":1496090962000},{"_id":"themes/BlueLake/source/css/highlight.styl","hash":"be9ad73454b7029311caafd8e1faa469a5d4f58d","modified":1496090962000},{"_id":"themes/BlueLake/source/css/style.styl","hash":"79600cd74487beaac9db300158cfb265fab8a637","modified":1496090962000},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","hash":"e664dd848ca65fe3aca4acfc234ff9c18ffd4c33","modified":1496090962000},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","hash":"2b6a0b21bf63bdf746130117baf432fcb44ad210","modified":1496090962000},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","hash":"5770696cc0d19d9c9479912a5cf54c9dd4ab24c4","modified":1496090962000},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","hash":"df2bd849134cbd02beb385e5061a30b923c99058","modified":1496090962000},{"_id":"themes/BlueLake/source/js/search.json.js","hash":"a0e8dfee9b9845aabd64360d497df7c0767b7235","modified":1496090962000},{"_id":"themes/BlueLake/source/js/toctotop.js","hash":"ad6386bc746ff375715ca9da17af4716ea86e06a","modified":1496090962000},{"_id":"themes/BlueLake/source/js/totop.js","hash":"5b1131830209c2daaf6fe34c5e39ab7c1059bfa4","modified":1496090962000},{"_id":"source/image/swimming/大框泳镜.jpg","hash":"bdb417b848103f15209386cdcb010aedfc79ce12","modified":1497029636072},{"_id":"source/image/swimming/海豚泳陆地练习.jpg","hash":"77914e6a14420b5f710ebf16d747e7d660e88c18","modified":1497102891733},{"_id":"themes/BlueLake/source/img/bg.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1496090962000},{"_id":"source/image/POI导出excel表/excel导出效果图.jpg","hash":"e41b1efe53203c34cf071a1898ebf85d52252562","modified":1483435140623},{"_id":"source/image/swimming/大跟屁虫.jpg","hash":"d85851d4af2249faf4330915ebdcae251a8aa024","modified":1497065000986},{"_id":"source/image/swimming/时尚背交叉连体.jpg","hash":"9cdf136d61f388c948a44eb174bfc4f4d87d18fc","modified":1497076922000},{"_id":"source/image/swimming/背交叉连体.jpg","hash":"99b52733ea32d09a7b5b32548ec1740a211608dd","modified":1497076680098},{"_id":"source/image/swimming/蝶泳第一次打腿.jpg","hash":"7518d031b65ab9f491ab7d260a7459dac8ab4854","modified":1497104939726},{"_id":"source/image/swimming/主题.jpg","hash":"61e9d2b1f7b6abf1f0214c9e7dde9c65f4b5470a","modified":1497026367489},{"_id":"source/image/swimming/漂流包.jpg","hash":"a368fe4a6566c400c63af6717acc0cde5101cf75","modified":1497064941658},{"_id":"source/image/swimming/花边泳衣.jpg","hash":"ca2e1248bcb1c648a4029d04e133f4509bfd14ca","modified":1497076275971},{"_id":"source/image/swimming/三角连体.jpg","hash":"0e0dd3d29ceb27d43e07617943465c4aa567bd24","modified":1497076434182},{"_id":"source/image/swimming/低边平角泳裤.jpg","hash":"2d4ef2880f12af7b30820a1673ec50262584518b","modified":1497075301796},{"_id":"source/image/swimming/分装瓶.jpg","hash":"65ba652cc2219386f59d7177594303c99de178ea","modified":1497074638882},{"_id":"public/content.json","hash":"1507b83c309f6740345bb019cd1bc20bd5d03c3e","modified":1499155859228},{"_id":"public/about/index.html","hash":"5c708e28b060bf62088146fa1d3b0eace2ecf5a1","modified":1499155859304},{"_id":"public/2017/01/17/maven引用外部jar包/index.html","hash":"2a004e9223877562a6cbb19853eb92c328a1950f","modified":1499155859304},{"_id":"public/2016/08/21/eclipse安装svn/index.html","hash":"ae61e4953369e61c4c590d592b8e31d9aa0dcab5","modified":1499155859304},{"_id":"public/2016/07/28/fatjar打包项目/index.html","hash":"ce8af93cb87a0160d03d50f2bbe7217f27fbeb1e","modified":1499155859304},{"_id":"public/2016/07/17/open implementation异常退出/index.html","hash":"d6184a287401843c1ab78f74f477aacaf7aa4dcf","modified":1499155859304},{"_id":"public/2016/07/17/Angularjs内置过滤器/index.html","hash":"b262fa698a6321ed9a86eef0632fa2092cb7b333","modified":1499155859304},{"_id":"public/2016/06/11/StaleStateException/index.html","hash":"31efa61c611d2fe4ef79175130e915bb8507c8e5","modified":1499155859304},{"_id":"public/2016/04/16/判断浏览器版本/index.html","hash":"b022f4be58df00b07b06d9cdd2098494f7eadf95","modified":1499155859304},{"_id":"public/2016/04/15/JDK1.7特性/index.html","hash":"7d18e775e0b4a21f77f7b4214fdc56f189eeb6b2","modified":1499155859304},{"_id":"public/2016/04/01/获取本地图片并显示/index.html","hash":"2b0476c20346e20e29ba9f822ca84acf758805ad","modified":1499155859304},{"_id":"public/2016/03/16/URL下载资源/index.html","hash":"8ced4cdf9adfdd64a6c4697cefdebfec1f73f590","modified":1499155859305},{"_id":"public/2016/03/13/eclipse从svn检出项目报错/index.html","hash":"ffd64601b8bcb92f702c04300deed8cef83ec2ed","modified":1499155859305},{"_id":"public/archives/index.html","hash":"f961ee79d025c1289c8f2f9196f1d30d4bc30c04","modified":1499155859305},{"_id":"public/archives/page/2/index.html","hash":"b20f48b7a2d84d7feb9414d806d41eb83f0128a1","modified":1499155859305},{"_id":"public/archives/page/3/index.html","hash":"2662fbadf673470393b9b968e190a99d8f0afc50","modified":1499155859305},{"_id":"public/archives/page/4/index.html","hash":"383a307dd0bc1aba23226701c1ea3d8bf9fa45ce","modified":1499155859305},{"_id":"public/archives/2016/index.html","hash":"b321086a55f9383e0747e419c6edd096750feca7","modified":1499155859305},{"_id":"public/archives/2016/page/2/index.html","hash":"eebe3c0f7520791334f676505fce38b178a79683","modified":1499155859305},{"_id":"public/archives/2016/page/3/index.html","hash":"dfe2db9031e121b403b1a69ec0f9621e1a53b074","modified":1499155859305},{"_id":"public/archives/2016/03/index.html","hash":"ed0359c6f3abd737a227495723f760ba2e3b6c60","modified":1499155859305},{"_id":"public/archives/2016/04/index.html","hash":"e8a46df532663f22e5d8700dfa679dc5887c6bfd","modified":1499155859305},{"_id":"public/archives/2016/05/index.html","hash":"f5a5b453fd38463bb58c86e5761281a8a2759d8a","modified":1499155859305},{"_id":"public/archives/2016/06/index.html","hash":"26d59f42510c2613bc3a98bada6ac7b5a85ac03f","modified":1499155859305},{"_id":"public/archives/2016/07/index.html","hash":"d74df2a47960dd64fd84cfa861a2f4127eb30fc8","modified":1499155859305},{"_id":"public/archives/2016/08/index.html","hash":"5abed918fa7db6155df70cc58f942a01ac76a7f4","modified":1499155859305},{"_id":"public/archives/2016/09/index.html","hash":"834d39e9be72cb2e36b30e62eda1665e6754a4ca","modified":1499155859305},{"_id":"public/archives/2016/11/index.html","hash":"889be476d589396ed24de59e1ec5dc06d0b9a58f","modified":1499155859305},{"_id":"public/archives/2017/index.html","hash":"4a22679e0bb82d13fcabf947d282fd46b7eea1c2","modified":1499155859305},{"_id":"public/archives/2017/page/2/index.html","hash":"8b11a4caf3e85a7c1394836a947f846e65c5d532","modified":1499155859305},{"_id":"public/archives/2017/01/index.html","hash":"4f218896c55bd386e960498df1d9536a7dfc8e56","modified":1499155859305},{"_id":"public/archives/2017/04/index.html","hash":"a98c2b26933368d86d566d903ee6c4700b8b262c","modified":1499155859306},{"_id":"public/archives/2017/05/index.html","hash":"08c38a7511bcc4787d600103442777070bf38b0c","modified":1499155859306},{"_id":"public/archives/2017/06/index.html","hash":"a71cc16709db1eec03b6b77558a8a32fd5e18683","modified":1499155859306},{"_id":"public/archives/2017/07/index.html","hash":"74defca70d227222fd39135bf35d42f40b698afd","modified":1499155859306},{"_id":"public/categories/AngularJs/index.html","hash":"78e265795d240833f602e48f75af1991519169d2","modified":1499155859306},{"_id":"public/categories/Java/index.html","hash":"30f7d92886e9733cf4234cb866f330a50e170b0f","modified":1499155859306},{"_id":"public/categories/Java/page/2/index.html","hash":"5c06d8db160f35cd91422dd2e97b5411b6f0d778","modified":1499155859306},{"_id":"public/categories/Java/page/3/index.html","hash":"55e386643cd9301ff48946df68bd708811d93d23","modified":1499155859306},{"_id":"public/categories/mysql/index.html","hash":"d07dad2c6accc14ee527b9a7b1c90f9898eb7c05","modified":1499155859306},{"_id":"public/categories/eclipse/index.html","hash":"a9c39e9478bbd6fa6e0161eb59223fcb38e76caa","modified":1499155859306},{"_id":"public/categories/kong/index.html","hash":"7c38810865fa434aea904f0107e1ce6ddd8791fc","modified":1499155859306},{"_id":"public/categories/html/index.html","hash":"45c10ca67ae00a10e2be93d62a460740b7b7e7a9","modified":1499155859306},{"_id":"public/categories/Swimming/index.html","hash":"3bf934ded9b26c5490b0796ae43d7e45a65e8dae","modified":1499155859306},{"_id":"public/tags/AngularJs/index.html","hash":"5e8c281ad4890b42d0c74d379484a033021d730f","modified":1499155859306},{"_id":"public/tags/js/index.html","hash":"0bb44fa069a4bb0d00eb9497406095c395d5b614","modified":1499155859306},{"_id":"public/tags/Java/index.html","hash":"f69928e7bd758dee6bdf2da4873fa2d888da4582","modified":1499155859306},{"_id":"public/tags/Java/page/2/index.html","hash":"8138ed76e85fc190f45885f8b5449dec0265d994","modified":1499155859306},{"_id":"public/tags/Java/page/3/index.html","hash":"b7d1b06ec2d2199680dc1061a0ab37b70b46cc16","modified":1499155859307},{"_id":"public/tags/excel/index.html","hash":"3a9875793604eeacc5cb86ec5c7f90cf867a071b","modified":1499155859307},{"_id":"public/tags/mybatis/index.html","hash":"83cd9ef32447962b5d080246a3c33b2084ccce78","modified":1499155859307},{"_id":"public/tags/Srping-boot/index.html","hash":"145a9981cebea89d53532ff3461281b0efdeff34","modified":1499155859307},{"_id":"public/tags/SpringMvc/index.html","hash":"a131bf381cfc211fff22f8d44e86fb865afef12f","modified":1499155859307},{"_id":"public/tags/api/index.html","hash":"62cd6731f62c708c1cb172ccf03a7d7baac9edad","modified":1499155859307},{"_id":"public/tags/hibernate/index.html","hash":"850dd1081be218b9ced142ddf5ea131c57c2e583","modified":1499155859307},{"_id":"public/tags/svn/index.html","hash":"e514009015fd51b6e03a462b5ca4e63d458eb363","modified":1499155859307},{"_id":"public/tags/eclipse/index.html","hash":"4e1d6c6e5d97c9f043570e16b36245f90ac81f63","modified":1499155859307},{"_id":"public/tags/maven/index.html","hash":"7cb767318f55d84b9f71be201ea754c7629bfce0","modified":1499155859307},{"_id":"public/tags/mysql/index.html","hash":"29fc02a9686f1845e3e9c1985f8505ca1febcf11","modified":1499155859307},{"_id":"public/tags/Tomcat/index.html","hash":"d81cca88d45266ca80443b98f6860c8ffd2042ce","modified":1499155859307},{"_id":"public/tags/kong/index.html","hash":"5f2b43374f03df967fa9bfbf61d86b521ee5d0cf","modified":1499155859307},{"_id":"public/tags/springboot/index.html","hash":"e0d65f277da3fc56cda493ba68e1ed3b37923035","modified":1499155859307},{"_id":"public/tags/mq/index.html","hash":"f03561de1ae1260724cf45d22ecfc39c7b80db7d","modified":1499155859311},{"_id":"public/tags/redis/index.html","hash":"f541534bf6139c35109ad9cf038a886217b42034","modified":1499155859311},{"_id":"public/tags/html/index.html","hash":"2c9eee9e68cff274ebd215f30f0b17f81a302f84","modified":1499155859311},{"_id":"public/tags/Swimming/index.html","hash":"9f4bbb881a9b8f315fde2919cb52c135279d3642","modified":1499155859311},{"_id":"public/2017/07/03/使用kong配置oauth2.0的坑/index.html","hash":"0e93e238b5c22fc9bc1ca41fdbf1d11dbb277369","modified":1499155859311},{"_id":"public/2017/06/10/游泳攻略/index.html","hash":"d54345ca717c1f03b0d1029b84e279be63829328","modified":1499155859311},{"_id":"public/2017/06/05/使用kong管理api/index.html","hash":"6dab5821acf46125a950b96b1adbe419f1a0efcd","modified":1499155859311},{"_id":"public/2017/05/27/springboot+rabbitmq简单使用/index.html","hash":"6bd5559786b3ffcc356ed82ac014e0a5f6622416","modified":1499155859311},{"_id":"public/2017/05/03/AOP拦截Controller/index.html","hash":"b37b37f8f2af7ad2d84dc724d0e1feb8b3dd188d","modified":1499155859311},{"_id":"public/2017/05/03/使用redis维护token/index.html","hash":"109cb802964314ce9bf8fa581245ba64a96a7ca3","modified":1499155859311},{"_id":"public/2017/04/21/Java下载文件损坏问题/index.html","hash":"33e65650c83968982e6cd311086106e1cd379b2b","modified":1499155859311},{"_id":"public/2017/01/24/Spring boot的入门使用/index.html","hash":"9c8a0655d7da6a6a8b44bc844f9fe5e5c64faa43","modified":1499155859311},{"_id":"public/2017/01/17/maven打包可执行项目/index.html","hash":"bebb0a6e04d64a7c138c3b7c8f8ac155bfda7088","modified":1499155859312},{"_id":"public/2017/01/14/SpringMvc整合Swagger UI/index.html","hash":"b8207013389c11c92cd930fe69507cd656d944db","modified":1499155859312},{"_id":"public/2017/01/03/POI导出excel表/index.html","hash":"8664170433602461b8a0868601e365fd8ee0d903","modified":1499155859312},{"_id":"public/2016/11/27/读取jar包中的文件/index.html","hash":"7f99afcd20cd63016ca50e41542042ae10c6e923","modified":1499155859312},{"_id":"public/2016/11/24/Java去除Html标签/index.html","hash":"099aec5bd085da1ab9eaf72388af97d926a77025","modified":1499155859312},{"_id":"public/2016/09/24/获取properties文件键值/index.html","hash":"9750b3fc85adbd1a33ab52366747a2475a3d5aec","modified":1499155859312},{"_id":"public/2016/08/21/Mybatis执行insert后获取主键方式/index.html","hash":"e485a13540820c9d5905a307c081116ff9809e5e","modified":1499155859312},{"_id":"public/2016/08/21/Java自定义验证注解/index.html","hash":"44bc72f792c3d645f2cc889dc60532e01db4efda","modified":1499155859312},{"_id":"public/2016/08/07/Controller异常处理/index.html","hash":"0e71837c996b954435e5953fe4ad6bdf6b84af43","modified":1499155859312},{"_id":"public/2016/07/17/SpringMvc接收参数/index.html","hash":"5e456acdab36fc4f97cb5d2f7cc59f98e73ad706","modified":1499155859312},{"_id":"public/2016/07/17/Java操作redis/index.html","hash":"8780a818cbf7fddfa33c63002a053faf22668c89","modified":1499155859312},{"_id":"public/2016/07/09/原生数据库访问/index.html","hash":"b2a754a7954addd89801067778bae990dbb766a8","modified":1499155859312},{"_id":"public/2016/06/12/tomcat配置https单-双向验证/index.html","hash":"7808f8472f4e12338fc4a7752ff0954a49c23159","modified":1499155859312},{"_id":"public/2016/05/22/获取URL链接的文件类型/index.html","hash":"629906d3b962bf3e8dda2a48d5b33e2de17788f6","modified":1499155859312},{"_id":"public/2016/05/01/mysql 1044 错误/index.html","hash":"6b966db99240e69d78e1ae71861326b4a0d23b60","modified":1499155859313},{"_id":"public/2016/04/08/log4j发邮件配置/index.html","hash":"3753036f73e90c351fe7b1f4b4ee75431a12f347","modified":1499155859313},{"_id":"public/2016/03/28/图片在数据库的保存与读取/index.html","hash":"a668d5c79f8efd510ab2a310725e446e0daa30a3","modified":1499155859313},{"_id":"public/2016/03/15/Java操作Excel/index.html","hash":"8649ad07ce06802e2fd9c3469bc1ec2994d4efff","modified":1499155859313},{"_id":"public/index.html","hash":"45aac40867b94763025ce784e4a2fd222de68484","modified":1499155859313},{"_id":"public/page/2/index.html","hash":"071208818da77b7819d7daed53ebe2b5c3f7876a","modified":1499155859313},{"_id":"public/page/3/index.html","hash":"0a77ffc5623b91e3b353f4217846c77747c63d15","modified":1499155859313},{"_id":"public/page/4/index.html","hash":"b30718741d405c519c1af3618a1bb2c5ce16d79a","modified":1499155859313},{"_id":"public/apple-touch-icon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1499155859350},{"_id":"public/favicon.ico","hash":"94e5d25d942bff5479470322454c951f2ddebac6","modified":1499155859351},{"_id":"public/image/swimming/8字浮板.jpg","hash":"08af732cd8100902d6a83ccd5f72b92b77ccae1b","modified":1499155859351},{"_id":"public/image/swimming/五分泳裤.jpg","hash":"5b62ce8cfd0cd090c46142fbea217049b0ae0d64","modified":1499155859351},{"_id":"public/image/swimming/傅爷表情.jpg","hash":"61d7476f39f4c4a014bdb9ce3ba898881c749460","modified":1499155859351},{"_id":"public/image/swimming/小跟屁虫.jpg","hash":"814b2fbbd676d4dfd6cd9ac302aacae5aef6e616","modified":1499155859351},{"_id":"public/image/swimming/打水浮板.jpg","hash":"60e8c3592f478f2505f5eaaece9e9c89f6436c49","modified":1499155859351},{"_id":"public/image/swimming/收腿.jpg","hash":"2e0cfa98d71f9d1da49d9326464bfd2f6dae71af","modified":1499155859351},{"_id":"public/image/swimming/普通平角泳裤.jpg","hash":"fd1bb501af82fe9018e41af480cf75e522158aac","modified":1499155859351},{"_id":"public/image/swimming/比基尼.jpg","hash":"3c1a50d828ca805fac16c4ee9b4083d4015e7abc","modified":1499155859351},{"_id":"public/image/swimming/泳帽的戴法.jpg","hash":"00f8c57322bc849ad2b003bcb97f85d7d18326ee","modified":1499155859351},{"_id":"public/image/swimming/海豚腿水中练习.jpg","hash":"9c25bd403a72dfe7dc80d7282045271efb912792","modified":1499155859351},{"_id":"public/image/swimming/游泳脚蹼.jpg","hash":"6fd231b50ef56224eb44b291297e082f95782717","modified":1499155859351},{"_id":"public/image/swimming/潜水脚蹼.jpg","hash":"14921de9e5bad4c26a49e256f354deb37464ac10","modified":1499155859351},{"_id":"public/image/swimming/爬泳划手.jpg","hash":"de44fb6b583a25502cd060778c6ddc188b67ffe8","modified":1499155859351},{"_id":"public/image/swimming/爬泳划水到底.jpg","hash":"43706f5a713b8606819a724dc027f78b355d3928","modified":1499155859351},{"_id":"public/image/swimming/爬泳手臂入手.jpg","hash":"74927c9c5e40f9676fc6c4a5bb6a11a90a6d7dc4","modified":1499155859351},{"_id":"public/image/swimming/爬泳换气.jpg","hash":"e807f083509f78be4a49b30936892ea15f090634","modified":1499155859351},{"_id":"public/image/swimming/爬泳柔韧性不够的移臂.jpg","hash":"a45f2b71c14ba194e116612ce9e116b623bca2d8","modified":1499155859351},{"_id":"public/image/swimming/爬泳正确移臂.jpg","hash":"d6fe5d9084635051eec377158de93cfde8e5f679","modified":1499155859351},{"_id":"public/image/swimming/爬泳腿法.jpg","hash":"bbcbd4ccb18b8ef511e55eb8a4dba600e6682442","modified":1499155859351},{"_id":"public/image/swimming/爬泳转髋.jpg","hash":"ad14427224a1c9a685bd76764d6be458176bdbe6","modified":1499155859352},{"_id":"public/image/swimming/爬泳错误移臂.jpg","hash":"0612f7db1fa54a8908599bad133ab4b6c58b4465","modified":1499155859352},{"_id":"public/image/swimming/狗爬式.jpg","hash":"54c6464e8f48126bfd628f9791c554a451e5dbfb","modified":1499155859352},{"_id":"public/image/swimming/电镀泳镜.jpg","hash":"3c7813c32674b2bd4445c353ce98d6b8459105bd","modified":1499155859352},{"_id":"public/image/swimming/竞速泳衣.jpg","hash":"b97ada478ff03f51ae47811a5bda729b331e8924","modified":1499155859352},{"_id":"public/image/swimming/蛙泳伸手蹬夹.jpg","hash":"a6980a0a482d0f3b50d633f9ca29ed78b1aeede7","modified":1499155859352},{"_id":"public/image/swimming/蛙泳内划.jpg","hash":"16bd6f3c1f1e7cc5a5ff1bfe8589c710b938606d","modified":1499155859352},{"_id":"public/image/swimming/蛙泳外划.jpg","hash":"f776179864de6ada1a2485da1a56dfe93728def3","modified":1499155859352},{"_id":"public/image/swimming/蛙泳抓腿.jpg","hash":"da4059af097e290db4bc5f6b8b75789157959ba1","modified":1499155859352},{"_id":"public/image/swimming/蛙泳翻腿.jpg","hash":"f63e5422c5c235ab15c2be02d631272e90484484","modified":1499155859352},{"_id":"public/image/swimming/蛙泳抱水.jpg","hash":"cd709a00df5a6ce8b145827bd64e7f9ce4a6776e","modified":1499155859352},{"_id":"public/image/swimming/蛙泳蹬夹.jpg","hash":"c4da56a6af9b872dca3aa7141f9b7f4fe237351a","modified":1499155859352},{"_id":"public/image/swimming/蝶仰泳.jpg","hash":"6bd6d0395cf7f0677ad8c8660e0b233760749b48","modified":1499155859352},{"_id":"public/image/swimming/蝶泳第一次打腿1.jpg","hash":"2335c1e6a8df79f14470e06f4c3a50348ac2cf2c","modified":1499155859352},{"_id":"public/image/swimming/蝶泳第二次打腿.jpg","hash":"84ba9b286dd3828aad680d44cf740cceb23a709e","modified":1499155859352},{"_id":"public/image/swimming/蝶泳第二次打腿预备.jpg","hash":"deacc7e716039af16dc135d3d0cc032b916896de","modified":1499155859352},{"_id":"public/image/swimming/透明泳镜.jpg","hash":"77557bf6c09ab822915ee3b88fd231b1fc5f4583","modified":1499155859353},{"_id":"public/image/swimming/钥匙手环.jpg","hash":"0bb5d8fc1396713a1c5e119649d53b2f65637555","modified":1499155859353},{"_id":"public/iconfont/iconfont.svg","hash":"2b6a0b21bf63bdf746130117baf432fcb44ad210","modified":1499155859353},{"_id":"public/iconfont/iconfont.eot","hash":"e664dd848ca65fe3aca4acfc234ff9c18ffd4c33","modified":1499155859353},{"_id":"public/iconfont/iconfont.ttf","hash":"5770696cc0d19d9c9479912a5cf54c9dd4ab24c4","modified":1499155859353},{"_id":"public/iconfont/iconfont.woff","hash":"df2bd849134cbd02beb385e5061a30b923c99058","modified":1499155859353},{"_id":"public/image/swimming/大框泳镜.jpg","hash":"bdb417b848103f15209386cdcb010aedfc79ce12","modified":1499155859736},{"_id":"public/image/swimming/海豚泳陆地练习.jpg","hash":"77914e6a14420b5f710ebf16d747e7d660e88c18","modified":1499155859740},{"_id":"public/img/bg.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1499155859740},{"_id":"public/css/highlight.css","hash":"fb0403feb34cc8bb8b1f28f238540d36588b86df","modified":1499155859749},{"_id":"public/js/search.json.js","hash":"a0e8dfee9b9845aabd64360d497df7c0767b7235","modified":1499155859749},{"_id":"public/js/totop.js","hash":"5b1131830209c2daaf6fe34c5e39ab7c1059bfa4","modified":1499155859750},{"_id":"public/js/toctotop.js","hash":"ad6386bc746ff375715ca9da17af4716ea86e06a","modified":1499155859750},{"_id":"public/css/style.css","hash":"ff7dfbfec144f0f6b11e3662c724e2ec942fb3cc","modified":1499155859750},{"_id":"public/image/POI导出excel表/excel导出效果图.jpg","hash":"e41b1efe53203c34cf071a1898ebf85d52252562","modified":1499155859750},{"_id":"public/image/swimming/大跟屁虫.jpg","hash":"d85851d4af2249faf4330915ebdcae251a8aa024","modified":1499155859750},{"_id":"public/image/swimming/时尚背交叉连体.jpg","hash":"9cdf136d61f388c948a44eb174bfc4f4d87d18fc","modified":1499155859750},{"_id":"public/image/swimming/背交叉连体.jpg","hash":"99b52733ea32d09a7b5b32548ec1740a211608dd","modified":1499155859750},{"_id":"public/image/swimming/蝶泳第一次打腿.jpg","hash":"7518d031b65ab9f491ab7d260a7459dac8ab4854","modified":1499155859750},{"_id":"public/image/swimming/主题.jpg","hash":"61e9d2b1f7b6abf1f0214c9e7dde9c65f4b5470a","modified":1499155859754},{"_id":"public/image/swimming/漂流包.jpg","hash":"a368fe4a6566c400c63af6717acc0cde5101cf75","modified":1499155859754},{"_id":"public/image/swimming/花边泳衣.jpg","hash":"ca2e1248bcb1c648a4029d04e133f4509bfd14ca","modified":1499155859755},{"_id":"public/image/swimming/三角连体.jpg","hash":"0e0dd3d29ceb27d43e07617943465c4aa567bd24","modified":1499155859764},{"_id":"public/image/swimming/低边平角泳裤.jpg","hash":"2d4ef2880f12af7b30820a1673ec50262584518b","modified":1499155859939},{"_id":"public/image/swimming/分装瓶.jpg","hash":"65ba652cc2219386f59d7177594303c99de178ea","modified":1499155859940}],"Category":[{"name":"AngularJs","_id":"cj4paou3o0003po2ylub2ky2l"},{"name":"Java","_id":"cj4paou3x0008po2yksi6crc3"},{"name":"mysql","_id":"cj4paou5b0020po2ymgj3tw8z"},{"name":"eclipse","_id":"cj4paou5f002apo2yetuske5l"},{"name":"kong","_id":"cj4paou5j002ipo2ywlz4284p"},{"name":"html","_id":"cj4paou5x002qpo2y21v8hc74"},{"name":"Swimming","_id":"cj4paou620031po2yg5qkqcs8"}],"Data":[],"Page":[{"title":"about","date":"2017-06-13T07:31:34.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-06-13 15:31:34\n---","updated":"2017-06-14T03:00:12.805Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj4paou3l0001po2yaeos6iqs","content":"","excerpt":"","more":""}],"Post":[{"title":"Angularjs内置过滤器","date":"2016-07-17T03:45:42.000Z","_content":"**currency（货币处理）：**\n&#123;{ num | currency:'¥;'}}\n**date（日期格式化）：**\n&#123;{date | date:'yyyy-MM-dd hh:mm:ss EEEE'}}\n**filter（匹配子串）：**\n&#123;{ childrenArray | filter : 'a' }} // 匹配属性值中含有a的\n&#123;{ childrenArray | filter : 4 }} // 匹配属性值中含有4的\n&#123;{ childrenArray | filter : {name : 'i'} }} // 参数是对象，匹配name属性中含有i的\n&#123;{childrenArray | filter : func }} // 参数是函数，指定返回age>4的\n$scope.func = function(e) {return e.age&gt;4;}\n**格式化json对象一般用来调试，看看输出的json串**\njson\n**limitTo（限制数组长度或字符串长度）：**&#123;{ childrenArray | limitTo : 2 }} // 将会显示数组中的前两项\n**lowercase（小写）**\n**uppercase（大写）**\n**number（格式化数字）**\n &#123;{num | number:2}}// 保留2位小数\n**orderBy（排序）**\n&lt;div&gt;&#123;{ childrenArray | orderBy : 'age' }}&lt;/div&gt; // 按age属性值进行排序，若是-age，则倒序\n&lt;div&gt;&#123;{ childrenArray | orderBy : orderFunc }}&lt;/div&gt; // 按照函数的返回值进行排序\n&lt;div&gt;&#123;{ childrenArray | orderBy : ['age','name'] }}&lt;/div&gt; // 如果age相同，按照name进行排序","source":"_posts/Angularjs内置过滤器.md","raw":"---\ntitle: Angularjs内置过滤器\ndate: 2016-07-17 11:45:42\ncategories: [AngularJs]\ntags: [AngularJs,js]\n---\n**currency（货币处理）：**\n&#123;{ num | currency:'¥;'}}\n**date（日期格式化）：**\n&#123;{date | date:'yyyy-MM-dd hh:mm:ss EEEE'}}\n**filter（匹配子串）：**\n&#123;{ childrenArray | filter : 'a' }} // 匹配属性值中含有a的\n&#123;{ childrenArray | filter : 4 }} // 匹配属性值中含有4的\n&#123;{ childrenArray | filter : {name : 'i'} }} // 参数是对象，匹配name属性中含有i的\n&#123;{childrenArray | filter : func }} // 参数是函数，指定返回age>4的\n$scope.func = function(e) {return e.age&gt;4;}\n**格式化json对象一般用来调试，看看输出的json串**\njson\n**limitTo（限制数组长度或字符串长度）：**&#123;{ childrenArray | limitTo : 2 }} // 将会显示数组中的前两项\n**lowercase（小写）**\n**uppercase（大写）**\n**number（格式化数字）**\n &#123;{num | number:2}}// 保留2位小数\n**orderBy（排序）**\n&lt;div&gt;&#123;{ childrenArray | orderBy : 'age' }}&lt;/div&gt; // 按age属性值进行排序，若是-age，则倒序\n&lt;div&gt;&#123;{ childrenArray | orderBy : orderFunc }}&lt;/div&gt; // 按照函数的返回值进行排序\n&lt;div&gt;&#123;{ childrenArray | orderBy : ['age','name'] }}&lt;/div&gt; // 如果age相同，按照name进行排序","slug":"Angularjs内置过滤器","published":1,"updated":"2017-01-17T08:09:57.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou3i0000po2ygkpupvjk","content":"<p><strong>currency（货币处理）：</strong><br>&#123;{ num | currency:’¥;’}}<br><strong>date（日期格式化）：</strong><br>&#123;{date | date:’yyyy-MM-dd hh:mm:ss EEEE’}}<br><strong>filter（匹配子串）：</strong><br>&#123;{ childrenArray | filter : ‘a’ }} // 匹配属性值中含有a的<br>&#123;{ childrenArray | filter : 4 }} // 匹配属性值中含有4的<br>&#123;{ childrenArray | filter : {name : ‘i’} }} // 参数是对象，匹配name属性中含有i的<br>&#123;{childrenArray | filter : func }} // 参数是函数，指定返回age&gt;4的<br>$scope.func = function(e) {return e.age&gt;4;}<br><strong>格式化json对象一般用来调试，看看输出的json串</strong><br>json<br><strong>limitTo（限制数组长度或字符串长度）：</strong>&#123;{ childrenArray | limitTo : 2 }} // 将会显示数组中的前两项<br><strong>lowercase（小写）</strong><br><strong>uppercase（大写）</strong><br><strong>number（格式化数字）</strong><br> &#123;{num | number:2}}// 保留2位小数<br><strong>orderBy（排序）</strong><br>&lt;div&gt;&#123;{ childrenArray | orderBy : ‘age’ }}&lt;/div&gt; // 按age属性值进行排序，若是-age，则倒序<br>&lt;div&gt;&#123;{ childrenArray | orderBy : orderFunc }}&lt;/div&gt; // 按照函数的返回值进行排序<br>&lt;div&gt;&#123;{ childrenArray | orderBy : [‘age’,’name’] }}&lt;/div&gt; // 如果age相同，按照name进行排序</p>\n","excerpt":"","more":"<p><strong>currency（货币处理）：</strong><br>&#123;{ num | currency:’¥;’}}<br><strong>date（日期格式化）：</strong><br>&#123;{date | date:’yyyy-MM-dd hh:mm:ss EEEE’}}<br><strong>filter（匹配子串）：</strong><br>&#123;{ childrenArray | filter : ‘a’ }} // 匹配属性值中含有a的<br>&#123;{ childrenArray | filter : 4 }} // 匹配属性值中含有4的<br>&#123;{ childrenArray | filter : {name : ‘i’} }} // 参数是对象，匹配name属性中含有i的<br>&#123;{childrenArray | filter : func }} // 参数是函数，指定返回age&gt;4的<br>$scope.func = function(e) {return e.age&gt;4;}<br><strong>格式化json对象一般用来调试，看看输出的json串</strong><br>json<br><strong>limitTo（限制数组长度或字符串长度）：</strong>&#123;{ childrenArray | limitTo : 2 }} // 将会显示数组中的前两项<br><strong>lowercase（小写）</strong><br><strong>uppercase（大写）</strong><br><strong>number（格式化数字）</strong><br> &#123;{num | number:2}}// 保留2位小数<br><strong>orderBy（排序）</strong><br>&lt;div&gt;&#123;{ childrenArray | orderBy : ‘age’ }}&lt;/div&gt; // 按age属性值进行排序，若是-age，则倒序<br>&lt;div&gt;&#123;{ childrenArray | orderBy : orderFunc }}&lt;/div&gt; // 按照函数的返回值进行排序<br>&lt;div&gt;&#123;{ childrenArray | orderBy : [‘age’,’name’] }}&lt;/div&gt; // 如果age相同，按照name进行排序</p>\n"},{"title":"AOP拦截Controller处理@RequestBody注入参数问题","date":"2017-05-03T09:24:26.000Z","_content":"**问题：** 使用springMVC，一些请求前的校验，都可以在拦截器或者过滤器里做处理，处理完后到Controller层再根据喜好做相关操作，但是遇到content-type是application/json等放在body体里的就尴尬了，读完body，在Controller就无法再获取一次了，或许你可以把request的inputStream读出来缓存两份。但这要动根基了，不划算。另外，如果需要改变某个参数再由@RequestBody注入，又是一个尴尬的问题，可以把<mvc:message-converters>配置的Json处理写成自己的逻辑。但所有请求都经过这个也显得累赘。\n\n**键值形式的传参处理**\n```Java\npackage com.sq580.mall.order.web;\n\nimport java.io.IOException;\n\nimport javax.servlet.Filter;\nimport javax.servlet.FilterChain;\nimport javax.servlet.FilterConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\npublic class XxxInterceptor implements Filter {\n\n    @Override\n    public void destroy() {}\n\n    @Override\n    public void doFilter(ServletRequest arg0, ServletResponse arg1, FilterChain arg2) throws IOException,\n            ServletException {\n        HttpServletRequest req = (HttpServletRequest) arg0;\n        ServletRequest requestWrapper = new ParameterRequestWrapper(req);\n        String body = HttpHelper.getBodyString(requestWrapper);\n        System.out.println(body);\n        // 自己拦截的逻辑\n        arg2.doFilter(requestWrapper, (HttpServletResponse) arg1);\n    }\n\n    @Override\n    public void init(FilterConfig arg0) throws ServletException {}\n}\n```\n```Java\npackage com.xxx;\n\nimport java.io.BufferedReader;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.nio.charset.Charset;\nimport java.util.Enumeration;\n\nimport javax.servlet.ServletInputStream;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletRequestWrapper;\n\npublic class ParameterRequestWrapper extends HttpServletRequestWrapper {\n\tprivate final byte[] body;\n\n    public ParameterRequestWrapper(HttpServletRequest request) throws IOException {\n        super(request);\n        body = HttpHelper.getBodyString(request).getBytes(Charset.forName(\"UTF-8\"));\n    }\n\n    @Override\n    public BufferedReader getReader() throws IOException {\n        return new BufferedReader(new InputStreamReader(getInputStream()));\n    }\n\n    @Override\n    public ServletInputStream getInputStream() throws IOException {\n        final ByteArrayInputStream bais = new ByteArrayInputStream(body);\n        return new ServletInputStream() {\n            @Override\n            public int read() throws IOException {\n                return bais.read();\n            }\n        };\n    }\n\n    @Override\n    public String getHeader(String name) {\n        return super.getHeader(name);\n    }\n\n    @Override\n    public Enumeration<String> getHeaderNames() {\n        return super.getHeaderNames();\n    }\n\n    @Override\n    public Enumeration<String> getHeaders(String name) {\n        return super.getHeaders(name);\n    }\n}\n```\nHttpHelper工具类\n```Java\npackage com.xxx;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.nio.charset.Charset;\n\nimport javax.servlet.ServletRequest;\n\npublic class HttpHelper {\n    /**\n     * 获取请求Body\n     * @param request\n     * @return\n     */\n    public static String getBodyString(ServletRequest request) {\n        StringBuilder sb = new StringBuilder();\n        InputStream inputStream = null;\n        BufferedReader reader = null;\n        try {\n            inputStream = request.getInputStream();\n            reader = new BufferedReader(new InputStreamReader(inputStream, Charset.forName(\"UTF-8\")));\n            String line = \"\";\n            while ((line = reader.readLine()) != null) {\n                sb.append(line);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (inputStream != null) {\n                try {\n                    inputStream.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (reader != null) {\n                try {\n                    reader.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return sb.toString();\n    }\n\n}\n```\nweb.xml\n```XML\n<filter>\n\t<filter-name>requestFilter</filter-name>\n\t<filter-class>com.xxx.XxxInterceptor</filter-class>\n</filter>\n<filter-mapping>\n\t<filter-name>requestFilter</filter-name>\n\t<url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n\n**body传参处理** 使用aop来切Controller中的方法，这时参数已经注入了，不存在重复读request流的问题\n**注意：** 这里开启aop的配置需要写在springmvc中，不能写在spring的applicationContext.xml中，两者有所区别\n```XML\n<aop:aspectj-autoproxy proxy-target-class=\"true\" />\n<context:component-scan base-package=\"com.xxx\" />\n```\n切面的使用，注意要扫包\n```Java\n@Aspect\n@Component\npublic class PariseAspect {\n\n\t// 第一个*表示所有返回类型，第二段是com.xxx包下任何包的所有后缀为Controller的类的所有方法，(..)表示方法所带任何参数\n\t@Pointcut(\"execution(* com.xxx.*.*Controller.*(..))\")    \n    public  void controllerAspect() {}\n\n\t// @Before是指在方法执行前执行，@After指在方法执行后执行，这两个都好理解，@Around并不是在方法执行过程循环执行，它表示的是\n\t/* {\n\t\t// before\n\t\t// 你可以让它继续执行，也可以返回，是这么一种环绕意义，有点类似过滤器\n\t\t// after\n\t}*/\n\t@Around(\"controllerAspect()\")\n\tpublic Object checkToken(ProceedingJoinPoint point) {\n\t\t// 获取所有参数，自己断点可以理解清楚点，一般第一个为@RequestBody所注入的对象，第二个为BindingResult，假设对象中有个userId，此处改变了对象的值后，通知继续执行\n\t\tObject[] args = point.getArgs();\n\t\tClass clazz = args[0].getClass();\n\t\tMethod m = clazz.getDeclaredMethod(\"setUserId\", Long.class);\n\t\tif (null != m) {\n\t\t\tm.invoke(arg, 1L);\n\t\t\targs[1] = arg;\n\t\t} else {\n\t\t\t// 返回错误\n\t\t\treturn \"error.jsp\";\n\t\t}\n\t\treturn point.proceed(args);\n\t}\n\n}\n```","source":"_posts/AOP拦截Controller.md","raw":"---\ntitle: AOP拦截Controller处理@RequestBody注入参数问题\ndate: 2017-05-03 17:24:26\ncategories: [Java]\ntags: [Java]\n---\n**问题：** 使用springMVC，一些请求前的校验，都可以在拦截器或者过滤器里做处理，处理完后到Controller层再根据喜好做相关操作，但是遇到content-type是application/json等放在body体里的就尴尬了，读完body，在Controller就无法再获取一次了，或许你可以把request的inputStream读出来缓存两份。但这要动根基了，不划算。另外，如果需要改变某个参数再由@RequestBody注入，又是一个尴尬的问题，可以把<mvc:message-converters>配置的Json处理写成自己的逻辑。但所有请求都经过这个也显得累赘。\n\n**键值形式的传参处理**\n```Java\npackage com.sq580.mall.order.web;\n\nimport java.io.IOException;\n\nimport javax.servlet.Filter;\nimport javax.servlet.FilterChain;\nimport javax.servlet.FilterConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\npublic class XxxInterceptor implements Filter {\n\n    @Override\n    public void destroy() {}\n\n    @Override\n    public void doFilter(ServletRequest arg0, ServletResponse arg1, FilterChain arg2) throws IOException,\n            ServletException {\n        HttpServletRequest req = (HttpServletRequest) arg0;\n        ServletRequest requestWrapper = new ParameterRequestWrapper(req);\n        String body = HttpHelper.getBodyString(requestWrapper);\n        System.out.println(body);\n        // 自己拦截的逻辑\n        arg2.doFilter(requestWrapper, (HttpServletResponse) arg1);\n    }\n\n    @Override\n    public void init(FilterConfig arg0) throws ServletException {}\n}\n```\n```Java\npackage com.xxx;\n\nimport java.io.BufferedReader;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.nio.charset.Charset;\nimport java.util.Enumeration;\n\nimport javax.servlet.ServletInputStream;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletRequestWrapper;\n\npublic class ParameterRequestWrapper extends HttpServletRequestWrapper {\n\tprivate final byte[] body;\n\n    public ParameterRequestWrapper(HttpServletRequest request) throws IOException {\n        super(request);\n        body = HttpHelper.getBodyString(request).getBytes(Charset.forName(\"UTF-8\"));\n    }\n\n    @Override\n    public BufferedReader getReader() throws IOException {\n        return new BufferedReader(new InputStreamReader(getInputStream()));\n    }\n\n    @Override\n    public ServletInputStream getInputStream() throws IOException {\n        final ByteArrayInputStream bais = new ByteArrayInputStream(body);\n        return new ServletInputStream() {\n            @Override\n            public int read() throws IOException {\n                return bais.read();\n            }\n        };\n    }\n\n    @Override\n    public String getHeader(String name) {\n        return super.getHeader(name);\n    }\n\n    @Override\n    public Enumeration<String> getHeaderNames() {\n        return super.getHeaderNames();\n    }\n\n    @Override\n    public Enumeration<String> getHeaders(String name) {\n        return super.getHeaders(name);\n    }\n}\n```\nHttpHelper工具类\n```Java\npackage com.xxx;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.nio.charset.Charset;\n\nimport javax.servlet.ServletRequest;\n\npublic class HttpHelper {\n    /**\n     * 获取请求Body\n     * @param request\n     * @return\n     */\n    public static String getBodyString(ServletRequest request) {\n        StringBuilder sb = new StringBuilder();\n        InputStream inputStream = null;\n        BufferedReader reader = null;\n        try {\n            inputStream = request.getInputStream();\n            reader = new BufferedReader(new InputStreamReader(inputStream, Charset.forName(\"UTF-8\")));\n            String line = \"\";\n            while ((line = reader.readLine()) != null) {\n                sb.append(line);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if (inputStream != null) {\n                try {\n                    inputStream.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            if (reader != null) {\n                try {\n                    reader.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return sb.toString();\n    }\n\n}\n```\nweb.xml\n```XML\n<filter>\n\t<filter-name>requestFilter</filter-name>\n\t<filter-class>com.xxx.XxxInterceptor</filter-class>\n</filter>\n<filter-mapping>\n\t<filter-name>requestFilter</filter-name>\n\t<url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n\n**body传参处理** 使用aop来切Controller中的方法，这时参数已经注入了，不存在重复读request流的问题\n**注意：** 这里开启aop的配置需要写在springmvc中，不能写在spring的applicationContext.xml中，两者有所区别\n```XML\n<aop:aspectj-autoproxy proxy-target-class=\"true\" />\n<context:component-scan base-package=\"com.xxx\" />\n```\n切面的使用，注意要扫包\n```Java\n@Aspect\n@Component\npublic class PariseAspect {\n\n\t// 第一个*表示所有返回类型，第二段是com.xxx包下任何包的所有后缀为Controller的类的所有方法，(..)表示方法所带任何参数\n\t@Pointcut(\"execution(* com.xxx.*.*Controller.*(..))\")    \n    public  void controllerAspect() {}\n\n\t// @Before是指在方法执行前执行，@After指在方法执行后执行，这两个都好理解，@Around并不是在方法执行过程循环执行，它表示的是\n\t/* {\n\t\t// before\n\t\t// 你可以让它继续执行，也可以返回，是这么一种环绕意义，有点类似过滤器\n\t\t// after\n\t}*/\n\t@Around(\"controllerAspect()\")\n\tpublic Object checkToken(ProceedingJoinPoint point) {\n\t\t// 获取所有参数，自己断点可以理解清楚点，一般第一个为@RequestBody所注入的对象，第二个为BindingResult，假设对象中有个userId，此处改变了对象的值后，通知继续执行\n\t\tObject[] args = point.getArgs();\n\t\tClass clazz = args[0].getClass();\n\t\tMethod m = clazz.getDeclaredMethod(\"setUserId\", Long.class);\n\t\tif (null != m) {\n\t\t\tm.invoke(arg, 1L);\n\t\t\targs[1] = arg;\n\t\t} else {\n\t\t\t// 返回错误\n\t\t\treturn \"error.jsp\";\n\t\t}\n\t\treturn point.proceed(args);\n\t}\n\n}\n```","slug":"AOP拦截Controller","published":1,"updated":"2017-05-03T10:07:29.629Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou3m0002po2yhpnqyk46","content":"<p><strong>问题：</strong> 使用springMVC，一些请求前的校验，都可以在拦截器或者过滤器里做处理，处理完后到Controller层再根据喜好做相关操作，但是遇到content-type是application/json等放在body体里的就尴尬了，读完body，在Controller就无法再获取一次了，或许你可以把request的inputStream读出来缓存两份。但这要动根基了，不划算。另外，如果需要改变某个参数再由@RequestBody注入，又是一个尴尬的问题，可以把<mvc:message-converters>配置的Json处理写成自己的逻辑。但所有请求都经过这个也显得累赘。</mvc:message-converters></p>\n<p><strong>键值形式的传参处理</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.sq580.mall.order.web;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.Filter;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.FilterChain;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.FilterConfig;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletResponse;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">XxxInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(ServletRequest arg0, ServletResponse arg1, FilterChain arg2)</span> <span class=\"keyword\">throws</span> IOException,</span></div><div class=\"line\">            ServletException &#123;</div><div class=\"line\">        HttpServletRequest req = (HttpServletRequest) arg0;</div><div class=\"line\">        ServletRequest requestWrapper = <span class=\"keyword\">new</span> ParameterRequestWrapper(req);</div><div class=\"line\">        String body = HttpHelper.getBodyString(requestWrapper);</div><div class=\"line\">        System.out.println(body);</div><div class=\"line\">        <span class=\"comment\">// 自己拦截的逻辑</span></div><div class=\"line\">        arg2.doFilter(requestWrapper, (HttpServletResponse) arg1);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(FilterConfig arg0)</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.xxx;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Enumeration;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequestWrapper;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ParameterRequestWrapper</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServletRequestWrapper</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">byte</span>[] body;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ParameterRequestWrapper</span><span class=\"params\">(HttpServletRequest request)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(request);</div><div class=\"line\">        body = HttpHelper.getBodyString(request).getBytes(Charset.forName(<span class=\"string\">\"UTF-8\"</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> BufferedReader <span class=\"title\">getReader</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(getInputStream()));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ServletInputStream <span class=\"title\">getInputStream</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> ByteArrayInputStream bais = <span class=\"keyword\">new</span> ByteArrayInputStream(body);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ServletInputStream() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> bais.read();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getHeader</span><span class=\"params\">(String name)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getHeader(name);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Enumeration&lt;String&gt; <span class=\"title\">getHeaderNames</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getHeaderNames();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Enumeration&lt;String&gt; <span class=\"title\">getHeaders</span><span class=\"params\">(String name)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getHeaders(name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>HttpHelper工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.xxx;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletRequest;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpHelper</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 获取请求Body</div><div class=\"line\">     * <span class=\"doctag\">@param</span> request</div><div class=\"line\">     * <span class=\"doctag\">@return</span></div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getBodyString</span><span class=\"params\">(ServletRequest request)</span> </span>&#123;</div><div class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        InputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">        BufferedReader reader = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            inputStream = request.getInputStream();</div><div class=\"line\">            reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(inputStream, Charset.forName(<span class=\"string\">\"UTF-8\"</span>)));</div><div class=\"line\">            String line = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">while</span> ((line = reader.readLine()) != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                sb.append(line);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (inputStream != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                    inputStream.close();</div><div class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (reader != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                    reader.close();</div><div class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> sb.toString();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>web.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>requestFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>com.xxx.XxxInterceptor<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>requestFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><strong>body传参处理</strong> 使用aop来切Controller中的方法，这时参数已经注入了，不存在重复读request流的问题<br><strong>注意：</strong> 这里开启aop的配置需要写在springmvc中，不能写在spring的applicationContext.xml中，两者有所区别<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span> <span class=\"attr\">proxy-target-class</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.xxx\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>切面的使用，注意要扫包<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PariseAspect</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 第一个*表示所有返回类型，第二段是com.xxx包下任何包的所有后缀为Controller的类的所有方法，(..)表示方法所带任何参数</span></div><div class=\"line\">\t<span class=\"meta\">@Pointcut</span>(<span class=\"string\">\"execution(* com.xxx.*.*Controller.*(..))\"</span>)    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">controllerAspect</span><span class=\"params\">()</span> </span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// @Before是指在方法执行前执行，@After指在方法执行后执行，这两个都好理解，@Around并不是在方法执行过程循环执行，它表示的是</span></div><div class=\"line\">\t<span class=\"comment\">/* &#123;</span></div><div class=\"line\">\t\t// before</div><div class=\"line\">\t\t// 你可以让它继续执行，也可以返回，是这么一种环绕意义，有点类似过滤器</div><div class=\"line\">\t\t// after</div><div class=\"line\">\t&#125;*/</div><div class=\"line\">\t<span class=\"meta\">@Around</span>(<span class=\"string\">\"controllerAspect()\"</span>)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">checkToken</span><span class=\"params\">(ProceedingJoinPoint point)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取所有参数，自己断点可以理解清楚点，一般第一个为@RequestBody所注入的对象，第二个为BindingResult，假设对象中有个userId，此处改变了对象的值后，通知继续执行</span></div><div class=\"line\">\t\tObject[] args = point.getArgs();</div><div class=\"line\">\t\tClass clazz = args[<span class=\"number\">0</span>].getClass();</div><div class=\"line\">\t\tMethod m = clazz.getDeclaredMethod(<span class=\"string\">\"setUserId\"</span>, Long.class);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != m) &#123;</div><div class=\"line\">\t\t\tm.invoke(arg, <span class=\"number\">1L</span>);</div><div class=\"line\">\t\t\targs[<span class=\"number\">1</span>] = arg;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 返回错误</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"error.jsp\"</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> point.proceed(args);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p><strong>问题：</strong> 使用springMVC，一些请求前的校验，都可以在拦截器或者过滤器里做处理，处理完后到Controller层再根据喜好做相关操作，但是遇到content-type是application/json等放在body体里的就尴尬了，读完body，在Controller就无法再获取一次了，或许你可以把request的inputStream读出来缓存两份。但这要动根基了，不划算。另外，如果需要改变某个参数再由@RequestBody注入，又是一个尴尬的问题，可以把<mvc:message-converters>配置的Json处理写成自己的逻辑。但所有请求都经过这个也显得累赘。</p>\n<p><strong>键值形式的传参处理</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.sq580.mall.order.web;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.Filter;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.FilterChain;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.FilterConfig;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletResponse;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">XxxInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(ServletRequest arg0, ServletResponse arg1, FilterChain arg2)</span> <span class=\"keyword\">throws</span> IOException,</div><div class=\"line\">            ServletException </span>&#123;</div><div class=\"line\">        HttpServletRequest req = (HttpServletRequest) arg0;</div><div class=\"line\">        ServletRequest requestWrapper = <span class=\"keyword\">new</span> ParameterRequestWrapper(req);</div><div class=\"line\">        String body = HttpHelper.getBodyString(requestWrapper);</div><div class=\"line\">        System.out.println(body);</div><div class=\"line\">        <span class=\"comment\">// 自己拦截的逻辑</span></div><div class=\"line\">        arg2.doFilter(requestWrapper, (HttpServletResponse) arg1);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(FilterConfig arg0)</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.xxx;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Enumeration;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequestWrapper;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ParameterRequestWrapper</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServletRequestWrapper</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">byte</span>[] body;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ParameterRequestWrapper</span><span class=\"params\">(HttpServletRequest request)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(request);</div><div class=\"line\">        body = HttpHelper.getBodyString(request).getBytes(Charset.forName(<span class=\"string\">\"UTF-8\"</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> BufferedReader <span class=\"title\">getReader</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(getInputStream()));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ServletInputStream <span class=\"title\">getInputStream</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> ByteArrayInputStream bais = <span class=\"keyword\">new</span> ByteArrayInputStream(body);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ServletInputStream() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> bais.read();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getHeader</span><span class=\"params\">(String name)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getHeader(name);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Enumeration&lt;String&gt; <span class=\"title\">getHeaderNames</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getHeaderNames();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Enumeration&lt;String&gt; <span class=\"title\">getHeaders</span><span class=\"params\">(String name)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.getHeaders(name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>HttpHelper工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.xxx;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletRequest;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpHelper</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 获取请求Body</div><div class=\"line\">     * <span class=\"doctag\">@param</span> request</div><div class=\"line\">     * <span class=\"doctag\">@return</span></div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getBodyString</span><span class=\"params\">(ServletRequest request)</span> </span>&#123;</div><div class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        InputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">        BufferedReader reader = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            inputStream = request.getInputStream();</div><div class=\"line\">            reader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(inputStream, Charset.forName(<span class=\"string\">\"UTF-8\"</span>)));</div><div class=\"line\">            String line = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">while</span> ((line = reader.readLine()) != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                sb.append(line);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (inputStream != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                    inputStream.close();</div><div class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (reader != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                    reader.close();</div><div class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> sb.toString();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>web.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>requestFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>com.xxx.XxxInterceptor<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>requestFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><strong>body传参处理</strong> 使用aop来切Controller中的方法，这时参数已经注入了，不存在重复读request流的问题<br><strong>注意：</strong> 这里开启aop的配置需要写在springmvc中，不能写在spring的applicationContext.xml中，两者有所区别<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span> <span class=\"attr\">proxy-target-class</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.xxx\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>切面的使用，注意要扫包<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PariseAspect</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 第一个*表示所有返回类型，第二段是com.xxx包下任何包的所有后缀为Controller的类的所有方法，(..)表示方法所带任何参数</span></div><div class=\"line\">\t<span class=\"meta\">@Pointcut</span>(<span class=\"string\">\"execution(* com.xxx.*.*Controller.*(..))\"</span>)    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">controllerAspect</span><span class=\"params\">()</span> </span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// @Before是指在方法执行前执行，@After指在方法执行后执行，这两个都好理解，@Around并不是在方法执行过程循环执行，它表示的是</span></div><div class=\"line\">\t<span class=\"comment\">/* &#123;</div><div class=\"line\">\t\t// before</div><div class=\"line\">\t\t// 你可以让它继续执行，也可以返回，是这么一种环绕意义，有点类似过滤器</div><div class=\"line\">\t\t// after</div><div class=\"line\">\t&#125;*/</span></div><div class=\"line\">\t<span class=\"meta\">@Around</span>(<span class=\"string\">\"controllerAspect()\"</span>)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">checkToken</span><span class=\"params\">(ProceedingJoinPoint point)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取所有参数，自己断点可以理解清楚点，一般第一个为@RequestBody所注入的对象，第二个为BindingResult，假设对象中有个userId，此处改变了对象的值后，通知继续执行</span></div><div class=\"line\">\t\tObject[] args = point.getArgs();</div><div class=\"line\">\t\tClass clazz = args[<span class=\"number\">0</span>].getClass();</div><div class=\"line\">\t\tMethod m = clazz.getDeclaredMethod(<span class=\"string\">\"setUserId\"</span>, Long.class);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != m) &#123;</div><div class=\"line\">\t\t\tm.invoke(arg, <span class=\"number\">1L</span>);</div><div class=\"line\">\t\t\targs[<span class=\"number\">1</span>] = arg;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 返回错误</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"error.jsp\"</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> point.proceed(args);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"Controller异常处理","date":"2016-08-07T02:29:33.000Z","_content":"```\n一般来说，项目中的错误最好手动处理，避免尴尬直接抛错给请求者，但是在一些特殊情况中，比如我们在用\nSpringMvc的@RequestBody注入对象的时候可能很方便，但是在联调阶段也会出现很多尴尬的问题，\n比如我们定义了一个注入的model中的price是一个decimal类型，那么按理说需要前端提供一个类似0.00的值上来，\n但是像网页端，若是用input标签来实现且price非必填，一般就直接传了个\"\"上来，这是注入的时候就会出现\n类型转换失败的情况。\n```\n下面回到正题，使用@ExceptionHandler，当Controller中任何一个方法发生异常，定义一个默认的方法拦截，一般来说最好定义在父类中，然后所有Controller都继承该类\n代码示例：\n```Java\nimport com.alibaba.fastjson.JSONException;\n\n@Controller\npublic class AccessController {\n\n    /**\n\t * 异常控制\n\t* @Title: handleOtherExceptions\n\t* @Description: RequestBody用fastjson解析出错的统一处理\n\t* @param @param ex\n\t* @param @return    \n\t* @return ResponseEntity<Object>    \n\t* @throws\n\t */\n\t@ExceptionHandler(JSONException.class)\n\tpublic ResponseEntity<Object> handleOtherExceptions(JSONException e) {\n\t\tResult result = new Result();\n\t\t\n\t\tString eMsg = e.getMessage();\n\t\tif (eMsg.contains(\"not match : - \")) {\n\t\t\tresult.setFailResultMsg(\"json数据格式不正确，没有匹配的 '}' 或 '\\\"'\");\n\t\t} else if (eMsg.contains(\"unclosed string\")) {\n\t\t\tresult.setFailResultMsg(\"json数据格式不正确，没有闭合的 '\\\"'\");\n\t\t} else if(eMsg.contains(\"syntax error, \")) {\n\t\t\tresult.setFailResultMsg(\"json数据格式不正确： \");\n\t\t} else if (eMsg.contains(\"can not cast to\")) {\n\t\t\tString[] msg = eMsg.split(\" \");\n\t\t\tresult.setFailResultMsg(\"转换类型失败：值 '\" + msg[7] + \"' 不能转成 \"\n\t\t\t\t\t\t\t\t\t+ msg[4].replace(\",\", \"\") + \" 类型\");\n\t\t} else {\n\t\t\tresult.setFailResultMsg(\"未知异常： \" + eMsg);\n\t\t}\n\t\t\n\t\treturn new ResponseEntity<Object>(result, HttpStatus.OK);\n\t}\n}\n```\n还有一种方式，使用 @ControllerAdvice只要把这个类放在项目中，Spring能扫描到的地方，就可以实现全局异常的回调。\n代码示例：\n```Java\n@ControllerAdvice\npublic class SpringExceptionHandler {\n\t\t/** \n\t\t * 全局处理Exception \n         * 错误的情况下返回500 \n         * @param e\n         * @param req\n         * @return \n         */\n        @ExceptionHandler(value = {Exception.class})\n        public ResponseEntity<Object> handleOtherExceptions(final Exception e, final WebRequest req) {\n            TResult tResult = new TResult();\n            tResult.setStatus(CodeType.V_500);\n            tResult.setErrorMessage(ex.getMessage());\n            return new ResponseEntity<Object>(tResult,HttpStatus.OK);\n        }\n    }\n```","source":"_posts/Controller异常处理.md","raw":"---\ntitle: Controller异常处理\ndate: 2016-08-07 10:29:33\ncategories: [Java]\ntags: [Java]\n---\n```\n一般来说，项目中的错误最好手动处理，避免尴尬直接抛错给请求者，但是在一些特殊情况中，比如我们在用\nSpringMvc的@RequestBody注入对象的时候可能很方便，但是在联调阶段也会出现很多尴尬的问题，\n比如我们定义了一个注入的model中的price是一个decimal类型，那么按理说需要前端提供一个类似0.00的值上来，\n但是像网页端，若是用input标签来实现且price非必填，一般就直接传了个\"\"上来，这是注入的时候就会出现\n类型转换失败的情况。\n```\n下面回到正题，使用@ExceptionHandler，当Controller中任何一个方法发生异常，定义一个默认的方法拦截，一般来说最好定义在父类中，然后所有Controller都继承该类\n代码示例：\n```Java\nimport com.alibaba.fastjson.JSONException;\n\n@Controller\npublic class AccessController {\n\n    /**\n\t * 异常控制\n\t* @Title: handleOtherExceptions\n\t* @Description: RequestBody用fastjson解析出错的统一处理\n\t* @param @param ex\n\t* @param @return    \n\t* @return ResponseEntity<Object>    \n\t* @throws\n\t */\n\t@ExceptionHandler(JSONException.class)\n\tpublic ResponseEntity<Object> handleOtherExceptions(JSONException e) {\n\t\tResult result = new Result();\n\t\t\n\t\tString eMsg = e.getMessage();\n\t\tif (eMsg.contains(\"not match : - \")) {\n\t\t\tresult.setFailResultMsg(\"json数据格式不正确，没有匹配的 '}' 或 '\\\"'\");\n\t\t} else if (eMsg.contains(\"unclosed string\")) {\n\t\t\tresult.setFailResultMsg(\"json数据格式不正确，没有闭合的 '\\\"'\");\n\t\t} else if(eMsg.contains(\"syntax error, \")) {\n\t\t\tresult.setFailResultMsg(\"json数据格式不正确： \");\n\t\t} else if (eMsg.contains(\"can not cast to\")) {\n\t\t\tString[] msg = eMsg.split(\" \");\n\t\t\tresult.setFailResultMsg(\"转换类型失败：值 '\" + msg[7] + \"' 不能转成 \"\n\t\t\t\t\t\t\t\t\t+ msg[4].replace(\",\", \"\") + \" 类型\");\n\t\t} else {\n\t\t\tresult.setFailResultMsg(\"未知异常： \" + eMsg);\n\t\t}\n\t\t\n\t\treturn new ResponseEntity<Object>(result, HttpStatus.OK);\n\t}\n}\n```\n还有一种方式，使用 @ControllerAdvice只要把这个类放在项目中，Spring能扫描到的地方，就可以实现全局异常的回调。\n代码示例：\n```Java\n@ControllerAdvice\npublic class SpringExceptionHandler {\n\t\t/** \n\t\t * 全局处理Exception \n         * 错误的情况下返回500 \n         * @param e\n         * @param req\n         * @return \n         */\n        @ExceptionHandler(value = {Exception.class})\n        public ResponseEntity<Object> handleOtherExceptions(final Exception e, final WebRequest req) {\n            TResult tResult = new TResult();\n            tResult.setStatus(CodeType.V_500);\n            tResult.setErrorMessage(ex.getMessage());\n            return new ResponseEntity<Object>(tResult,HttpStatus.OK);\n        }\n    }\n```","slug":"Controller异常处理","published":1,"updated":"2017-01-17T02:47:10.150Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou3r0005po2yra28o1fc","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">一般来说，项目中的错误最好手动处理，避免尴尬直接抛错给请求者，但是在一些特殊情况中，比如我们在用</div><div class=\"line\">SpringMvc的@RequestBody注入对象的时候可能很方便，但是在联调阶段也会出现很多尴尬的问题，</div><div class=\"line\">比如我们定义了一个注入的model中的price是一个decimal类型，那么按理说需要前端提供一个类似0.00的值上来，</div><div class=\"line\">但是像网页端，若是用input标签来实现且price非必填，一般就直接传了个&quot;&quot;上来，这是注入的时候就会出现</div><div class=\"line\">类型转换失败的情况。</div></pre></td></tr></table></figure>\n<p>下面回到正题，使用@ExceptionHandler，当Controller中任何一个方法发生异常，定义一个默认的方法拦截，一般来说最好定义在父类中，然后所有Controller都继承该类<br>代码示例：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSONException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AccessController</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">\t * 异常控制</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: handleOtherExceptions</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: RequestBody用fastjson解析出错的统一处理</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> ex</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> ResponseEntity&lt;Object&gt;    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@ExceptionHandler</span>(JSONException.class)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity&lt;Object&gt; <span class=\"title\">handleOtherExceptions</span><span class=\"params\">(JSONException e)</span> </span>&#123;</div><div class=\"line\">\t\tResult result = <span class=\"keyword\">new</span> Result();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tString eMsg = e.getMessage();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (eMsg.contains(<span class=\"string\">\"not match : - \"</span>)) &#123;</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"json数据格式不正确，没有匹配的 '&#125;' 或 '\\\"'\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (eMsg.contains(<span class=\"string\">\"unclosed string\"</span>)) &#123;</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"json数据格式不正确，没有闭合的 '\\\"'\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(eMsg.contains(<span class=\"string\">\"syntax error, \"</span>)) &#123;</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"json数据格式不正确： \"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (eMsg.contains(<span class=\"string\">\"can not cast to\"</span>)) &#123;</div><div class=\"line\">\t\t\tString[] msg = eMsg.split(<span class=\"string\">\" \"</span>);</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"转换类型失败：值 '\"</span> + msg[<span class=\"number\">7</span>] + <span class=\"string\">\"' 不能转成 \"</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t+ msg[<span class=\"number\">4</span>].replace(<span class=\"string\">\",\"</span>, <span class=\"string\">\"\"</span>) + <span class=\"string\">\" 类型\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"未知异常： \"</span> + eMsg);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ResponseEntity&lt;Object&gt;(result, HttpStatus.OK);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>还有一种方式，使用 @ControllerAdvice只要把这个类放在项目中，Spring能扫描到的地方，就可以实现全局异常的回调。<br>代码示例：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@ControllerAdvice</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringExceptionHandler</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">/** </span></div><div class=\"line\">\t\t * 全局处理Exception </div><div class=\"line\">         * 错误的情况下返回500 </div><div class=\"line\">         * <span class=\"doctag\">@param</span> e</div><div class=\"line\">         * <span class=\"doctag\">@param</span> req</div><div class=\"line\">         * <span class=\"doctag\">@return</span> </div><div class=\"line\">         */</div><div class=\"line\">        <span class=\"meta\">@ExceptionHandler</span>(value = &#123;Exception.class&#125;)</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity&lt;Object&gt; <span class=\"title\">handleOtherExceptions</span><span class=\"params\">(<span class=\"keyword\">final</span> Exception e, <span class=\"keyword\">final</span> WebRequest req)</span> </span>&#123;</div><div class=\"line\">            TResult tResult = <span class=\"keyword\">new</span> TResult();</div><div class=\"line\">            tResult.setStatus(CodeType.V_500);</div><div class=\"line\">            tResult.setErrorMessage(ex.getMessage());</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ResponseEntity&lt;Object&gt;(tResult,HttpStatus.OK);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">一般来说，项目中的错误最好手动处理，避免尴尬直接抛错给请求者，但是在一些特殊情况中，比如我们在用</div><div class=\"line\">SpringMvc的@RequestBody注入对象的时候可能很方便，但是在联调阶段也会出现很多尴尬的问题，</div><div class=\"line\">比如我们定义了一个注入的model中的price是一个decimal类型，那么按理说需要前端提供一个类似0.00的值上来，</div><div class=\"line\">但是像网页端，若是用input标签来实现且price非必填，一般就直接传了个&quot;&quot;上来，这是注入的时候就会出现</div><div class=\"line\">类型转换失败的情况。</div></pre></td></tr></table></figure>\n<p>下面回到正题，使用@ExceptionHandler，当Controller中任何一个方法发生异常，定义一个默认的方法拦截，一般来说最好定义在父类中，然后所有Controller都继承该类<br>代码示例：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSONException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AccessController</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">\t * 异常控制</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: handleOtherExceptions</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: RequestBody用fastjson解析出错的统一处理</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> ex</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> ResponseEntity&lt;Object&gt;    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"meta\">@ExceptionHandler</span>(JSONException.class)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity&lt;Object&gt; <span class=\"title\">handleOtherExceptions</span><span class=\"params\">(JSONException e)</span> </span>&#123;</div><div class=\"line\">\t\tResult result = <span class=\"keyword\">new</span> Result();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tString eMsg = e.getMessage();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (eMsg.contains(<span class=\"string\">\"not match : - \"</span>)) &#123;</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"json数据格式不正确，没有匹配的 '&#125;' 或 '\\\"'\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (eMsg.contains(<span class=\"string\">\"unclosed string\"</span>)) &#123;</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"json数据格式不正确，没有闭合的 '\\\"'\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(eMsg.contains(<span class=\"string\">\"syntax error, \"</span>)) &#123;</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"json数据格式不正确： \"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (eMsg.contains(<span class=\"string\">\"can not cast to\"</span>)) &#123;</div><div class=\"line\">\t\t\tString[] msg = eMsg.split(<span class=\"string\">\" \"</span>);</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"转换类型失败：值 '\"</span> + msg[<span class=\"number\">7</span>] + <span class=\"string\">\"' 不能转成 \"</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t+ msg[<span class=\"number\">4</span>].replace(<span class=\"string\">\",\"</span>, <span class=\"string\">\"\"</span>) + <span class=\"string\">\" 类型\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\tresult.setFailResultMsg(<span class=\"string\">\"未知异常： \"</span> + eMsg);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ResponseEntity&lt;Object&gt;(result, HttpStatus.OK);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>还有一种方式，使用 @ControllerAdvice只要把这个类放在项目中，Spring能扫描到的地方，就可以实现全局异常的回调。<br>代码示例：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@ControllerAdvice</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringExceptionHandler</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">/** </div><div class=\"line\">\t\t * 全局处理Exception </div><div class=\"line\">         * 错误的情况下返回500 </div><div class=\"line\">         * <span class=\"doctag\">@param</span> e</div><div class=\"line\">         * <span class=\"doctag\">@param</span> req</div><div class=\"line\">         * <span class=\"doctag\">@return</span> </div><div class=\"line\">         */</span></div><div class=\"line\">        <span class=\"meta\">@ExceptionHandler</span>(value = &#123;Exception.class&#125;)</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity&lt;Object&gt; <span class=\"title\">handleOtherExceptions</span><span class=\"params\">(<span class=\"keyword\">final</span> Exception e, <span class=\"keyword\">final</span> WebRequest req)</span> </span>&#123;</div><div class=\"line\">            TResult tResult = <span class=\"keyword\">new</span> TResult();</div><div class=\"line\">            tResult.setStatus(CodeType.V_500);</div><div class=\"line\">            tResult.setErrorMessage(ex.getMessage());</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ResponseEntity&lt;Object&gt;(tResult,HttpStatus.OK);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"JDK1.7新特性","date":"2016-04-15T05:36:52.000Z","_content":"小记jdk7新增的一些好用的小特性\n```Java\n// 1.7新增数字字面量下划线支持：int 和 long 可使用下划线分割数字\nint oneMillion = 1_000_000;\nSystem.out.println((oneMillion * 2) + \"---\" + oneMillion);\n\n// 1.7新增二进制字面量支持\nbyte aByte = (byte) 0b1000;\nshort aShort = (short) 0b010;\nSystem.out.println(aByte + \"-\" + aShort);\n\n// 1.7新增自动关闭流支持，不必在finally中写关闭操作\ntry(InputStream is = new InputStream(file);) {\n} catch (Exception e) {}\n\n// 反射\ntry {\n\tClass cls = Class.forName(\"chb.test.reflect.Student\");\n\tMethod m = cls.getDeclaredMethod(\"方法名\", new Class[]{int.class, String.class});  \n\tm.invoke(cls.newInstance(), 20, \"chb\");\n} catch (Exception e) {\n\te.printStackTrace();\n}\n```","source":"_posts/JDK1.7特性.md","raw":"---\ntitle: JDK1.7新特性\ndate: 2016-04-15 13:36:52\ncategories: [Java]\ntags: [Java]\n---\n小记jdk7新增的一些好用的小特性\n```Java\n// 1.7新增数字字面量下划线支持：int 和 long 可使用下划线分割数字\nint oneMillion = 1_000_000;\nSystem.out.println((oneMillion * 2) + \"---\" + oneMillion);\n\n// 1.7新增二进制字面量支持\nbyte aByte = (byte) 0b1000;\nshort aShort = (short) 0b010;\nSystem.out.println(aByte + \"-\" + aShort);\n\n// 1.7新增自动关闭流支持，不必在finally中写关闭操作\ntry(InputStream is = new InputStream(file);) {\n} catch (Exception e) {}\n\n// 反射\ntry {\n\tClass cls = Class.forName(\"chb.test.reflect.Student\");\n\tMethod m = cls.getDeclaredMethod(\"方法名\", new Class[]{int.class, String.class});  \n\tm.invoke(cls.newInstance(), 20, \"chb\");\n} catch (Exception e) {\n\te.printStackTrace();\n}\n```","slug":"JDK1.7特性","published":1,"updated":"2017-01-03T01:23:23.941Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou3u0006po2y8dd84glk","content":"<p>小记jdk7新增的一些好用的小特性<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 1.7新增数字字面量下划线支持：int 和 long 可使用下划线分割数字</span></div><div class=\"line\"><span class=\"keyword\">int</span> oneMillion = <span class=\"number\">1_000_000</span>;</div><div class=\"line\">System.out.println((oneMillion * <span class=\"number\">2</span>) + <span class=\"string\">\"---\"</span> + oneMillion);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 1.7新增二进制字面量支持</span></div><div class=\"line\"><span class=\"keyword\">byte</span> aByte = (<span class=\"keyword\">byte</span>) <span class=\"number\">0b1000</span>;</div><div class=\"line\"><span class=\"keyword\">short</span> aShort = (<span class=\"keyword\">short</span>) <span class=\"number\">0b010</span>;</div><div class=\"line\">System.out.println(aByte + <span class=\"string\">\"-\"</span> + aShort);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 1.7新增自动关闭流支持，不必在finally中写关闭操作</span></div><div class=\"line\"><span class=\"keyword\">try</span>(InputStream is = <span class=\"keyword\">new</span> InputStream(file);) &#123;</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 反射</span></div><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\tClass cls = Class.forName(<span class=\"string\">\"chb.test.reflect.Student\"</span>);</div><div class=\"line\">\tMethod m = cls.getDeclaredMethod(<span class=\"string\">\"方法名\"</span>, <span class=\"keyword\">new</span> Class[]&#123;<span class=\"keyword\">int</span>.class, String.class&#125;);  </div><div class=\"line\">\tm.invoke(cls.newInstance(), <span class=\"number\">20</span>, <span class=\"string\">\"chb\"</span>);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\te.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>小记jdk7新增的一些好用的小特性<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 1.7新增数字字面量下划线支持：int 和 long 可使用下划线分割数字</span></div><div class=\"line\"><span class=\"keyword\">int</span> oneMillion = <span class=\"number\">1_000_000</span>;</div><div class=\"line\">System.out.println((oneMillion * <span class=\"number\">2</span>) + <span class=\"string\">\"---\"</span> + oneMillion);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 1.7新增二进制字面量支持</span></div><div class=\"line\"><span class=\"keyword\">byte</span> aByte = (<span class=\"keyword\">byte</span>) <span class=\"number\">0b1000</span>;</div><div class=\"line\"><span class=\"keyword\">short</span> aShort = (<span class=\"keyword\">short</span>) <span class=\"number\">0b010</span>;</div><div class=\"line\">System.out.println(aByte + <span class=\"string\">\"-\"</span> + aShort);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 1.7新增自动关闭流支持，不必在finally中写关闭操作</span></div><div class=\"line\"><span class=\"keyword\">try</span>(InputStream is = <span class=\"keyword\">new</span> InputStream(file);) &#123;</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 反射</span></div><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\tClass cls = Class.forName(<span class=\"string\">\"chb.test.reflect.Student\"</span>);</div><div class=\"line\">\tMethod m = cls.getDeclaredMethod(<span class=\"string\">\"方法名\"</span>, <span class=\"keyword\">new</span> Class[]&#123;<span class=\"keyword\">int</span>.class, String.class&#125;);  </div><div class=\"line\">\tm.invoke(cls.newInstance(), <span class=\"number\">20</span>, <span class=\"string\">\"chb\"</span>);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\te.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"Java下载文件损坏问题","date":"2017-04-21T06:30:19.000Z","_content":"#### 开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：\n##### 下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client\n```Java\n@RequestMapping(\"/export\")\npublic ResponseEntity<byte[]> export() {\n\t\n\tbyte[] body = null;\n\tString url = \"你的资源文件url\";\n\tHttpURLConnection conn = (HttpURLConnection) (new URL(url)).openConnection();\n\t// 不管你是读本地文件，网络文件还是Workbook等等，这里以网络文件为例\n\tInputStream in = conn.getInputStream();\n\n\tbody = new byte[in.available()];\n\tin.read(body);\n        \n\tHttpHeaders headers = new HttpHeaders();\n\t// 响应头的名字和响应头的值\n\theaders.add(\"Content-Disposition\", \"attachment;filename=\" + \"文件名，要加后缀\");\n        \n\tHttpStatus statusCode = HttpStatus.OK;\n        \n\tResponseEntity<byte[]> response = new ResponseEntity<byte[]>(body, headers, statusCode);\n\treturn response;\n\t\n}\n```\n##### 以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。\n#### 修改代码如下\n```Java\n\tHttpURLConnection conn = (HttpURLConnection) (new URL(url)).openConnection();\n\tInputStream in = conn.getInputStream();\n\t\t\n\tByteArrayOutputStream swapStream = new ByteArrayOutputStream();  \n\tbyte[] buff = new byte[1024];  \n\tint len = 0;  \n\twhile ((len = in.read(buff, 0, 100)) > 0) {  \n\t\tswapStream.write(buff, 0, len);  \n\t}  \n\tbyte[] body = swapStream.toByteArray();\n        \n\tHttpHeaders headers = new HttpHeaders();\n\t// 响应头的名字和响应头的值\n\theaders.add(\"Content-Disposition\", \"attachment;filename=\" + fileName);\n        \n\tHttpStatus statusCode = HttpStatus.OK;\n        \n\tResponseEntity<byte[]> response = new ResponseEntity<byte[]>(body, headers, statusCode);\n\treturn response;\n```","source":"_posts/Java下载文件损坏问题.md","raw":"---\ntitle: Java下载文件损坏问题\ndate: 2017-04-21 14:30:19\ncategories: [Java]\ntags: [Java]\n---\n#### 开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：\n##### 下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client\n```Java\n@RequestMapping(\"/export\")\npublic ResponseEntity<byte[]> export() {\n\t\n\tbyte[] body = null;\n\tString url = \"你的资源文件url\";\n\tHttpURLConnection conn = (HttpURLConnection) (new URL(url)).openConnection();\n\t// 不管你是读本地文件，网络文件还是Workbook等等，这里以网络文件为例\n\tInputStream in = conn.getInputStream();\n\n\tbody = new byte[in.available()];\n\tin.read(body);\n        \n\tHttpHeaders headers = new HttpHeaders();\n\t// 响应头的名字和响应头的值\n\theaders.add(\"Content-Disposition\", \"attachment;filename=\" + \"文件名，要加后缀\");\n        \n\tHttpStatus statusCode = HttpStatus.OK;\n        \n\tResponseEntity<byte[]> response = new ResponseEntity<byte[]>(body, headers, statusCode);\n\treturn response;\n\t\n}\n```\n##### 以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。\n#### 修改代码如下\n```Java\n\tHttpURLConnection conn = (HttpURLConnection) (new URL(url)).openConnection();\n\tInputStream in = conn.getInputStream();\n\t\t\n\tByteArrayOutputStream swapStream = new ByteArrayOutputStream();  \n\tbyte[] buff = new byte[1024];  \n\tint len = 0;  \n\twhile ((len = in.read(buff, 0, 100)) > 0) {  \n\t\tswapStream.write(buff, 0, len);  \n\t}  \n\tbyte[] body = swapStream.toByteArray();\n        \n\tHttpHeaders headers = new HttpHeaders();\n\t// 响应头的名字和响应头的值\n\theaders.add(\"Content-Disposition\", \"attachment;filename=\" + fileName);\n        \n\tHttpStatus statusCode = HttpStatus.OK;\n        \n\tResponseEntity<byte[]> response = new ResponseEntity<byte[]>(body, headers, statusCode);\n\treturn response;\n```","slug":"Java下载文件损坏问题","published":1,"updated":"2017-04-21T06:53:55.280Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou3w0007po2yv35xv3ls","content":"<h4 id=\"开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：\"><a href=\"#开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：\" class=\"headerlink\" title=\"开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：\"></a>开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：</h4><h5 id=\"下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client\"><a href=\"#下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client\" class=\"headerlink\" title=\"下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client\"></a>下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/export\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> ResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt; export() &#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">byte</span>[] body = <span class=\"keyword\">null</span>;</div><div class=\"line\">\tString url = <span class=\"string\">\"你的资源文件url\"</span>;</div><div class=\"line\">\tHttpURLConnection conn = (HttpURLConnection) (<span class=\"keyword\">new</span> URL(url)).openConnection();</div><div class=\"line\">\t<span class=\"comment\">// 不管你是读本地文件，网络文件还是Workbook等等，这里以网络文件为例</span></div><div class=\"line\">\tInputStream in = conn.getInputStream();</div><div class=\"line\"></div><div class=\"line\">\tbody = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[in.available()];</div><div class=\"line\">\tin.read(body);</div><div class=\"line\">        </div><div class=\"line\">\tHttpHeaders headers = <span class=\"keyword\">new</span> HttpHeaders();</div><div class=\"line\">\t<span class=\"comment\">// 响应头的名字和响应头的值</span></div><div class=\"line\">\theaders.add(<span class=\"string\">\"Content-Disposition\"</span>, <span class=\"string\">\"attachment;filename=\"</span> + <span class=\"string\">\"文件名，要加后缀\"</span>);</div><div class=\"line\">        </div><div class=\"line\">\tHttpStatus statusCode = HttpStatus.OK;</div><div class=\"line\">        </div><div class=\"line\">\tResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt; response = <span class=\"keyword\">new</span> ResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt;(body, headers, statusCode);</div><div class=\"line\">\t<span class=\"keyword\">return</span> response;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。\"><a href=\"#以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。\" class=\"headerlink\" title=\"以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。\"></a>以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。</h5><h4 id=\"修改代码如下\"><a href=\"#修改代码如下\" class=\"headerlink\" title=\"修改代码如下\"></a>修改代码如下</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpURLConnection conn = (HttpURLConnection) (<span class=\"keyword\">new</span> URL(url)).openConnection();</div><div class=\"line\">InputStream in = conn.getInputStream();</div><div class=\"line\">\t</div><div class=\"line\">ByteArrayOutputStream swapStream = <span class=\"keyword\">new</span> ByteArrayOutputStream();  </div><div class=\"line\"><span class=\"keyword\">byte</span>[] buff = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];  </div><div class=\"line\"><span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;  </div><div class=\"line\"><span class=\"keyword\">while</span> ((len = in.read(buff, <span class=\"number\">0</span>, <span class=\"number\">100</span>)) &gt; <span class=\"number\">0</span>) &#123;  </div><div class=\"line\">\tswapStream.write(buff, <span class=\"number\">0</span>, len);  </div><div class=\"line\">&#125;  </div><div class=\"line\"><span class=\"keyword\">byte</span>[] body = swapStream.toByteArray();</div><div class=\"line\">       </div><div class=\"line\">HttpHeaders headers = <span class=\"keyword\">new</span> HttpHeaders();</div><div class=\"line\"><span class=\"comment\">// 响应头的名字和响应头的值</span></div><div class=\"line\">headers.add(<span class=\"string\">\"Content-Disposition\"</span>, <span class=\"string\">\"attachment;filename=\"</span> + fileName);</div><div class=\"line\">       </div><div class=\"line\">HttpStatus statusCode = HttpStatus.OK;</div><div class=\"line\">       </div><div class=\"line\">ResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt; response = <span class=\"keyword\">new</span> ResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt;(body, headers, statusCode);</div><div class=\"line\"><span class=\"keyword\">return</span> response;</div></pre></td></tr></table></figure>","excerpt":"","more":"<h4 id=\"开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：\"><a href=\"#开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：\" class=\"headerlink\" title=\"开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：\"></a>开发的过程中经常需要导出各种报表，生成表的过程此处不表。说说下载遇到的问题：</h4><h5 id=\"下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client\"><a href=\"#下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client\" class=\"headerlink\" title=\"下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client\"></a>下载可以分为2种，一种是将文件保存到某个位置，然后返回url让client进行访问下载，但大多数时候我们并不需要这些文件，这个时候就浪费了磁盘空间，即便后面做了清理，也是比较不友好的一种情况。所以我们一般都是直接以流的形式将文件传给client</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/export\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> ResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt; export() &#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">byte</span>[] body = <span class=\"keyword\">null</span>;</div><div class=\"line\">\tString url = <span class=\"string\">\"你的资源文件url\"</span>;</div><div class=\"line\">\tHttpURLConnection conn = (HttpURLConnection) (<span class=\"keyword\">new</span> URL(url)).openConnection();</div><div class=\"line\">\t<span class=\"comment\">// 不管你是读本地文件，网络文件还是Workbook等等，这里以网络文件为例</span></div><div class=\"line\">\tInputStream in = conn.getInputStream();</div><div class=\"line\"></div><div class=\"line\">\tbody = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[in.available()];</div><div class=\"line\">\tin.read(body);</div><div class=\"line\">        </div><div class=\"line\">\tHttpHeaders headers = <span class=\"keyword\">new</span> HttpHeaders();</div><div class=\"line\">\t<span class=\"comment\">// 响应头的名字和响应头的值</span></div><div class=\"line\">\theaders.add(<span class=\"string\">\"Content-Disposition\"</span>, <span class=\"string\">\"attachment;filename=\"</span> + <span class=\"string\">\"文件名，要加后缀\"</span>);</div><div class=\"line\">        </div><div class=\"line\">\tHttpStatus statusCode = HttpStatus.OK;</div><div class=\"line\">        </div><div class=\"line\">\tResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt; response = <span class=\"keyword\">new</span> ResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt;(body, headers, statusCode);</div><div class=\"line\">\t<span class=\"keyword\">return</span> response;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。\"><a href=\"#以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。\" class=\"headerlink\" title=\"以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。\"></a>以上的方法可以基本满足下载的功能，但是我在实际开发中导出excel文件，发现下载的Excel文件打开的时候已经损坏了，本来是读取HSSFWorkbook直接返回的，为了方便排查，把生成的excel保存在了本地再执行响应，发现本地的excel打开是正常的，而下载后的却是损坏的，后来查阅了资料发现，如果一次性将流转为byte可能会有丢失问题，于是改用如下方式，将流先缓存包装起来，再返回，通过。</h5><h4 id=\"修改代码如下\"><a href=\"#修改代码如下\" class=\"headerlink\" title=\"修改代码如下\"></a>修改代码如下</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpURLConnection conn = (HttpURLConnection) (<span class=\"keyword\">new</span> URL(url)).openConnection();</div><div class=\"line\">InputStream in = conn.getInputStream();</div><div class=\"line\">\t</div><div class=\"line\">ByteArrayOutputStream swapStream = <span class=\"keyword\">new</span> ByteArrayOutputStream();  </div><div class=\"line\"><span class=\"keyword\">byte</span>[] buff = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];  </div><div class=\"line\"><span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;  </div><div class=\"line\"><span class=\"keyword\">while</span> ((len = in.read(buff, <span class=\"number\">0</span>, <span class=\"number\">100</span>)) &gt; <span class=\"number\">0</span>) &#123;  </div><div class=\"line\">\tswapStream.write(buff, <span class=\"number\">0</span>, len);  </div><div class=\"line\">&#125;  </div><div class=\"line\"><span class=\"keyword\">byte</span>[] body = swapStream.toByteArray();</div><div class=\"line\">       </div><div class=\"line\">HttpHeaders headers = <span class=\"keyword\">new</span> HttpHeaders();</div><div class=\"line\"><span class=\"comment\">// 响应头的名字和响应头的值</span></div><div class=\"line\">headers.add(<span class=\"string\">\"Content-Disposition\"</span>, <span class=\"string\">\"attachment;filename=\"</span> + fileName);</div><div class=\"line\">       </div><div class=\"line\">HttpStatus statusCode = HttpStatus.OK;</div><div class=\"line\">       </div><div class=\"line\">ResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt; response = <span class=\"keyword\">new</span> ResponseEntity&lt;<span class=\"keyword\">byte</span>[]&gt;(body, headers, statusCode);</div><div class=\"line\"><span class=\"keyword\">return</span> response;</div></pre></td></tr></table></figure>"},{"title":"Java去除Html标签","date":"2016-11-24T09:07:43.000Z","_content":"#### 普通的正则去除标签\n```Java\n// 剔出<html>的标签\nString txtcontent = htmlcontent.replaceAll(\"</?[^>]+>\", \"\");\n// 去除字符串中的空格,回车,换行符,制表符\ntxtcontent = txtcontent.replaceAll(\"<a>\\\\s*|\\t|\\r|\\n</a>\", \"\"); \n```\n#### 但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包\n```\n <dependency>\n\t<groupId>org.jsoup</groupId>\n\t<artifactId>jsoup</artifactId>\n\t<version>1.9.2</version>\n</dependency>\n```\n#### 工具类代码如下：\n```Java\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\n\npublic class HtmlUtil {\n\t/**\n\t* @Title: getText\n\t* @Description: 解析html标签\n\t* @param @param html串\n\t* @return 文本内容\n\t*/\n\tpublic static String getText(String html) {\n\t\tDocument doc = Jsoup.parse(html);\n\t\tString txtcontent = doc.text();\n\t\tStringBuilder builder = new StringBuilder(txtcontent);\n\t\tint index = 0;\n\t\twhile (builder.length() > index) {\n\t\t\tchar tmp = builder.charAt(index);\n\t\t\tif (Character.isSpaceChar(tmp) || Character.isWhitespace(tmp)) {\n\t\t\t\tbuilder.setCharAt(index, ' ');\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t\ttxtcontent = builder.toString().replaceAll(\" +\", \" \").trim();\n\t\treturn txtcontent;\n\t}\n}\n```","source":"_posts/Java去除Html标签.md","raw":"---\ntitle: Java去除Html标签\ndate: 2016-11-24 17:07:43\ncategories: [Java]\ntags: [Java]\n---\n#### 普通的正则去除标签\n```Java\n// 剔出<html>的标签\nString txtcontent = htmlcontent.replaceAll(\"</?[^>]+>\", \"\");\n// 去除字符串中的空格,回车,换行符,制表符\ntxtcontent = txtcontent.replaceAll(\"<a>\\\\s*|\\t|\\r|\\n</a>\", \"\"); \n```\n#### 但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包\n```\n <dependency>\n\t<groupId>org.jsoup</groupId>\n\t<artifactId>jsoup</artifactId>\n\t<version>1.9.2</version>\n</dependency>\n```\n#### 工具类代码如下：\n```Java\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\n\npublic class HtmlUtil {\n\t/**\n\t* @Title: getText\n\t* @Description: 解析html标签\n\t* @param @param html串\n\t* @return 文本内容\n\t*/\n\tpublic static String getText(String html) {\n\t\tDocument doc = Jsoup.parse(html);\n\t\tString txtcontent = doc.text();\n\t\tStringBuilder builder = new StringBuilder(txtcontent);\n\t\tint index = 0;\n\t\twhile (builder.length() > index) {\n\t\t\tchar tmp = builder.charAt(index);\n\t\t\tif (Character.isSpaceChar(tmp) || Character.isWhitespace(tmp)) {\n\t\t\t\tbuilder.setCharAt(index, ' ');\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t\ttxtcontent = builder.toString().replaceAll(\" +\", \" \").trim();\n\t\treturn txtcontent;\n\t}\n}\n```","slug":"Java去除Html标签","published":1,"updated":"2017-01-03T01:23:17.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou3y000apo2yo1g1u9ui","content":"<h4 id=\"普通的正则去除标签\"><a href=\"#普通的正则去除标签\" class=\"headerlink\" title=\"普通的正则去除标签\"></a>普通的正则去除标签</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 剔出&lt;html&gt;的标签</span></div><div class=\"line\">String txtcontent = htmlcontent.replaceAll(<span class=\"string\">\"&lt;/?[^&gt;]+&gt;\"</span>, <span class=\"string\">\"\"</span>);</div><div class=\"line\"><span class=\"comment\">// 去除字符串中的空格,回车,换行符,制表符</span></div><div class=\"line\">txtcontent = txtcontent.replaceAll(<span class=\"string\">\"&lt;a&gt;\\\\s*|\\t|\\r|\\n&lt;/a&gt;\"</span>, <span class=\"string\">\"\"</span>);</div></pre></td></tr></table></figure>\n<h4 id=\"但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包\"><a href=\"#但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包\" class=\"headerlink\" title=\"但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包\"></a>但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;dependency&gt;</div><div class=\"line\">\t&lt;groupId&gt;org.jsoup&lt;/groupId&gt;</div><div class=\"line\">\t&lt;artifactId&gt;jsoup&lt;/artifactId&gt;</div><div class=\"line\">\t&lt;version&gt;1.9.2&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"工具类代码如下：\"><a href=\"#工具类代码如下：\" class=\"headerlink\" title=\"工具类代码如下：\"></a>工具类代码如下：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> org.jsoup.Jsoup;</div><div class=\"line\"><span class=\"keyword\">import</span> org.jsoup.nodes.Document;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HtmlUtil</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getText</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 解析html标签</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> html串</div><div class=\"line\">\t* <span class=\"doctag\">@return</span> 文本内容</div><div class=\"line\">\t*/</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getText</span><span class=\"params\">(String html)</span> </span>&#123;</div><div class=\"line\">\t\tDocument doc = Jsoup.parse(html);</div><div class=\"line\">\t\tString txtcontent = doc.text();</div><div class=\"line\">\t\tStringBuilder builder = <span class=\"keyword\">new</span> StringBuilder(txtcontent);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (builder.length() &gt; index) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">char</span> tmp = builder.charAt(index);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Character.isSpaceChar(tmp) || Character.isWhitespace(tmp)) &#123;</div><div class=\"line\">\t\t\t\tbuilder.setCharAt(index, <span class=\"string\">' '</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tindex++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\ttxtcontent = builder.toString().replaceAll(<span class=\"string\">\" +\"</span>, <span class=\"string\">\" \"</span>).trim();</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> txtcontent;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<h4 id=\"普通的正则去除标签\"><a href=\"#普通的正则去除标签\" class=\"headerlink\" title=\"普通的正则去除标签\"></a>普通的正则去除标签</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 剔出&lt;html&gt;的标签</span></div><div class=\"line\">String txtcontent = htmlcontent.replaceAll(<span class=\"string\">\"&lt;/?[^&gt;]+&gt;\"</span>, <span class=\"string\">\"\"</span>);</div><div class=\"line\"><span class=\"comment\">// 去除字符串中的空格,回车,换行符,制表符</span></div><div class=\"line\">txtcontent = txtcontent.replaceAll(<span class=\"string\">\"&lt;a&gt;\\\\s*|\\t|\\r|\\n&lt;/a&gt;\"</span>, <span class=\"string\">\"\"</span>);</div></pre></td></tr></table></figure>\n<h4 id=\"但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包\"><a href=\"#但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包\" class=\"headerlink\" title=\"但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包\"></a>但是有时候html标签比较复杂，容易忽略掉很多，这时就可以使用Jsoup工具来完成这种复杂的解析，如果使用了maven，引入jar包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;dependency&gt;</div><div class=\"line\">\t&lt;groupId&gt;org.jsoup&lt;/groupId&gt;</div><div class=\"line\">\t&lt;artifactId&gt;jsoup&lt;/artifactId&gt;</div><div class=\"line\">\t&lt;version&gt;1.9.2&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"工具类代码如下：\"><a href=\"#工具类代码如下：\" class=\"headerlink\" title=\"工具类代码如下：\"></a>工具类代码如下：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> org.jsoup.Jsoup;</div><div class=\"line\"><span class=\"keyword\">import</span> org.jsoup.nodes.Document;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HtmlUtil</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getText</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 解析html标签</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> html串</div><div class=\"line\">\t* <span class=\"doctag\">@return</span> 文本内容</div><div class=\"line\">\t*/</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getText</span><span class=\"params\">(String html)</span> </span>&#123;</div><div class=\"line\">\t\tDocument doc = Jsoup.parse(html);</div><div class=\"line\">\t\tString txtcontent = doc.text();</div><div class=\"line\">\t\tStringBuilder builder = <span class=\"keyword\">new</span> StringBuilder(txtcontent);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (builder.length() &gt; index) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">char</span> tmp = builder.charAt(index);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Character.isSpaceChar(tmp) || Character.isWhitespace(tmp)) &#123;</div><div class=\"line\">\t\t\t\tbuilder.setCharAt(index, <span class=\"string\">' '</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tindex++;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\ttxtcontent = builder.toString().replaceAll(<span class=\"string\">\" +\"</span>, <span class=\"string\">\" \"</span>).trim();</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> txtcontent;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Java操作Excel工具","date":"2016-03-15T13:19:09.000Z","_content":"#### **选择：Apache POI 和 JXL**\n---\n\n#### JXL没有使用过，网上查到的两者区别\n1. **JVM虚拟机内存消耗的情况：**\n1). *数据量3000条数据,每条60列.JVM虚拟机内存大小64M. *\n2). *使用POI:运行到2800条左右就报内存溢出. **（实际使用过程操作的数据都是30列几千行以上，并没有这样的现象存在）***\n3). *使用JXL:3000条全部出来,并且内存还有21M的空间.*\n2. **其它：**\n1). *若导出图片的操作较多，建议使用JXL*\n2). *额外的Excel特性,例如处理公式,创建单元格样式--颜色,边框,字体,头部,脚部,数据验证,图像,超链接等.，建议使用POI*\n3).POI支持XLS和XLSX，且代码看起来比较简洁，而JXL只支持XLS\n\n---\n#### **使用：以Apache POI为例**\n---\n```Java\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.text.DateFormat;\nimport java.text.SimpleDateFormat;\n\nimport org.apache.poi.hssf.usermodel.HSSFDateUtil;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.util.CellRangeAddress;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\npublic class ExcelUtil {\n\n\t/**\n\t* @Title: getWorkBook\n\t* @Description: 获取Excel文件对象\n\t* @param @param f\n\t* @param @return    \n\t* @return Workbook    \n\t* @throws\n\t */\n\tpublic Workbook getWorkBook(File f) {\n\t\tWorkbook wb = null;\n\t\t\t\n\t\ttry (FileInputStream fis = new FileInputStream(f)) {\n\t\t\t// 根据后缀获取Excel对象\n\t\t\tif (f.getName().indexOf(\".xlsx\") > 1) {\n\t\t\t\twb = new XSSFWorkbook(fis);\n\t\t\t} else {\n\t\t\t\twb = new HSSFWorkbook(fis);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn wb;\n\t}\n\t\n\t/**\n\t* @Title: readExcel\n\t* @Description: 读取Excel文件\n\t* @param @param wb\n\t* @param @param sheetIndex\t\tsheet页下标，从 0 开始\n\t* @param @param startReadLine\t开始读取的行，从 0 开始\n\t* @param @param tailLine    \t最后读取的行号\n\t* @return void    \n\t* @throws\n\t */\n\tpublic void readExcel(Workbook wb, int sheetIndex, int startReadLine, int tailLine) {\n\t\tSheet sheet = wb.getSheetAt(sheetIndex);\n\t\tRow row = null;\n\t\t// 行\n\t\tfor (int i = startReadLine; i < sheet.getLastRowNum() - tailLine + 1; i++) {\n\t\t\trow = sheet.getRow(i);\n\t\t\t// 列\n\t\t\tfor (int j = 0; j < row.getLastCellNum(); j++) {\n\t\t\t\tCell cell = row.getCell(j);\n\t\t\t\t// 具体操作业务\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t* @Title: getMergedRegionValue\n\t* @Description: 获取合并单元格的值\n\t* @param @param sheet\n\t* @param @param row\n\t* @param @param column\n\t* @param @return    \n\t* @return String    \n\t* @throws\n\t */\n\tpublic String getMergedRegionValue(Sheet sheet, int row, int column) {\n\t\t// 获取一个 Sheet 表中合并单元格的数量\n\t\tint sheetMergeCount = sheet.getNumMergedRegions();\n\t\t\n\t\tfor (int i = 0; i < sheetMergeCount; i++) {\n\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);\n\t\t\tint firstColumn = ca.getFirstColumn();\n\t\t\tint lastColumn = ca.getLastColumn();\n\t\t\tint firstRow = ca.getFirstRow();\n\t\t\tint lastRow = ca.getLastRow();\n\t\t\t\n\t\t\tif (row >= firstRow && row <= lastRow) {\n\t\t\t\tif (column >= firstColumn && column <= lastColumn) {\n\t\t\t\t\tRow fRow = sheet.getRow(firstRow);\n\t\t\t\t\tCell fCell = fRow.getCell(firstColumn);\n\t\t\t\t\treturn getCellValue(fCell);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\t/**\n\t* @Title: isMergeRow\n\t* @Description: 判断合并了行\n\t* @param @param sheet\n\t* @param @param row\n\t* @param @param column\n\t* @param @return    \n\t* @return boolean    \n\t* @throws\n\t */\n\tpublic boolean isMergeRow(Sheet sheet, int row, int column) {\n\t\t// 获取一个 Sheet 表中合并单元格的数量\n\t\tint sheetMergeCount = sheet.getNumMergedRegions();\n\t\t\n\t\tfor (int i = 0; i < sheetMergeCount; i++) {\n\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);\n\t\t\tint firstColumn = ca.getFirstColumn();\n\t\t\tint lastColumn = ca.getLastColumn();\n\t\t\tint firstRow = ca.getFirstRow();\n\t\t\tint lastRow = ca.getLastRow();\n\t\t\t\n\t\t\tif (row == firstRow && row == lastRow) {\n\t\t\t\tif (column >= firstColumn && column <= lastColumn) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\t/**\n\t* @Title: isMergedRegion\n\t* @Description: 判断指定的单元格是否是合并单元格\n\t* @param @param sheet\n\t* @param @param row\n\t* @param @param column\n\t* @param @return    \n\t* @return boolean    \n\t* @throws\n\t */\n\tpublic boolean isMergedRegion(Sheet sheet, int row, int column) {\n\t\tint sheetMergeCount = sheet.getNumMergedRegions();\n\n\t\tfor (int i = 0; i < sheetMergeCount; i++) {\n\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);\n\t\t\tint firstColumn = ca.getFirstColumn();\n\t\t\tint lastColumn = ca.getLastColumn();\n\t\t\tint firstRow = ca.getFirstRow();\n\t\t\tint lastRow = ca.getLastRow();\n\t\t\t\n\t\t\tif (row >= firstRow && row <= lastRow) {\n\t\t\t\tif (column >= firstColumn && column <= lastColumn) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\t/**\n\t* @Title: hasMerged\n\t* @Description: 判断 Sheet 页中是否含有合并单元格\n\t* @param @param sheet\n\t* @param @return    \n\t* @return boolean    \n\t* @throws\n\t */\n\tpublic boolean hasMerged(Sheet sheet) {\n\t\treturn sheet.getNumMergedRegions() > 0 ? true : false;\n\t}\n\t\n\t/**\n\t* @Title: mergeRegion\n\t* @Description: 合并单元格\n\t* @param @param sheet\n\t* @param @param firstRow\t开始行\n\t* @param @param lastRow\t\t结束行\n\t* @param @param firstCol\t开始列\n\t* @param @param lastCol \t 结束列\n\t* @return void    \n\t* @throws\n\t */\n\tpublic void mergeRegion(Sheet sheet, int firstRow, int lastRow, int firstCol, int lastCol) {  \n        sheet.addMergedRegion(new CellRangeAddress(firstRow, lastRow, firstCol, lastCol));  \n    }\n\t\n\t/**\n\t* @Title: getCellValue\n\t* @Description: 获取单元格的值\n\t* @param @param cell\n\t* @param @return    \n\t* @return String    \n\t* @throws\n\t */\n\tpublic String getCellValue(Cell cell) {\n\t\tif (cell == null) {\n\t\t\treturn null;\n\t\t}\n\t\t// 注意： 有时看到单元格是空的，但可能并不是null，只要编辑过的单元格，\n\t\t// 删除之后，其实那个位置的对象时存在的，所以可以用这个方法判空\n\t\t// ps： 如果是合并列，不管合并前哪个单元格有值，如ABC列，合并后AB列读取到的都会是该类型\n\t\tif (cell.getCellType() == Cell.CELL_TYPE_BLANK) {\n\t\t\treturn \"\";\n\t\t}\n\t\t// 字符型\n\t\tif (cell.getCellType() == Cell.CELL_TYPE_STRING) {\n\t\t\treturn cell.getStringCellValue();\n\t\t}\n\t\t// 布尔型\n\t\tif (cell.getCellType() == Cell.CELL_TYPE_BOOLEAN) {\n\t\t\treturn String.valueOf(cell.getBooleanCellValue());\n\t\t}\n\t\t// 数字型\n\t\tif (cell.getCellType() == Cell.CELL_TYPE_NUMERIC) {\n\t\t\t/* 因为日期和数字都是 Cell.CELL_TYPE_NUMERIC 类型，且 cell.getNumericCellValue() \n\t\t\t返回的是 double 型，利用 HSSFDateUtil.isCellDateFormatted() 可判断是否是日期类型，但\n\t\t\t日期格式只能处理yyyy-MM-dd, d/m/yyyy h:mm, HH:mm 等不含中文文字的日期格式，如需识别中文，\n\t\t\t只能根据样式来判断，以下是Excel中所有自定义的中文样式，代码if语句中也已添加所有相关中文日期，嫌麻烦可以看文末 */\n\t\t\t/* \n\t\t\t\tyyyy年m月d日---31\n\t\t\t\tyyyy年m月------57\n\t\t\t\tm月d日---------58\n\t\t\t\th\"时\"mm\"分\"--32\n\t\t\t\th\"时\"mm\"分\"ss\"秒\"--33\n\t\t\t\t上午/下午h\"时\"mm\"分\"--55\n\t\t\t\t上午/下午h\"时\"mm\"分\"ss\"秒\"--56\n\t\t\t*/\n\t\t\tif (HSSFDateUtil.isCellDateFormatted(cell) || cell.getCellStyle().getDataFormat() == 31 || \n\t\t\t\t\tcell.getCellStyle().getDataFormat() == 32 || cell.getCellStyle().getDataFormat() == 33 || \n\t\t\t\t\tcell.getCellStyle().getDataFormat() == 55 || cell.getCellStyle().getDataFormat() == 56 || \n\t\t\t\t\tcell.getCellStyle().getDataFormat() == 57 || cell.getCellStyle().getDataFormat() == 58) {\n\t\t\t\tDateFormat df = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\");\n\t\t\t\treturn df.format(cell.getDateCellValue());\n\t\t\t} else {\n\t\t\t\tcell.setCellType(Cell.CELL_TYPE_STRING);\n\t\t\t\treturn cell.getStringCellValue();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n}\n```\n#### 对于中文日期，也可以直接修改（我用的是POI3.6）org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(Cell cell) 的源码，以下是源码\n```Java\npublic static boolean isCellDateFormatted(Cell cell) {\n\tif (cell == null) return false;\n\tboolean bDate = false;\n\t\n\tdouble d = cell.getNumericCellValue();\n\tif ( DateUtil.isValidExcelDate(d) ) {\n\t\tCellStyle style = cell.getCellStyle();\n\t\tif(style==null) return false;\n\t\tint i = style.getDataFormat();\n\t\tString f = style.getDataFormatString();\n\t\tbDate = isADateFormat(i, f); // 这里调用了日期判断\n\t}\n\treturn bDate;\n}\n```\n#### 在方法DateUtil.isADateFormat(int formatIndex, String formatString)中找到String fs = formatString;在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码\n```Java\nfs = fs.replaceAll(\"[\\\"|\\']\",\"\").replaceAll(\"[年|月|日|时|分|秒|毫秒|微秒]\", \"\"); \n```","source":"_posts/Java操作Excel.md","raw":"---\ntitle: Java操作Excel工具\ndate: 2016-03-15 21:19:09\ncategories: [Java]\ntags: [Java,excel]\n---\n#### **选择：Apache POI 和 JXL**\n---\n\n#### JXL没有使用过，网上查到的两者区别\n1. **JVM虚拟机内存消耗的情况：**\n1). *数据量3000条数据,每条60列.JVM虚拟机内存大小64M. *\n2). *使用POI:运行到2800条左右就报内存溢出. **（实际使用过程操作的数据都是30列几千行以上，并没有这样的现象存在）***\n3). *使用JXL:3000条全部出来,并且内存还有21M的空间.*\n2. **其它：**\n1). *若导出图片的操作较多，建议使用JXL*\n2). *额外的Excel特性,例如处理公式,创建单元格样式--颜色,边框,字体,头部,脚部,数据验证,图像,超链接等.，建议使用POI*\n3).POI支持XLS和XLSX，且代码看起来比较简洁，而JXL只支持XLS\n\n---\n#### **使用：以Apache POI为例**\n---\n```Java\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.text.DateFormat;\nimport java.text.SimpleDateFormat;\n\nimport org.apache.poi.hssf.usermodel.HSSFDateUtil;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.util.CellRangeAddress;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\npublic class ExcelUtil {\n\n\t/**\n\t* @Title: getWorkBook\n\t* @Description: 获取Excel文件对象\n\t* @param @param f\n\t* @param @return    \n\t* @return Workbook    \n\t* @throws\n\t */\n\tpublic Workbook getWorkBook(File f) {\n\t\tWorkbook wb = null;\n\t\t\t\n\t\ttry (FileInputStream fis = new FileInputStream(f)) {\n\t\t\t// 根据后缀获取Excel对象\n\t\t\tif (f.getName().indexOf(\".xlsx\") > 1) {\n\t\t\t\twb = new XSSFWorkbook(fis);\n\t\t\t} else {\n\t\t\t\twb = new HSSFWorkbook(fis);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn wb;\n\t}\n\t\n\t/**\n\t* @Title: readExcel\n\t* @Description: 读取Excel文件\n\t* @param @param wb\n\t* @param @param sheetIndex\t\tsheet页下标，从 0 开始\n\t* @param @param startReadLine\t开始读取的行，从 0 开始\n\t* @param @param tailLine    \t最后读取的行号\n\t* @return void    \n\t* @throws\n\t */\n\tpublic void readExcel(Workbook wb, int sheetIndex, int startReadLine, int tailLine) {\n\t\tSheet sheet = wb.getSheetAt(sheetIndex);\n\t\tRow row = null;\n\t\t// 行\n\t\tfor (int i = startReadLine; i < sheet.getLastRowNum() - tailLine + 1; i++) {\n\t\t\trow = sheet.getRow(i);\n\t\t\t// 列\n\t\t\tfor (int j = 0; j < row.getLastCellNum(); j++) {\n\t\t\t\tCell cell = row.getCell(j);\n\t\t\t\t// 具体操作业务\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t* @Title: getMergedRegionValue\n\t* @Description: 获取合并单元格的值\n\t* @param @param sheet\n\t* @param @param row\n\t* @param @param column\n\t* @param @return    \n\t* @return String    \n\t* @throws\n\t */\n\tpublic String getMergedRegionValue(Sheet sheet, int row, int column) {\n\t\t// 获取一个 Sheet 表中合并单元格的数量\n\t\tint sheetMergeCount = sheet.getNumMergedRegions();\n\t\t\n\t\tfor (int i = 0; i < sheetMergeCount; i++) {\n\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);\n\t\t\tint firstColumn = ca.getFirstColumn();\n\t\t\tint lastColumn = ca.getLastColumn();\n\t\t\tint firstRow = ca.getFirstRow();\n\t\t\tint lastRow = ca.getLastRow();\n\t\t\t\n\t\t\tif (row >= firstRow && row <= lastRow) {\n\t\t\t\tif (column >= firstColumn && column <= lastColumn) {\n\t\t\t\t\tRow fRow = sheet.getRow(firstRow);\n\t\t\t\t\tCell fCell = fRow.getCell(firstColumn);\n\t\t\t\t\treturn getCellValue(fCell);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\t/**\n\t* @Title: isMergeRow\n\t* @Description: 判断合并了行\n\t* @param @param sheet\n\t* @param @param row\n\t* @param @param column\n\t* @param @return    \n\t* @return boolean    \n\t* @throws\n\t */\n\tpublic boolean isMergeRow(Sheet sheet, int row, int column) {\n\t\t// 获取一个 Sheet 表中合并单元格的数量\n\t\tint sheetMergeCount = sheet.getNumMergedRegions();\n\t\t\n\t\tfor (int i = 0; i < sheetMergeCount; i++) {\n\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);\n\t\t\tint firstColumn = ca.getFirstColumn();\n\t\t\tint lastColumn = ca.getLastColumn();\n\t\t\tint firstRow = ca.getFirstRow();\n\t\t\tint lastRow = ca.getLastRow();\n\t\t\t\n\t\t\tif (row == firstRow && row == lastRow) {\n\t\t\t\tif (column >= firstColumn && column <= lastColumn) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\t/**\n\t* @Title: isMergedRegion\n\t* @Description: 判断指定的单元格是否是合并单元格\n\t* @param @param sheet\n\t* @param @param row\n\t* @param @param column\n\t* @param @return    \n\t* @return boolean    \n\t* @throws\n\t */\n\tpublic boolean isMergedRegion(Sheet sheet, int row, int column) {\n\t\tint sheetMergeCount = sheet.getNumMergedRegions();\n\n\t\tfor (int i = 0; i < sheetMergeCount; i++) {\n\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);\n\t\t\tint firstColumn = ca.getFirstColumn();\n\t\t\tint lastColumn = ca.getLastColumn();\n\t\t\tint firstRow = ca.getFirstRow();\n\t\t\tint lastRow = ca.getLastRow();\n\t\t\t\n\t\t\tif (row >= firstRow && row <= lastRow) {\n\t\t\t\tif (column >= firstColumn && column <= lastColumn) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\t/**\n\t* @Title: hasMerged\n\t* @Description: 判断 Sheet 页中是否含有合并单元格\n\t* @param @param sheet\n\t* @param @return    \n\t* @return boolean    \n\t* @throws\n\t */\n\tpublic boolean hasMerged(Sheet sheet) {\n\t\treturn sheet.getNumMergedRegions() > 0 ? true : false;\n\t}\n\t\n\t/**\n\t* @Title: mergeRegion\n\t* @Description: 合并单元格\n\t* @param @param sheet\n\t* @param @param firstRow\t开始行\n\t* @param @param lastRow\t\t结束行\n\t* @param @param firstCol\t开始列\n\t* @param @param lastCol \t 结束列\n\t* @return void    \n\t* @throws\n\t */\n\tpublic void mergeRegion(Sheet sheet, int firstRow, int lastRow, int firstCol, int lastCol) {  \n        sheet.addMergedRegion(new CellRangeAddress(firstRow, lastRow, firstCol, lastCol));  \n    }\n\t\n\t/**\n\t* @Title: getCellValue\n\t* @Description: 获取单元格的值\n\t* @param @param cell\n\t* @param @return    \n\t* @return String    \n\t* @throws\n\t */\n\tpublic String getCellValue(Cell cell) {\n\t\tif (cell == null) {\n\t\t\treturn null;\n\t\t}\n\t\t// 注意： 有时看到单元格是空的，但可能并不是null，只要编辑过的单元格，\n\t\t// 删除之后，其实那个位置的对象时存在的，所以可以用这个方法判空\n\t\t// ps： 如果是合并列，不管合并前哪个单元格有值，如ABC列，合并后AB列读取到的都会是该类型\n\t\tif (cell.getCellType() == Cell.CELL_TYPE_BLANK) {\n\t\t\treturn \"\";\n\t\t}\n\t\t// 字符型\n\t\tif (cell.getCellType() == Cell.CELL_TYPE_STRING) {\n\t\t\treturn cell.getStringCellValue();\n\t\t}\n\t\t// 布尔型\n\t\tif (cell.getCellType() == Cell.CELL_TYPE_BOOLEAN) {\n\t\t\treturn String.valueOf(cell.getBooleanCellValue());\n\t\t}\n\t\t// 数字型\n\t\tif (cell.getCellType() == Cell.CELL_TYPE_NUMERIC) {\n\t\t\t/* 因为日期和数字都是 Cell.CELL_TYPE_NUMERIC 类型，且 cell.getNumericCellValue() \n\t\t\t返回的是 double 型，利用 HSSFDateUtil.isCellDateFormatted() 可判断是否是日期类型，但\n\t\t\t日期格式只能处理yyyy-MM-dd, d/m/yyyy h:mm, HH:mm 等不含中文文字的日期格式，如需识别中文，\n\t\t\t只能根据样式来判断，以下是Excel中所有自定义的中文样式，代码if语句中也已添加所有相关中文日期，嫌麻烦可以看文末 */\n\t\t\t/* \n\t\t\t\tyyyy年m月d日---31\n\t\t\t\tyyyy年m月------57\n\t\t\t\tm月d日---------58\n\t\t\t\th\"时\"mm\"分\"--32\n\t\t\t\th\"时\"mm\"分\"ss\"秒\"--33\n\t\t\t\t上午/下午h\"时\"mm\"分\"--55\n\t\t\t\t上午/下午h\"时\"mm\"分\"ss\"秒\"--56\n\t\t\t*/\n\t\t\tif (HSSFDateUtil.isCellDateFormatted(cell) || cell.getCellStyle().getDataFormat() == 31 || \n\t\t\t\t\tcell.getCellStyle().getDataFormat() == 32 || cell.getCellStyle().getDataFormat() == 33 || \n\t\t\t\t\tcell.getCellStyle().getDataFormat() == 55 || cell.getCellStyle().getDataFormat() == 56 || \n\t\t\t\t\tcell.getCellStyle().getDataFormat() == 57 || cell.getCellStyle().getDataFormat() == 58) {\n\t\t\t\tDateFormat df = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\");\n\t\t\t\treturn df.format(cell.getDateCellValue());\n\t\t\t} else {\n\t\t\t\tcell.setCellType(Cell.CELL_TYPE_STRING);\n\t\t\t\treturn cell.getStringCellValue();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n}\n```\n#### 对于中文日期，也可以直接修改（我用的是POI3.6）org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(Cell cell) 的源码，以下是源码\n```Java\npublic static boolean isCellDateFormatted(Cell cell) {\n\tif (cell == null) return false;\n\tboolean bDate = false;\n\t\n\tdouble d = cell.getNumericCellValue();\n\tif ( DateUtil.isValidExcelDate(d) ) {\n\t\tCellStyle style = cell.getCellStyle();\n\t\tif(style==null) return false;\n\t\tint i = style.getDataFormat();\n\t\tString f = style.getDataFormatString();\n\t\tbDate = isADateFormat(i, f); // 这里调用了日期判断\n\t}\n\treturn bDate;\n}\n```\n#### 在方法DateUtil.isADateFormat(int formatIndex, String formatString)中找到String fs = formatString;在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码\n```Java\nfs = fs.replaceAll(\"[\\\"|\\']\",\"\").replaceAll(\"[年|月|日|时|分|秒|毫秒|微秒]\", \"\"); \n```","slug":"Java操作Excel","published":1,"updated":"2017-01-03T01:23:08.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou43000cpo2yx1drywv6","content":"<h4 id=\"选择：Apache-POI-和-JXL\"><a href=\"#选择：Apache-POI-和-JXL\" class=\"headerlink\" title=\"选择：Apache POI 和 JXL\"></a><strong>选择：Apache POI 和 JXL</strong></h4><hr>\n<h4 id=\"JXL没有使用过，网上查到的两者区别\"><a href=\"#JXL没有使用过，网上查到的两者区别\" class=\"headerlink\" title=\"JXL没有使用过，网上查到的两者区别\"></a>JXL没有使用过，网上查到的两者区别</h4><ol>\n<li><strong>JVM虚拟机内存消耗的情况：</strong><br>1). <em>数据量3000条数据,每条60列.JVM虚拟机内存大小64M. </em><br>2). <em>使用POI:运行到2800条左右就报内存溢出. <strong>（实际使用过程操作的数据都是30列几千行以上，并没有这样的现象存在）</strong></em><br>3). <em>使用JXL:3000条全部出来,并且内存还有21M的空间.</em></li>\n<li><strong>其它：</strong><br>1). <em>若导出图片的操作较多，建议使用JXL</em><br>2). <em>额外的Excel特性,例如处理公式,创建单元格样式–颜色,边框,字体,头部,脚部,数据验证,图像,超链接等.，建议使用POI</em><br>3).POI支持XLS和XLSX，且代码看起来比较简洁，而JXL只支持XLS</li>\n</ol>\n<hr>\n<h4 id=\"使用：以Apache-POI为例\"><a href=\"#使用：以Apache-POI为例\" class=\"headerlink\" title=\"使用：以Apache POI为例\"></a><strong>使用：以Apache POI为例</strong></h4><hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.DateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.usermodel.HSSFDateUtil;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Cell;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Row;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Sheet;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Workbook;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.util.CellRangeAddress;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelUtil</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getWorkBook</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 获取Excel文件对象</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> f</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> Workbook    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Workbook <span class=\"title\">getWorkBook</span><span class=\"params\">(File f)</span> </span>&#123;</div><div class=\"line\">\t\tWorkbook wb = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> (FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(f)) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 根据后缀获取Excel对象</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (f.getName().indexOf(<span class=\"string\">\".xlsx\"</span>) &gt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\t\twb = <span class=\"keyword\">new</span> XSSFWorkbook(fis);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\twb = <span class=\"keyword\">new</span> HSSFWorkbook(fis);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> wb;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: readExcel</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 读取Excel文件</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> wb</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheetIndex\t\tsheet页下标，从 0 开始</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> startReadLine\t开始读取的行，从 0 开始</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> tailLine    \t最后读取的行号</div><div class=\"line\">\t* <span class=\"doctag\">@return</span> void    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">readExcel</span><span class=\"params\">(Workbook wb, <span class=\"keyword\">int</span> sheetIndex, <span class=\"keyword\">int</span> startReadLine, <span class=\"keyword\">int</span> tailLine)</span> </span>&#123;</div><div class=\"line\">\t\tSheet sheet = wb.getSheetAt(sheetIndex);</div><div class=\"line\">\t\tRow row = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"comment\">// 行</span></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = startReadLine; i &lt; sheet.getLastRowNum() - tailLine + <span class=\"number\">1</span>; i++) &#123;</div><div class=\"line\">\t\t\trow = sheet.getRow(i);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 列</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; row.getLastCellNum(); j++) &#123;</div><div class=\"line\">\t\t\t\tCell cell = row.getCell(j);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 具体操作业务</span></div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getMergedRegionValue</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 获取合并单元格的值</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> row</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> column</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> String    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMergedRegionValue</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取一个 Sheet 表中合并单元格的数量</span></div><div class=\"line\">\t\t<span class=\"keyword\">int</span> sheetMergeCount = sheet.getNumMergedRegions();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sheetMergeCount; i++) &#123;</div><div class=\"line\">\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstColumn = ca.getFirstColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastColumn = ca.getLastColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstRow = ca.getFirstRow();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastRow = ca.getLastRow();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (row &gt;= firstRow &amp;&amp; row &lt;= lastRow) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (column &gt;= firstColumn &amp;&amp; column &lt;= lastColumn) &#123;</div><div class=\"line\">\t\t\t\t\tRow fRow = sheet.getRow(firstRow);</div><div class=\"line\">\t\t\t\t\tCell fCell = fRow.getCell(firstColumn);</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> getCellValue(fCell);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: isMergeRow</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 判断合并了行</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> row</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> column</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> boolean    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isMergeRow</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取一个 Sheet 表中合并单元格的数量</span></div><div class=\"line\">\t\t<span class=\"keyword\">int</span> sheetMergeCount = sheet.getNumMergedRegions();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sheetMergeCount; i++) &#123;</div><div class=\"line\">\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstColumn = ca.getFirstColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastColumn = ca.getLastColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstRow = ca.getFirstRow();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastRow = ca.getLastRow();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (row == firstRow &amp;&amp; row == lastRow) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (column &gt;= firstColumn &amp;&amp; column &lt;= lastColumn) &#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: isMergedRegion</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 判断指定的单元格是否是合并单元格</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> row</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> column</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> boolean    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isMergedRegion</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> sheetMergeCount = sheet.getNumMergedRegions();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sheetMergeCount; i++) &#123;</div><div class=\"line\">\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstColumn = ca.getFirstColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastColumn = ca.getLastColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstRow = ca.getFirstRow();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastRow = ca.getLastRow();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (row &gt;= firstRow &amp;&amp; row &lt;= lastRow) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (column &gt;= firstColumn &amp;&amp; column &lt;= lastColumn) &#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: hasMerged</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 判断 Sheet 页中是否含有合并单元格</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> boolean    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasMerged</span><span class=\"params\">(Sheet sheet)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> sheet.getNumMergedRegions() &gt; <span class=\"number\">0</span> ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: mergeRegion</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 合并单元格</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> firstRow\t开始行</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> lastRow\t\t结束行</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> firstCol\t开始列</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> lastCol \t 结束列</div><div class=\"line\">\t* <span class=\"doctag\">@return</span> void    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeRegion</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> firstRow, <span class=\"keyword\">int</span> lastRow, <span class=\"keyword\">int</span> firstCol, <span class=\"keyword\">int</span> lastCol)</span> </span>&#123;  </div><div class=\"line\">        sheet.addMergedRegion(<span class=\"keyword\">new</span> CellRangeAddress(firstRow, lastRow, firstCol, lastCol));  </div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getCellValue</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 获取单元格的值</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> cell</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> String    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getCellValue</span><span class=\"params\">(Cell cell)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 注意： 有时看到单元格是空的，但可能并不是null，只要编辑过的单元格，</span></div><div class=\"line\">\t\t<span class=\"comment\">// 删除之后，其实那个位置的对象时存在的，所以可以用这个方法判空</span></div><div class=\"line\">\t\t<span class=\"comment\">// ps： 如果是合并列，不管合并前哪个单元格有值，如ABC列，合并后AB列读取到的都会是该类型</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell.getCellType() == Cell.CELL_TYPE_BLANK) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 字符型</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell.getCellType() == Cell.CELL_TYPE_STRING) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> cell.getStringCellValue();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 布尔型</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell.getCellType() == Cell.CELL_TYPE_BOOLEAN) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> String.valueOf(cell.getBooleanCellValue());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 数字型</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell.getCellType() == Cell.CELL_TYPE_NUMERIC) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">/* 因为日期和数字都是 Cell.CELL_TYPE_NUMERIC 类型，且 cell.getNumericCellValue() </span></div><div class=\"line\">\t\t\t返回的是 double 型，利用 HSSFDateUtil.isCellDateFormatted() 可判断是否是日期类型，但</div><div class=\"line\">\t\t\t日期格式只能处理yyyy-MM-dd, d/m/yyyy h:mm, HH:mm 等不含中文文字的日期格式，如需识别中文，</div><div class=\"line\">\t\t\t只能根据样式来判断，以下是Excel中所有自定义的中文样式，代码if语句中也已添加所有相关中文日期，嫌麻烦可以看文末 */</div><div class=\"line\">\t\t\t<span class=\"comment\">/* </span></div><div class=\"line\">\t\t\t\tyyyy年m月d日---31</div><div class=\"line\">\t\t\t\tyyyy年m月------57</div><div class=\"line\">\t\t\t\tm月d日---------58</div><div class=\"line\">\t\t\t\th\"时\"mm\"分\"--32</div><div class=\"line\">\t\t\t\th\"时\"mm\"分\"ss\"秒\"--33</div><div class=\"line\">\t\t\t\t上午/下午h\"时\"mm\"分\"--55</div><div class=\"line\">\t\t\t\t上午/下午h\"时\"mm\"分\"ss\"秒\"--56</div><div class=\"line\">\t\t\t*/</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (HSSFDateUtil.isCellDateFormatted(cell) || cell.getCellStyle().getDataFormat() == <span class=\"number\">31</span> || </div><div class=\"line\">\t\t\t\t\tcell.getCellStyle().getDataFormat() == <span class=\"number\">32</span> || cell.getCellStyle().getDataFormat() == <span class=\"number\">33</span> || </div><div class=\"line\">\t\t\t\t\tcell.getCellStyle().getDataFormat() == <span class=\"number\">55</span> || cell.getCellStyle().getDataFormat() == <span class=\"number\">56</span> || </div><div class=\"line\">\t\t\t\t\tcell.getCellStyle().getDataFormat() == <span class=\"number\">57</span> || cell.getCellStyle().getDataFormat() == <span class=\"number\">58</span>) &#123;</div><div class=\"line\">\t\t\t\tDateFormat df = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd HH:mm:ss\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> df.format(cell.getDateCellValue());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\tcell.setCellType(Cell.CELL_TYPE_STRING);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> cell.getStringCellValue();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"对于中文日期，也可以直接修改（我用的是POI3-6）org-apache-poi-ss-usermodel-DateUtil-isCellDateFormatted-Cell-cell-的源码，以下是源码\"><a href=\"#对于中文日期，也可以直接修改（我用的是POI3-6）org-apache-poi-ss-usermodel-DateUtil-isCellDateFormatted-Cell-cell-的源码，以下是源码\" class=\"headerlink\" title=\"对于中文日期，也可以直接修改（我用的是POI3.6）org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(Cell cell) 的源码，以下是源码\"></a>对于中文日期，也可以直接修改（我用的是POI3.6）org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(Cell cell) 的源码，以下是源码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isCellDateFormatted</span><span class=\"params\">(Cell cell)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (cell == <span class=\"keyword\">null</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t<span class=\"keyword\">boolean</span> bDate = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">double</span> d = cell.getNumericCellValue();</div><div class=\"line\">\t<span class=\"keyword\">if</span> ( DateUtil.isValidExcelDate(d) ) &#123;</div><div class=\"line\">\t\tCellStyle style = cell.getCellStyle();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(style==<span class=\"keyword\">null</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = style.getDataFormat();</div><div class=\"line\">\t\tString f = style.getDataFormatString();</div><div class=\"line\">\t\tbDate = isADateFormat(i, f); <span class=\"comment\">// 这里调用了日期判断</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> bDate;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"在方法DateUtil-isADateFormat-int-formatIndex-String-formatString-中找到String-fs-formatString-在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码\"><a href=\"#在方法DateUtil-isADateFormat-int-formatIndex-String-formatString-中找到String-fs-formatString-在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码\" class=\"headerlink\" title=\"在方法DateUtil.isADateFormat(int formatIndex, String formatString)中找到String fs = formatString;在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码\"></a>在方法DateUtil.isADateFormat(int formatIndex, String formatString)中找到String fs = formatString;在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fs = fs.replaceAll(<span class=\"string\">\"[\\\"|\\']\"</span>,<span class=\"string\">\"\"</span>).replaceAll(<span class=\"string\">\"[年|月|日|时|分|秒|毫秒|微秒]\"</span>, <span class=\"string\">\"\"</span>);</div></pre></td></tr></table></figure>","excerpt":"","more":"<h4 id=\"选择：Apache-POI-和-JXL\"><a href=\"#选择：Apache-POI-和-JXL\" class=\"headerlink\" title=\"选择：Apache POI 和 JXL\"></a><strong>选择：Apache POI 和 JXL</strong></h4><hr>\n<h4 id=\"JXL没有使用过，网上查到的两者区别\"><a href=\"#JXL没有使用过，网上查到的两者区别\" class=\"headerlink\" title=\"JXL没有使用过，网上查到的两者区别\"></a>JXL没有使用过，网上查到的两者区别</h4><ol>\n<li><strong>JVM虚拟机内存消耗的情况：</strong><br>1). <em>数据量3000条数据,每条60列.JVM虚拟机内存大小64M. </em><br>2). <em>使用POI:运行到2800条左右就报内存溢出. <strong>（实际使用过程操作的数据都是30列几千行以上，并没有这样的现象存在）</strong></em><br>3). <em>使用JXL:3000条全部出来,并且内存还有21M的空间.</em></li>\n<li><strong>其它：</strong><br>1). <em>若导出图片的操作较多，建议使用JXL</em><br>2). <em>额外的Excel特性,例如处理公式,创建单元格样式–颜色,边框,字体,头部,脚部,数据验证,图像,超链接等.，建议使用POI</em><br>3).POI支持XLS和XLSX，且代码看起来比较简洁，而JXL只支持XLS</li>\n</ol>\n<hr>\n<h4 id=\"使用：以Apache-POI为例\"><a href=\"#使用：以Apache-POI为例\" class=\"headerlink\" title=\"使用：以Apache POI为例\"></a><strong>使用：以Apache POI为例</strong></h4><hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.DateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.usermodel.HSSFDateUtil;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Cell;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Row;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Sheet;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Workbook;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.util.CellRangeAddress;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelUtil</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getWorkBook</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 获取Excel文件对象</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> f</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> Workbook    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Workbook <span class=\"title\">getWorkBook</span><span class=\"params\">(File f)</span> </span>&#123;</div><div class=\"line\">\t\tWorkbook wb = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> (FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(f)) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 根据后缀获取Excel对象</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (f.getName().indexOf(<span class=\"string\">\".xlsx\"</span>) &gt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\t\twb = <span class=\"keyword\">new</span> XSSFWorkbook(fis);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\twb = <span class=\"keyword\">new</span> HSSFWorkbook(fis);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> wb;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: readExcel</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 读取Excel文件</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> wb</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheetIndex\t\tsheet页下标，从 0 开始</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> startReadLine\t开始读取的行，从 0 开始</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> tailLine    \t最后读取的行号</div><div class=\"line\">\t* <span class=\"doctag\">@return</span> void    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">readExcel</span><span class=\"params\">(Workbook wb, <span class=\"keyword\">int</span> sheetIndex, <span class=\"keyword\">int</span> startReadLine, <span class=\"keyword\">int</span> tailLine)</span> </span>&#123;</div><div class=\"line\">\t\tSheet sheet = wb.getSheetAt(sheetIndex);</div><div class=\"line\">\t\tRow row = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"comment\">// 行</span></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = startReadLine; i &lt; sheet.getLastRowNum() - tailLine + <span class=\"number\">1</span>; i++) &#123;</div><div class=\"line\">\t\t\trow = sheet.getRow(i);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 列</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; row.getLastCellNum(); j++) &#123;</div><div class=\"line\">\t\t\t\tCell cell = row.getCell(j);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 具体操作业务</span></div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getMergedRegionValue</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 获取合并单元格的值</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> row</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> column</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> String    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMergedRegionValue</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取一个 Sheet 表中合并单元格的数量</span></div><div class=\"line\">\t\t<span class=\"keyword\">int</span> sheetMergeCount = sheet.getNumMergedRegions();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sheetMergeCount; i++) &#123;</div><div class=\"line\">\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstColumn = ca.getFirstColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastColumn = ca.getLastColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstRow = ca.getFirstRow();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastRow = ca.getLastRow();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (row &gt;= firstRow &amp;&amp; row &lt;= lastRow) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (column &gt;= firstColumn &amp;&amp; column &lt;= lastColumn) &#123;</div><div class=\"line\">\t\t\t\t\tRow fRow = sheet.getRow(firstRow);</div><div class=\"line\">\t\t\t\t\tCell fCell = fRow.getCell(firstColumn);</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> getCellValue(fCell);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: isMergeRow</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 判断合并了行</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> row</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> column</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> boolean    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isMergeRow</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取一个 Sheet 表中合并单元格的数量</span></div><div class=\"line\">\t\t<span class=\"keyword\">int</span> sheetMergeCount = sheet.getNumMergedRegions();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sheetMergeCount; i++) &#123;</div><div class=\"line\">\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstColumn = ca.getFirstColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastColumn = ca.getLastColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstRow = ca.getFirstRow();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastRow = ca.getLastRow();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (row == firstRow &amp;&amp; row == lastRow) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (column &gt;= firstColumn &amp;&amp; column &lt;= lastColumn) &#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: isMergedRegion</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 判断指定的单元格是否是合并单元格</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> row</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> column</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> boolean    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isMergedRegion</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> sheetMergeCount = sheet.getNumMergedRegions();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; sheetMergeCount; i++) &#123;</div><div class=\"line\">\t\t\tCellRangeAddress ca = sheet.getMergedRegion(i);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstColumn = ca.getFirstColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastColumn = ca.getLastColumn();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> firstRow = ca.getFirstRow();</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> lastRow = ca.getLastRow();</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (row &gt;= firstRow &amp;&amp; row &lt;= lastRow) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (column &gt;= firstColumn &amp;&amp; column &lt;= lastColumn) &#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: hasMerged</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 判断 Sheet 页中是否含有合并单元格</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> boolean    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasMerged</span><span class=\"params\">(Sheet sheet)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> sheet.getNumMergedRegions() &gt; <span class=\"number\">0</span> ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: mergeRegion</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 合并单元格</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> firstRow\t开始行</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> lastRow\t\t结束行</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> firstCol\t开始列</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> lastCol \t 结束列</div><div class=\"line\">\t* <span class=\"doctag\">@return</span> void    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeRegion</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> firstRow, <span class=\"keyword\">int</span> lastRow, <span class=\"keyword\">int</span> firstCol, <span class=\"keyword\">int</span> lastCol)</span> </span>&#123;  </div><div class=\"line\">        sheet.addMergedRegion(<span class=\"keyword\">new</span> CellRangeAddress(firstRow, lastRow, firstCol, lastCol));  </div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getCellValue</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 获取单元格的值</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> cell</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> String    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getCellValue</span><span class=\"params\">(Cell cell)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 注意： 有时看到单元格是空的，但可能并不是null，只要编辑过的单元格，</span></div><div class=\"line\">\t\t<span class=\"comment\">// 删除之后，其实那个位置的对象时存在的，所以可以用这个方法判空</span></div><div class=\"line\">\t\t<span class=\"comment\">// ps： 如果是合并列，不管合并前哪个单元格有值，如ABC列，合并后AB列读取到的都会是该类型</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell.getCellType() == Cell.CELL_TYPE_BLANK) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 字符型</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell.getCellType() == Cell.CELL_TYPE_STRING) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> cell.getStringCellValue();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 布尔型</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell.getCellType() == Cell.CELL_TYPE_BOOLEAN) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> String.valueOf(cell.getBooleanCellValue());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 数字型</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (cell.getCellType() == Cell.CELL_TYPE_NUMERIC) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">/* 因为日期和数字都是 Cell.CELL_TYPE_NUMERIC 类型，且 cell.getNumericCellValue() </div><div class=\"line\">\t\t\t返回的是 double 型，利用 HSSFDateUtil.isCellDateFormatted() 可判断是否是日期类型，但</div><div class=\"line\">\t\t\t日期格式只能处理yyyy-MM-dd, d/m/yyyy h:mm, HH:mm 等不含中文文字的日期格式，如需识别中文，</div><div class=\"line\">\t\t\t只能根据样式来判断，以下是Excel中所有自定义的中文样式，代码if语句中也已添加所有相关中文日期，嫌麻烦可以看文末 */</span></div><div class=\"line\">\t\t\t<span class=\"comment\">/* </div><div class=\"line\">\t\t\t\tyyyy年m月d日---31</div><div class=\"line\">\t\t\t\tyyyy年m月------57</div><div class=\"line\">\t\t\t\tm月d日---------58</div><div class=\"line\">\t\t\t\th\"时\"mm\"分\"--32</div><div class=\"line\">\t\t\t\th\"时\"mm\"分\"ss\"秒\"--33</div><div class=\"line\">\t\t\t\t上午/下午h\"时\"mm\"分\"--55</div><div class=\"line\">\t\t\t\t上午/下午h\"时\"mm\"分\"ss\"秒\"--56</div><div class=\"line\">\t\t\t*/</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (HSSFDateUtil.isCellDateFormatted(cell) || cell.getCellStyle().getDataFormat() == <span class=\"number\">31</span> || </div><div class=\"line\">\t\t\t\t\tcell.getCellStyle().getDataFormat() == <span class=\"number\">32</span> || cell.getCellStyle().getDataFormat() == <span class=\"number\">33</span> || </div><div class=\"line\">\t\t\t\t\tcell.getCellStyle().getDataFormat() == <span class=\"number\">55</span> || cell.getCellStyle().getDataFormat() == <span class=\"number\">56</span> || </div><div class=\"line\">\t\t\t\t\tcell.getCellStyle().getDataFormat() == <span class=\"number\">57</span> || cell.getCellStyle().getDataFormat() == <span class=\"number\">58</span>) &#123;</div><div class=\"line\">\t\t\t\tDateFormat df = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd HH:mm:ss\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> df.format(cell.getDateCellValue());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\tcell.setCellType(Cell.CELL_TYPE_STRING);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> cell.getStringCellValue();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"对于中文日期，也可以直接修改（我用的是POI3-6）org-apache-poi-ss-usermodel-DateUtil-isCellDateFormatted-Cell-cell-的源码，以下是源码\"><a href=\"#对于中文日期，也可以直接修改（我用的是POI3-6）org-apache-poi-ss-usermodel-DateUtil-isCellDateFormatted-Cell-cell-的源码，以下是源码\" class=\"headerlink\" title=\"对于中文日期，也可以直接修改（我用的是POI3.6）org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(Cell cell) 的源码，以下是源码\"></a>对于中文日期，也可以直接修改（我用的是POI3.6）org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(Cell cell) 的源码，以下是源码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isCellDateFormatted</span><span class=\"params\">(Cell cell)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (cell == <span class=\"keyword\">null</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t<span class=\"keyword\">boolean</span> bDate = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">double</span> d = cell.getNumericCellValue();</div><div class=\"line\">\t<span class=\"keyword\">if</span> ( DateUtil.isValidExcelDate(d) ) &#123;</div><div class=\"line\">\t\tCellStyle style = cell.getCellStyle();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(style==<span class=\"keyword\">null</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = style.getDataFormat();</div><div class=\"line\">\t\tString f = style.getDataFormatString();</div><div class=\"line\">\t\tbDate = isADateFormat(i, f); <span class=\"comment\">// 这里调用了日期判断</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> bDate;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"在方法DateUtil-isADateFormat-int-formatIndex-String-formatString-中找到String-fs-formatString-在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码\"><a href=\"#在方法DateUtil-isADateFormat-int-formatIndex-String-formatString-中找到String-fs-formatString-在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码\" class=\"headerlink\" title=\"在方法DateUtil.isADateFormat(int formatIndex, String formatString)中找到String fs = formatString;在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码\"></a>在方法DateUtil.isADateFormat(int formatIndex, String formatString)中找到String fs = formatString;在后面加入中文过滤，重新生成class即可，但是不推荐直接修改源码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fs = fs.replaceAll(<span class=\"string\">\"[\\\"|\\']\"</span>,<span class=\"string\">\"\"</span>).replaceAll(<span class=\"string\">\"[年|月|日|时|分|秒|毫秒|微秒]\"</span>, <span class=\"string\">\"\"</span>);</div></pre></td></tr></table></figure>"},{"title":"Java操作redis","date":"2016-07-17T03:53:17.000Z","_content":"Jedis的简单使用\n```Java\npackage test;\n\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Set;\n\nimport redis.clients.jedis.Jedis;\n\npublic class Test {\n\n\tpublic static void main(String[] args) {\n\t\t// 连接本地的 redis 服务\n\t\tJedis jedis = new Jedis(\"localhost\");\n\t\tSystem.out.println(\"Connection to server sucessfully\");\n\t\t// 存储数据到列表中\n\t\tjedis.lpush(\"tutorial-list\", \"Redis\");\n\t\tjedis.lpush(\"tutorial-list\", \"Mongodb\");\n\t\tjedis.lpush(\"tutorial-list\", \"Mysql\");\n\t\t// 获取存储的数据并输出\n\t\tList<String> list = jedis.lrange(\"tutorial-list\", 0, 5);\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tSystem.out.println(\"Stored string in redis: \" + list.get(i));\n\t\t}\n\t\t// 获取数据并输出\n\t\tSet<String> list1 = jedis.keys(\"*\");\n\t\tIterator<String> it = list1.iterator();\n\t\twhile (it.hasNext()) {\n\t\t\tSystem.out.println(\"List of stored keys: \" + it.next());\n\t\t}\n\t}\n\t\n}\n```\n在实际的开发中操作redis总是需要用到连接池，同时redis也需要加密\n先说一下windows上加密的坑\n```\n设置密码：\nredis 127.0.0.1:6379> config set requirepass test123\n查询密码：\nredis 127.0.0.1:6379> config get requirepass\n(error) ERR operation not permitted\n密码验证：\nredis 127.0.0.1:6379> auth test123\nOK\n再次查询：\nredis 127.0.0.1:6379> config get requirepass\n1) \"requirepass\"\n2) \"test123\"\n```\nPS：如果配置文件中没添加密码 那么redis重启后，密码失效；所以我们需要在配置文件中配置requirepass的密码（当redis重启时密码依然有效）。\n打开redis.windows.conf配置文件，找到requirepass，然后修改如下:\n```\nrequirepass yourpassword\n```\n\n然而发现在windows下，启动redis-server.exe后用redis-cli.exe登录后并不需要密码验证，原因是redis-server.exe的启动并不依赖redis.windows.conf，我的解决方法是为redis-server.exe创建一个快捷方式，然后右键属性，将目标后加上：（空格）+ redis.windows.conf，如果有更好的方法，欢迎留言。\n\n当然，如果想把redis注册成windows服务也可以\n```\n注册服务\nRedis-server.exe –service-install redis.windows.conf\n删除服务\nredis-server –service-uninstall\n开启服务\nredis-server –service-start\n停止服务\nredis-server –service-stop\n```\n下面提供jedis操作的工具类\n```Java\npackage test.util;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.google.common.collect.Maps;\nimport test.util.ObjectUtils;\nimport test.util.StringUtil;\n\nimport redis.clients.jedis.Jedis;\nimport redis.clients.jedis.JedisPool;\nimport redis.clients.jedis.exceptions.JedisException;\n\npublic class JedisUtils {\n\tprivate final static Logger logger = LoggerFactory.getLogger(JedisUtils.class);\n\t\n\tpublic final static int DEFAULT_CACHE_SECONDS = 30 * 60; //缓存30分钟\n\t\n\t// 这里如果用spring的话可以使用配置注入，配置见文章末尾\n\tpublic JedisPool jedisPool;\n\n\tpublic JedisPool getJedisPool() {\n\t\treturn jedisPool;\n\t}\n\n\tpublic void setJedisPool(JedisPool jedisPool) {\n\t\tthis.jedisPool = jedisPool;\n\t}\n\n\t// 如果不使用注入，这里初始化一下连接池\n\tpublic void init() {\n\t\tif (jedisPool== null) {\n\t\t\tJedisPoolConfig config = new JedisPoolConfig();\n\t\t\t// 控制一个pool可分配多少个jedis实例，通过pool.getResource()来获取\n\t\t\tconfig.setMaxActive(50);\n\t\t\t// 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例\n            config.setMaxIdle(5);\n            // 表示当borrow(引入)一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException\n            config.setMaxWait(1000 * 100);\n            // 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的\n            config.setTestOnBorrow(true);  \n            // 这里获取配置不多说，后面的3600表示超时时间，database表示数据库号，都可以不填\n            pool = new JedisPool(config, \"host:port\", password, 3600, database);\n\t\t}\n\t}\n\n\t/**\n\t * 获取缓存\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic String get(String key)throws Exception {\n\t\tString value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.get(key);\n\t\t\t\tvalue = StringUtils.isNotBlank(value) && !\"nil\".equalsIgnoreCase(value) ? value : null;\n\t\t\t\tlogger.debug(\"get {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"get {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * 获取缓存\n\t * @param key 键\n\t * @param  cacheSeconds 缓存时间\n\t * @return 值\n\t */\n\tpublic String get(String key, int cacheSeconds)throws Exception {\n\t\tString value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.get(key);\n\t\t\t\tif (cacheSeconds != 0) {\n\t\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t\t}\n\t\t\t\tvalue = StringUtils.isNotBlank(value) && !\"nil\".equalsIgnoreCase(value) ? value : null;\n\t\t\t\tlogger.debug(\"get {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"get {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t\n\t/**\n\t * 设置缓存\n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic String set(String key, String value, int cacheSeconds) throws Exception{\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.set(key, value);\n\t\t\tif (cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"set {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"set {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 获取单个hash缓存\n\t * @param @param key\n\t * @param @param field \n\t * @return String\n\t */\n\tpublic String hget(String key, String field) throws Exception {\n\t\tString value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tvalue = jedis.hget(key, field);\n\t\t\tvalue = StringUtils.isNotBlank(value) && !\"nil\".equalsIgnoreCase(value) ? value : null;\n\t\t\tlogger.debug(\"hget {} = {}\", field, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"hget {} = {}\", field, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * 设置单个hash缓存\n\t * @param @param key\n\t * @param @param field \n\t * @return String\n\t */\n\tpublic String hset(String key, String field, String value) throws Exception {\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tjedis.hset(key, field, value);\n\t\t\tlogger.debug(\"hset {} : {} = {}\", key, field, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"hset {} : {} = {}\", key, field, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 获取List缓存\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic List<String> getList(String key) throws Exception{\n\t\tList<String> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.lrange(key, 0, -1);\n\t\t\t\tlogger.debug(\"getList {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getList {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t\n\t/**\n\t * 设置List缓存\n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic long setList(String key, List<String> value, int cacheSeconds)throws Exception {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tjedis.del(key);\n\t\t\t}\n\t\t\tresult = jedis.rpush(key, (String[])value.toArray());\n\t\t\tif (cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"setList {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"setList {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t\n\t/**\n\t * 向List缓存中添加值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic long listAdd(String key, String... value)throws Exception  {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.rpush(key, value);\n\t\t\tlogger.debug(\"listAdd {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"listAdd {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * 获取有序zet缓存 （按分值由低到高排序输出）\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic Set<String> getZsetZrange(String key) throws Exception {\n\t\treturn getZsetZrange(key,0 , -1);\n\t}\n\t\n\t/**\n\t * 获取有序zet缓存 （按分值由高到低排序输出）\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic Set<String> getZsetZrevrange(String key)throws Exception{\n\t\treturn  getZsetZrevrange(key,0 , -1);\n\t}\n\t\n\n\t/**\n\t * \n\t* @Title: getZsetZrangePage\n\t* @Description: 分页获取 获取有序zet缓存 （按分值由低到高排序输出）\n\t* @param @param key\n\t* @param @param end\n\t* @param @return    \n\t* @return Set<String>    \n\t* @throws\n\t */\n\tpublic Set<String> getZsetZrange(String key,long start , long end) throws Exception{\n\t\tSet<String> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.zrange(key, start, end);\n\t\t\t\tlogger.debug(\"getZset {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getZset {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * \n\t* @Title: getZsetZrevrange\n\t* @Description: 获取有序zet缓存 （按分值由高到低排序输出）\n\t* @param @param key\n\t* @param @param start\n\t* @param @param end\n\t* @param @return    \n\t* @return Set<String>    \n\t* @throws\n\t */\n\tpublic Set<String> getZsetZrevrange(String key,long start , long end) throws Exception{\n\t\tSet<String> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.zrevrange (key, start,end);\n\t\t\t\tlogger.debug(\"getZset {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getZset {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\n\t\n\t/**\n\t * 设置Set缓存\n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic long setZset(String key, Map<String, Double> scoreMembers, int cacheSeconds) throws Exception{\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\tboolean isExists = false;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tisExists = true;\n\t\t\t}\n\t\t\tjedis.zadd(key, scoreMembers);\n\t\t\tif (!isExists && cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"setZset {} = {}\", key, scoreMembers);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"setZset {} = {}\", key, scoreMembers, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t\n\t/**\n\t * 获取Map缓存\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic Map<String, String> getMap(String key) throws Exception{\n\t\tMap<String, String> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.hgetAll(key);\n\t\t\t\tlogger.debug(\"getMap {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * 获取Map缓存里某个key的值\n\t* @Title: getMapKeyVal\n\t* @Description: TODO\n\t* @param @param key\n\t* @param @param mapKey\n\t* @param @return    \n\t* @return String    \n\t* @throws\n\t */\n\tpublic String  getMapKeyVal(String key,String mapKey) throws Exception{\n\t\tString  value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tif(jedis.hexists(key, mapKey)){\n\t\t\t\t\tvalue = jedis.hget(key, mapKey);\n\t\t\t\t\tlogger.debug(\"getMap {}  {} = {}\", key, mapKey,value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * 获取Map缓存\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic Map<String, Object> getObjectMap(String key) throws Exception{\n\t\tMap<String, Object> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(getBytesKey(key))) {\n\t\t\t\tvalue = Maps.newHashMap();\n\t\t\t\tMap<byte[], byte[]> map = jedis.hgetAll(getBytesKey(key));\n\t\t\t\tfor (Map.Entry<byte[], byte[]> e : map.entrySet()){\n\t\t\t\t\tvalue.put(StringUtil.toString(e.getKey()), toObject(e.getValue()));\n\t\t\t\t}\n\t\t\t\tlogger.debug(\"getObjectMap {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getObjectMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * 设置Map缓存 \n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic String setMap(String key, Map<String, String> value, int cacheSeconds)throws Exception {\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\tboolean isExists = false;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tisExists = true;\n\t\t\t}\n\t\t\tresult = jedis.hmset(key, value);\n\t\t\tif (!isExists && cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"setMap {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"setMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 设置Map缓存 \n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic String setObjectMap(String key, Map<String, Object> value, int cacheSeconds) throws Exception{\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\tboolean isExists = false;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(getBytesKey(key))) {\n\t\t\t\tisExists = true;\n\t\t\t}\n\t\t\tMap<byte[], byte[]> map = Maps.newHashMap();\n\t\t\tfor (Map.Entry<String, Object> e : value.entrySet()){\n\t\t\t\tmap.put(getBytesKey(e.getKey()), toBytes(e.getValue()));\n\t\t\t}\n\t\t\tresult = jedis.hmset(getBytesKey(key), (Map<byte[], byte[]>)map);\n\t\t\tif (!isExists && cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"setObjectMap {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"setObjectMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 向Map缓存中添加值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic String mapPut(String key, Map<String, String> value) throws Exception{\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hmset(key, value);\n\t\t\tlogger.debug(\"mapPut {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapPut {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 向Map缓存中添加值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic String mapObjectPut(String key, Map<String, Object> value)throws Exception {\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tMap<byte[], byte[]> map = Maps.newHashMap();\n\t\t\tfor (Map.Entry<String, Object> e : value.entrySet()){\n\t\t\t\tmap.put(getBytesKey(e.getKey()), toBytes(e.getValue()));\n\t\t\t}\n\t\t\tresult = jedis.hmset(getBytesKey(key), (Map<byte[], byte[]>)map);\n\t\t\tlogger.debug(\"mapObjectPut {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapObjectPut {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 移除Map缓存中的值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic long mapRemove(String key, String mapKey)throws Exception {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hdel(key, mapKey);\n\t\t\tlogger.debug(\"mapRemove {}  {}\", key, mapKey);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapRemove {}  {}\", key, mapKey, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 移除Map缓存中的值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic long mapObjectRemove(String key, String mapKey) throws Exception {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hdel(getBytesKey(key), getBytesKey(mapKey));\n\t\t\tlogger.debug(\"mapObjectRemove {}  {}\", key, mapKey);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapObjectRemove {}  {}\", key, mapKey, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 判断Map缓存中的Key是否存在\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic boolean mapExists(String key, String mapKey)throws Exception  {\n\t\tboolean result = false;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hexists(key, mapKey);\n\t\t\tlogger.debug(\"mapExists {}  {}\", key, mapKey);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapExists {}  {}\", key, mapKey, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 判断Map缓存中的Key是否存在\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic boolean mapObjectExists(String key, String mapKey)throws Exception {\n\t\tboolean result = false;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hexists(getBytesKey(key), getBytesKey(mapKey));\n\t\t\tlogger.debug(\"mapObjectExists {}  {}\", key, mapKey);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapObjectExists {}  {}\", key, mapKey, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 删除缓存\n\t * @param key 键\n\t * @return\n\t */\n\tpublic long del(String key) throws Exception{\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)){\n\t\t\t\tresult = jedis.del(key);\n\t\t\t\tlogger.debug(\"del {}\", key);\n\t\t\t}else{\n\t\t\t\tlogger.debug(\"del {} not exists\", key);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"del {}\", key, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * 删除缓存\n\t * @param key 键\n\t * @return\n\t */\n\tpublic long delObject(String key)throws Exception {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(getBytesKey(key))){\n\t\t\t\tresult = jedis.del(getBytesKey(key));\n\t\t\t\tlogger.debug(\"delObject {}\", key);\n\t\t\t}else{\n\t\t\t\tlogger.debug(\"delObject {} not exists\", key);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"delObject {}\", key, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 缓存是否存在\n\t * @param key 键\n\t * @return\n\t */\n\tpublic boolean exists(String key)throws Exception {\n\t\tboolean result = false;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.exists(key);\n\t\t\tlogger.debug(\"exists {}\", key);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"exists {}\", key, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 缓存是否存在\n\t * @param key 键\n\t * @return\n\t */\n\tpublic boolean existsObject(String key)throws Exception  {\n\t\tboolean result = false;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.exists(getBytesKey(key));\n\t\t\tlogger.debug(\"existsObject {}\", key);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"existsObject {}\", key, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * 获取资源\n\t * @return\n\t * @throws JedisException\n\t */\n\tpublic Jedis getResource()  throws Exception {\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = jedisPool.getResource();\n\t\t} catch (JedisException e) {\n\t\t\tlogger.warn(\"getResource.\", e);\n\t\t\treturnBrokenResource(jedis);\n\t\t\tthrow new Exception(e);\n\t\t}\n\t\treturn jedis;\n\t}\n\n\t/**\n\t * 归还资源\n\t * @param jedis\n\t * @param isBroken\n\t */\n\tpublic void returnBrokenResource(Jedis jedis) {\n\t\tif (jedis != null) {\n\t\t\t/*jedisPool.returnBrokenResource(jedis);*/\n\t\t\tjedis.close();\n\t\t}\n\t}\n\t\n\t/**\n\t * 释放资源\n\t * @param jedis\n\t * @param isBroken\n\t */\n\tpublic void returnResource(Jedis jedis) {\n\t\tif (jedis != null) {\n\t\t\t/*jedisPool.returnResource(jedis);*/\n\t\t\tjedis.close();\n\t\t}\n\t}\n\n\t/**\n\t * 获取byte[]类型Key\n\t * @param key\n\t * @return\n\t */\n\tpublic byte[] getBytesKey(Object object){\n\t\tif(object instanceof String){\n    \t\treturn StringUtil.getBytes((String)object);\n    \t}else{\n    \t\treturn ObjectUtils.serialize(object);\n    \t}\n\t}\n\t\n\t/**\n\t * Object转换byte[]类型\n\t * @param key\n\t * @return\n\t */\n\tpublic byte[] toBytes(Object object){\n    \treturn ObjectUtils.serialize(object);\n\t}\n\n\t/**\n\t * byte[]型转换Object\n\t * @param key\n\t * @return\n\t */\n\tpublic Object toObject(byte[] bytes){\n\t\treturn ObjectUtils.unserialize(bytes);\n\t}\n\n}\n```\nObject序列化和反序列化工具类\n```Java\npackage test.util;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\n\npublic class ObjectUtils {\n\n\t\n\t/**\n\t * 序列化对象\n\t * @param object\n\t * @return\n\t */\n\tpublic static byte[] serialize(Object object) {\n\t\t byte[]  bytes = null;\n\t\tObjectOutputStream oos = null;\n\t\tByteArrayOutputStream baos = null;\n\t\ttry {\n\t\t\tif (object != null){\n\t\t\t\tbaos = new ByteArrayOutputStream();\n\t\t\t\toos = new ObjectOutputStream(baos);\n\t\t\t\toos.writeObject(object);\n\t\t\t\tbytes = baos.toByteArray();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t} finally{\n\t\t\ttry {\n\t\t\t\tif(null != oos) {\n\t\t\t\t\toos.close();\n\t\t\t\t}\n\t\t\t\tif(null != baos) {\n\t\t\t\t\tbaos.close();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch (Exception e2) {\n\t\t\t\te2.printStackTrace();\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn bytes;\n\t}\n\n\t/**\n\t * 反序列化对象\n\t * @param bytes\n\t * @return\n\t */\n\tpublic static Object unserialize(byte[] bytes) {\n\t\tObject object = null;\n\t\tByteArrayInputStream bais = null;\n\t\tObjectInputStream ois = null;\n\t\ttry {\n\t\t\tif (bytes != null && bytes.length > 0){\n\t\t\t\tbais = new ByteArrayInputStream(bytes);\n\t\t\t\tois = new ObjectInputStream(bais);\n\t\t\t\tobject = ois.readObject();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t} finally{\n\t\t\ttry {\n\t\t\t\tif(null != ois) {\n\t\t\t\t\tois.close();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(null != bais) {\n\t\t\t\t\tbais.close();\n\t\t\t\t}\n\t\t\t} catch (Exception e2) {\n\t\t\t\te2.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn  object ;\n\t}\n}\n```\nString工具类\n```Java\npackage test.util;\n\n\npublic class StringUtil {\n\t\n\tprivate static final String CHARSET_NAME = \"UTF-8\";\n\n\t/**\n \t * \n \t* @Title: toString\n \t* @Description: 把字节流转为字符串\n \t* @param @param content\n \t* @param @param charset\n \t* @param @return    \n \t* @return String    \n \t* @throws\n \t */\n    public static String toString(byte[]content, String charset){\n    \tString result = \"\";\n    \ttry {\n        \tif(null != content && content.length > 0){\n        \t\tresult =  new String(content, charset);\n        \t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n    \t\n\n    \treturn result;\n    }\n \n\t/**\n\t * 转换为字节数组\n\t * @param str\n\t * @return\n\t */\n\tpublic static String toString(byte[] bytes){\n\t\treturn  toString(bytes, \"UTF-8\");\n\t}\n\t\n\t/**\n\t * 转换为字节数组\n\t * @param str\n\t * @return\n\t */\n\tpublic static byte[] getBytes(String str){\n\t\tif (str != null){\n\t\t\ttry {\n\t\t\t\treturn str.getBytes(CHARSET_NAME);\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\t\n}\n```\nspring配置的片段\n```XML\n<!-- 连接池配置 -->\n<bean id=\"jedisPool\" class=\"redis.clients.jedis.JedisPool\" destroy-method=\"destroy\">\n\t<constructor-arg index=\"0\" ref=\"jedisPoolConfig\" />\n\t<constructor-arg index=\"1\" value=\"${redis_host}\" type=\"java.lang.String\"  />\n\t<constructor-arg index=\"2\" value=\"${redis_port}\" type=\"int\" />\n\t<constructor-arg index=\"3\" value=\"360000\" type=\"int\" /> <!-- 超时时间 单位ms -->\n\t<constructor-arg index=\"4\" value=\"${redis_password}\" type=\"java.lang.String\" />\n\t<constructor-arg index=\"5\" value=\"${redis_database}\" type=\"int\" />\n</bean>\n<!-- 注入 -->\n<bean id=\"jedisUtils\" class=\"test.util.JedisUtils\">\n\t<property name=\"jedisPool\" ref=\"jedisPool\"/>\n</bean>\n```","source":"_posts/Java操作redis.md","raw":"---\ntitle: Java操作redis\ndate: 2016-07-17 11:53:17\ncategories: [Java]\ntags: [Java]\n---\nJedis的简单使用\n```Java\npackage test;\n\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Set;\n\nimport redis.clients.jedis.Jedis;\n\npublic class Test {\n\n\tpublic static void main(String[] args) {\n\t\t// 连接本地的 redis 服务\n\t\tJedis jedis = new Jedis(\"localhost\");\n\t\tSystem.out.println(\"Connection to server sucessfully\");\n\t\t// 存储数据到列表中\n\t\tjedis.lpush(\"tutorial-list\", \"Redis\");\n\t\tjedis.lpush(\"tutorial-list\", \"Mongodb\");\n\t\tjedis.lpush(\"tutorial-list\", \"Mysql\");\n\t\t// 获取存储的数据并输出\n\t\tList<String> list = jedis.lrange(\"tutorial-list\", 0, 5);\n\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\tSystem.out.println(\"Stored string in redis: \" + list.get(i));\n\t\t}\n\t\t// 获取数据并输出\n\t\tSet<String> list1 = jedis.keys(\"*\");\n\t\tIterator<String> it = list1.iterator();\n\t\twhile (it.hasNext()) {\n\t\t\tSystem.out.println(\"List of stored keys: \" + it.next());\n\t\t}\n\t}\n\t\n}\n```\n在实际的开发中操作redis总是需要用到连接池，同时redis也需要加密\n先说一下windows上加密的坑\n```\n设置密码：\nredis 127.0.0.1:6379> config set requirepass test123\n查询密码：\nredis 127.0.0.1:6379> config get requirepass\n(error) ERR operation not permitted\n密码验证：\nredis 127.0.0.1:6379> auth test123\nOK\n再次查询：\nredis 127.0.0.1:6379> config get requirepass\n1) \"requirepass\"\n2) \"test123\"\n```\nPS：如果配置文件中没添加密码 那么redis重启后，密码失效；所以我们需要在配置文件中配置requirepass的密码（当redis重启时密码依然有效）。\n打开redis.windows.conf配置文件，找到requirepass，然后修改如下:\n```\nrequirepass yourpassword\n```\n\n然而发现在windows下，启动redis-server.exe后用redis-cli.exe登录后并不需要密码验证，原因是redis-server.exe的启动并不依赖redis.windows.conf，我的解决方法是为redis-server.exe创建一个快捷方式，然后右键属性，将目标后加上：（空格）+ redis.windows.conf，如果有更好的方法，欢迎留言。\n\n当然，如果想把redis注册成windows服务也可以\n```\n注册服务\nRedis-server.exe –service-install redis.windows.conf\n删除服务\nredis-server –service-uninstall\n开启服务\nredis-server –service-start\n停止服务\nredis-server –service-stop\n```\n下面提供jedis操作的工具类\n```Java\npackage test.util;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.google.common.collect.Maps;\nimport test.util.ObjectUtils;\nimport test.util.StringUtil;\n\nimport redis.clients.jedis.Jedis;\nimport redis.clients.jedis.JedisPool;\nimport redis.clients.jedis.exceptions.JedisException;\n\npublic class JedisUtils {\n\tprivate final static Logger logger = LoggerFactory.getLogger(JedisUtils.class);\n\t\n\tpublic final static int DEFAULT_CACHE_SECONDS = 30 * 60; //缓存30分钟\n\t\n\t// 这里如果用spring的话可以使用配置注入，配置见文章末尾\n\tpublic JedisPool jedisPool;\n\n\tpublic JedisPool getJedisPool() {\n\t\treturn jedisPool;\n\t}\n\n\tpublic void setJedisPool(JedisPool jedisPool) {\n\t\tthis.jedisPool = jedisPool;\n\t}\n\n\t// 如果不使用注入，这里初始化一下连接池\n\tpublic void init() {\n\t\tif (jedisPool== null) {\n\t\t\tJedisPoolConfig config = new JedisPoolConfig();\n\t\t\t// 控制一个pool可分配多少个jedis实例，通过pool.getResource()来获取\n\t\t\tconfig.setMaxActive(50);\n\t\t\t// 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例\n            config.setMaxIdle(5);\n            // 表示当borrow(引入)一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException\n            config.setMaxWait(1000 * 100);\n            // 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的\n            config.setTestOnBorrow(true);  \n            // 这里获取配置不多说，后面的3600表示超时时间，database表示数据库号，都可以不填\n            pool = new JedisPool(config, \"host:port\", password, 3600, database);\n\t\t}\n\t}\n\n\t/**\n\t * 获取缓存\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic String get(String key)throws Exception {\n\t\tString value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.get(key);\n\t\t\t\tvalue = StringUtils.isNotBlank(value) && !\"nil\".equalsIgnoreCase(value) ? value : null;\n\t\t\t\tlogger.debug(\"get {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"get {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * 获取缓存\n\t * @param key 键\n\t * @param  cacheSeconds 缓存时间\n\t * @return 值\n\t */\n\tpublic String get(String key, int cacheSeconds)throws Exception {\n\t\tString value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.get(key);\n\t\t\t\tif (cacheSeconds != 0) {\n\t\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t\t}\n\t\t\t\tvalue = StringUtils.isNotBlank(value) && !\"nil\".equalsIgnoreCase(value) ? value : null;\n\t\t\t\tlogger.debug(\"get {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"get {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t\n\t/**\n\t * 设置缓存\n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic String set(String key, String value, int cacheSeconds) throws Exception{\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.set(key, value);\n\t\t\tif (cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"set {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"set {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 获取单个hash缓存\n\t * @param @param key\n\t * @param @param field \n\t * @return String\n\t */\n\tpublic String hget(String key, String field) throws Exception {\n\t\tString value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tvalue = jedis.hget(key, field);\n\t\t\tvalue = StringUtils.isNotBlank(value) && !\"nil\".equalsIgnoreCase(value) ? value : null;\n\t\t\tlogger.debug(\"hget {} = {}\", field, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"hget {} = {}\", field, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * 设置单个hash缓存\n\t * @param @param key\n\t * @param @param field \n\t * @return String\n\t */\n\tpublic String hset(String key, String field, String value) throws Exception {\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tjedis.hset(key, field, value);\n\t\t\tlogger.debug(\"hset {} : {} = {}\", key, field, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"hset {} : {} = {}\", key, field, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 获取List缓存\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic List<String> getList(String key) throws Exception{\n\t\tList<String> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.lrange(key, 0, -1);\n\t\t\t\tlogger.debug(\"getList {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getList {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t\n\t/**\n\t * 设置List缓存\n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic long setList(String key, List<String> value, int cacheSeconds)throws Exception {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tjedis.del(key);\n\t\t\t}\n\t\t\tresult = jedis.rpush(key, (String[])value.toArray());\n\t\t\tif (cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"setList {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"setList {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t\n\t/**\n\t * 向List缓存中添加值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic long listAdd(String key, String... value)throws Exception  {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.rpush(key, value);\n\t\t\tlogger.debug(\"listAdd {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"listAdd {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * 获取有序zet缓存 （按分值由低到高排序输出）\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic Set<String> getZsetZrange(String key) throws Exception {\n\t\treturn getZsetZrange(key,0 , -1);\n\t}\n\t\n\t/**\n\t * 获取有序zet缓存 （按分值由高到低排序输出）\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic Set<String> getZsetZrevrange(String key)throws Exception{\n\t\treturn  getZsetZrevrange(key,0 , -1);\n\t}\n\t\n\n\t/**\n\t * \n\t* @Title: getZsetZrangePage\n\t* @Description: 分页获取 获取有序zet缓存 （按分值由低到高排序输出）\n\t* @param @param key\n\t* @param @param end\n\t* @param @return    \n\t* @return Set<String>    \n\t* @throws\n\t */\n\tpublic Set<String> getZsetZrange(String key,long start , long end) throws Exception{\n\t\tSet<String> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.zrange(key, start, end);\n\t\t\t\tlogger.debug(\"getZset {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getZset {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * \n\t* @Title: getZsetZrevrange\n\t* @Description: 获取有序zet缓存 （按分值由高到低排序输出）\n\t* @param @param key\n\t* @param @param start\n\t* @param @param end\n\t* @param @return    \n\t* @return Set<String>    \n\t* @throws\n\t */\n\tpublic Set<String> getZsetZrevrange(String key,long start , long end) throws Exception{\n\t\tSet<String> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.zrevrange (key, start,end);\n\t\t\t\tlogger.debug(\"getZset {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getZset {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\n\t\n\t/**\n\t * 设置Set缓存\n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic long setZset(String key, Map<String, Double> scoreMembers, int cacheSeconds) throws Exception{\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\tboolean isExists = false;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tisExists = true;\n\t\t\t}\n\t\t\tjedis.zadd(key, scoreMembers);\n\t\t\tif (!isExists && cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"setZset {} = {}\", key, scoreMembers);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"setZset {} = {}\", key, scoreMembers, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t\n\t/**\n\t * 获取Map缓存\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic Map<String, String> getMap(String key) throws Exception{\n\t\tMap<String, String> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tvalue = jedis.hgetAll(key);\n\t\t\t\tlogger.debug(\"getMap {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * 获取Map缓存里某个key的值\n\t* @Title: getMapKeyVal\n\t* @Description: TODO\n\t* @param @param key\n\t* @param @param mapKey\n\t* @param @return    \n\t* @return String    \n\t* @throws\n\t */\n\tpublic String  getMapKeyVal(String key,String mapKey) throws Exception{\n\t\tString  value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tif(jedis.hexists(key, mapKey)){\n\t\t\t\t\tvalue = jedis.hget(key, mapKey);\n\t\t\t\t\tlogger.debug(\"getMap {}  {} = {}\", key, mapKey,value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * 获取Map缓存\n\t * @param key 键\n\t * @return 值\n\t */\n\tpublic Map<String, Object> getObjectMap(String key) throws Exception{\n\t\tMap<String, Object> value = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(getBytesKey(key))) {\n\t\t\t\tvalue = Maps.newHashMap();\n\t\t\t\tMap<byte[], byte[]> map = jedis.hgetAll(getBytesKey(key));\n\t\t\t\tfor (Map.Entry<byte[], byte[]> e : map.entrySet()){\n\t\t\t\t\tvalue.put(StringUtil.toString(e.getKey()), toObject(e.getValue()));\n\t\t\t\t}\n\t\t\t\tlogger.debug(\"getObjectMap {} = {}\", key, value);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"getObjectMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * 设置Map缓存 \n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic String setMap(String key, Map<String, String> value, int cacheSeconds)throws Exception {\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\tboolean isExists = false;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)) {\n\t\t\t\tisExists = true;\n\t\t\t}\n\t\t\tresult = jedis.hmset(key, value);\n\t\t\tif (!isExists && cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"setMap {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"setMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 设置Map缓存 \n\t * @param key 键\n\t * @param value 值\n\t * @param cacheSeconds 超时时间，0为不超时\n\t * @return\n\t */\n\tpublic String setObjectMap(String key, Map<String, Object> value, int cacheSeconds) throws Exception{\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\tboolean isExists = false;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(getBytesKey(key))) {\n\t\t\t\tisExists = true;\n\t\t\t}\n\t\t\tMap<byte[], byte[]> map = Maps.newHashMap();\n\t\t\tfor (Map.Entry<String, Object> e : value.entrySet()){\n\t\t\t\tmap.put(getBytesKey(e.getKey()), toBytes(e.getValue()));\n\t\t\t}\n\t\t\tresult = jedis.hmset(getBytesKey(key), (Map<byte[], byte[]>)map);\n\t\t\tif (!isExists && cacheSeconds != 0) {\n\t\t\t\tjedis.expire(key, cacheSeconds);\n\t\t\t}\n\t\t\tlogger.debug(\"setObjectMap {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"setObjectMap {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 向Map缓存中添加值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic String mapPut(String key, Map<String, String> value) throws Exception{\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hmset(key, value);\n\t\t\tlogger.debug(\"mapPut {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapPut {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 向Map缓存中添加值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic String mapObjectPut(String key, Map<String, Object> value)throws Exception {\n\t\tString result = null;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tMap<byte[], byte[]> map = Maps.newHashMap();\n\t\t\tfor (Map.Entry<String, Object> e : value.entrySet()){\n\t\t\t\tmap.put(getBytesKey(e.getKey()), toBytes(e.getValue()));\n\t\t\t}\n\t\t\tresult = jedis.hmset(getBytesKey(key), (Map<byte[], byte[]>)map);\n\t\t\tlogger.debug(\"mapObjectPut {} = {}\", key, value);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapObjectPut {} = {}\", key, value, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 移除Map缓存中的值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic long mapRemove(String key, String mapKey)throws Exception {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hdel(key, mapKey);\n\t\t\tlogger.debug(\"mapRemove {}  {}\", key, mapKey);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapRemove {}  {}\", key, mapKey, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 移除Map缓存中的值\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic long mapObjectRemove(String key, String mapKey) throws Exception {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hdel(getBytesKey(key), getBytesKey(mapKey));\n\t\t\tlogger.debug(\"mapObjectRemove {}  {}\", key, mapKey);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapObjectRemove {}  {}\", key, mapKey, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 判断Map缓存中的Key是否存在\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic boolean mapExists(String key, String mapKey)throws Exception  {\n\t\tboolean result = false;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hexists(key, mapKey);\n\t\t\tlogger.debug(\"mapExists {}  {}\", key, mapKey);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapExists {}  {}\", key, mapKey, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 判断Map缓存中的Key是否存在\n\t * @param key 键\n\t * @param value 值\n\t * @return\n\t */\n\tpublic boolean mapObjectExists(String key, String mapKey)throws Exception {\n\t\tboolean result = false;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.hexists(getBytesKey(key), getBytesKey(mapKey));\n\t\t\tlogger.debug(\"mapObjectExists {}  {}\", key, mapKey);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"mapObjectExists {}  {}\", key, mapKey, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 删除缓存\n\t * @param key 键\n\t * @return\n\t */\n\tpublic long del(String key) throws Exception{\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(key)){\n\t\t\t\tresult = jedis.del(key);\n\t\t\t\tlogger.debug(\"del {}\", key);\n\t\t\t}else{\n\t\t\t\tlogger.debug(\"del {} not exists\", key);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"del {}\", key, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * 删除缓存\n\t * @param key 键\n\t * @return\n\t */\n\tpublic long delObject(String key)throws Exception {\n\t\tlong result = 0;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tif (jedis.exists(getBytesKey(key))){\n\t\t\t\tresult = jedis.del(getBytesKey(key));\n\t\t\t\tlogger.debug(\"delObject {}\", key);\n\t\t\t}else{\n\t\t\t\tlogger.debug(\"delObject {} not exists\", key);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"delObject {}\", key, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 缓存是否存在\n\t * @param key 键\n\t * @return\n\t */\n\tpublic boolean exists(String key)throws Exception {\n\t\tboolean result = false;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.exists(key);\n\t\t\tlogger.debug(\"exists {}\", key);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"exists {}\", key, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * 缓存是否存在\n\t * @param key 键\n\t * @return\n\t */\n\tpublic boolean existsObject(String key)throws Exception  {\n\t\tboolean result = false;\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = getResource();\n\t\t\tresult = jedis.exists(getBytesKey(key));\n\t\t\tlogger.debug(\"existsObject {}\", key);\n\t\t} catch (Exception e) {\n\t\t\tlogger.warn(\"existsObject {}\", key, e);\n\t\t\tthrow new Exception(e);\n\t\t} finally {\n\t\t\treturnResource(jedis);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * 获取资源\n\t * @return\n\t * @throws JedisException\n\t */\n\tpublic Jedis getResource()  throws Exception {\n\t\tJedis jedis = null;\n\t\ttry {\n\t\t\tjedis = jedisPool.getResource();\n\t\t} catch (JedisException e) {\n\t\t\tlogger.warn(\"getResource.\", e);\n\t\t\treturnBrokenResource(jedis);\n\t\t\tthrow new Exception(e);\n\t\t}\n\t\treturn jedis;\n\t}\n\n\t/**\n\t * 归还资源\n\t * @param jedis\n\t * @param isBroken\n\t */\n\tpublic void returnBrokenResource(Jedis jedis) {\n\t\tif (jedis != null) {\n\t\t\t/*jedisPool.returnBrokenResource(jedis);*/\n\t\t\tjedis.close();\n\t\t}\n\t}\n\t\n\t/**\n\t * 释放资源\n\t * @param jedis\n\t * @param isBroken\n\t */\n\tpublic void returnResource(Jedis jedis) {\n\t\tif (jedis != null) {\n\t\t\t/*jedisPool.returnResource(jedis);*/\n\t\t\tjedis.close();\n\t\t}\n\t}\n\n\t/**\n\t * 获取byte[]类型Key\n\t * @param key\n\t * @return\n\t */\n\tpublic byte[] getBytesKey(Object object){\n\t\tif(object instanceof String){\n    \t\treturn StringUtil.getBytes((String)object);\n    \t}else{\n    \t\treturn ObjectUtils.serialize(object);\n    \t}\n\t}\n\t\n\t/**\n\t * Object转换byte[]类型\n\t * @param key\n\t * @return\n\t */\n\tpublic byte[] toBytes(Object object){\n    \treturn ObjectUtils.serialize(object);\n\t}\n\n\t/**\n\t * byte[]型转换Object\n\t * @param key\n\t * @return\n\t */\n\tpublic Object toObject(byte[] bytes){\n\t\treturn ObjectUtils.unserialize(bytes);\n\t}\n\n}\n```\nObject序列化和反序列化工具类\n```Java\npackage test.util;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\n\npublic class ObjectUtils {\n\n\t\n\t/**\n\t * 序列化对象\n\t * @param object\n\t * @return\n\t */\n\tpublic static byte[] serialize(Object object) {\n\t\t byte[]  bytes = null;\n\t\tObjectOutputStream oos = null;\n\t\tByteArrayOutputStream baos = null;\n\t\ttry {\n\t\t\tif (object != null){\n\t\t\t\tbaos = new ByteArrayOutputStream();\n\t\t\t\toos = new ObjectOutputStream(baos);\n\t\t\t\toos.writeObject(object);\n\t\t\t\tbytes = baos.toByteArray();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t} finally{\n\t\t\ttry {\n\t\t\t\tif(null != oos) {\n\t\t\t\t\toos.close();\n\t\t\t\t}\n\t\t\t\tif(null != baos) {\n\t\t\t\t\tbaos.close();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch (Exception e2) {\n\t\t\t\te2.printStackTrace();\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn bytes;\n\t}\n\n\t/**\n\t * 反序列化对象\n\t * @param bytes\n\t * @return\n\t */\n\tpublic static Object unserialize(byte[] bytes) {\n\t\tObject object = null;\n\t\tByteArrayInputStream bais = null;\n\t\tObjectInputStream ois = null;\n\t\ttry {\n\t\t\tif (bytes != null && bytes.length > 0){\n\t\t\t\tbais = new ByteArrayInputStream(bytes);\n\t\t\t\tois = new ObjectInputStream(bais);\n\t\t\t\tobject = ois.readObject();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t} finally{\n\t\t\ttry {\n\t\t\t\tif(null != ois) {\n\t\t\t\t\tois.close();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(null != bais) {\n\t\t\t\t\tbais.close();\n\t\t\t\t}\n\t\t\t} catch (Exception e2) {\n\t\t\t\te2.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn  object ;\n\t}\n}\n```\nString工具类\n```Java\npackage test.util;\n\n\npublic class StringUtil {\n\t\n\tprivate static final String CHARSET_NAME = \"UTF-8\";\n\n\t/**\n \t * \n \t* @Title: toString\n \t* @Description: 把字节流转为字符串\n \t* @param @param content\n \t* @param @param charset\n \t* @param @return    \n \t* @return String    \n \t* @throws\n \t */\n    public static String toString(byte[]content, String charset){\n    \tString result = \"\";\n    \ttry {\n        \tif(null != content && content.length > 0){\n        \t\tresult =  new String(content, charset);\n        \t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n    \t\n\n    \treturn result;\n    }\n \n\t/**\n\t * 转换为字节数组\n\t * @param str\n\t * @return\n\t */\n\tpublic static String toString(byte[] bytes){\n\t\treturn  toString(bytes, \"UTF-8\");\n\t}\n\t\n\t/**\n\t * 转换为字节数组\n\t * @param str\n\t * @return\n\t */\n\tpublic static byte[] getBytes(String str){\n\t\tif (str != null){\n\t\t\ttry {\n\t\t\t\treturn str.getBytes(CHARSET_NAME);\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\t\n}\n```\nspring配置的片段\n```XML\n<!-- 连接池配置 -->\n<bean id=\"jedisPool\" class=\"redis.clients.jedis.JedisPool\" destroy-method=\"destroy\">\n\t<constructor-arg index=\"0\" ref=\"jedisPoolConfig\" />\n\t<constructor-arg index=\"1\" value=\"${redis_host}\" type=\"java.lang.String\"  />\n\t<constructor-arg index=\"2\" value=\"${redis_port}\" type=\"int\" />\n\t<constructor-arg index=\"3\" value=\"360000\" type=\"int\" /> <!-- 超时时间 单位ms -->\n\t<constructor-arg index=\"4\" value=\"${redis_password}\" type=\"java.lang.String\" />\n\t<constructor-arg index=\"5\" value=\"${redis_database}\" type=\"int\" />\n</bean>\n<!-- 注入 -->\n<bean id=\"jedisUtils\" class=\"test.util.JedisUtils\">\n\t<property name=\"jedisPool\" ref=\"jedisPool\"/>\n</bean>\n```","slug":"Java操作redis","published":1,"updated":"2017-01-17T02:25:27.001Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou46000fpo2ylmbjvprg","content":"<p>Jedis的简单使用<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.Jedis;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 连接本地的 redis 服务</span></div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">new</span> Jedis(<span class=\"string\">\"localhost\"</span>);</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Connection to server sucessfully\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">// 存储数据到列表中</span></div><div class=\"line\">\t\tjedis.lpush(<span class=\"string\">\"tutorial-list\"</span>, <span class=\"string\">\"Redis\"</span>);</div><div class=\"line\">\t\tjedis.lpush(<span class=\"string\">\"tutorial-list\"</span>, <span class=\"string\">\"Mongodb\"</span>);</div><div class=\"line\">\t\tjedis.lpush(<span class=\"string\">\"tutorial-list\"</span>, <span class=\"string\">\"Mysql\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">// 获取存储的数据并输出</span></div><div class=\"line\">\t\tList&lt;String&gt; list = jedis.lrange(<span class=\"string\">\"tutorial-list\"</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"Stored string in redis: \"</span> + list.get(i));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取数据并输出</span></div><div class=\"line\">\t\tSet&lt;String&gt; list1 = jedis.keys(<span class=\"string\">\"*\"</span>);</div><div class=\"line\">\t\tIterator&lt;String&gt; it = list1.iterator();</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (it.hasNext()) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"List of stored keys: \"</span> + it.next());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在实际的开发中操作redis总是需要用到连接池，同时redis也需要加密<br>先说一下windows上加密的坑<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">设置密码：</div><div class=\"line\">redis 127.0.0.1:6379&gt; config set requirepass test123</div><div class=\"line\">查询密码：</div><div class=\"line\">redis 127.0.0.1:6379&gt; config get requirepass</div><div class=\"line\">(error) ERR operation not permitted</div><div class=\"line\">密码验证：</div><div class=\"line\">redis 127.0.0.1:6379&gt; auth test123</div><div class=\"line\">OK</div><div class=\"line\">再次查询：</div><div class=\"line\">redis 127.0.0.1:6379&gt; config get requirepass</div><div class=\"line\">1) &quot;requirepass&quot;</div><div class=\"line\">2) &quot;test123&quot;</div></pre></td></tr></table></figure></p>\n<p>PS：如果配置文件中没添加密码 那么redis重启后，密码失效；所以我们需要在配置文件中配置requirepass的密码（当redis重启时密码依然有效）。<br>打开redis.windows.conf配置文件，找到requirepass，然后修改如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">requirepass yourpassword</div></pre></td></tr></table></figure></p>\n<p>然而发现在windows下，启动redis-server.exe后用redis-cli.exe登录后并不需要密码验证，原因是redis-server.exe的启动并不依赖redis.windows.conf，我的解决方法是为redis-server.exe创建一个快捷方式，然后右键属性，将目标后加上：（空格）+ redis.windows.conf，如果有更好的方法，欢迎留言。</p>\n<p>当然，如果想把redis注册成windows服务也可以<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">注册服务</div><div class=\"line\">Redis-server.exe –service-install redis.windows.conf</div><div class=\"line\">删除服务</div><div class=\"line\">redis-server –service-uninstall</div><div class=\"line\">开启服务</div><div class=\"line\">redis-server –service-start</div><div class=\"line\">停止服务</div><div class=\"line\">redis-server –service-stop</div></pre></td></tr></table></figure></p>\n<p>下面提供jedis操作的工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div><div class=\"line\">491</div><div class=\"line\">492</div><div class=\"line\">493</div><div class=\"line\">494</div><div class=\"line\">495</div><div class=\"line\">496</div><div class=\"line\">497</div><div class=\"line\">498</div><div class=\"line\">499</div><div class=\"line\">500</div><div class=\"line\">501</div><div class=\"line\">502</div><div class=\"line\">503</div><div class=\"line\">504</div><div class=\"line\">505</div><div class=\"line\">506</div><div class=\"line\">507</div><div class=\"line\">508</div><div class=\"line\">509</div><div class=\"line\">510</div><div class=\"line\">511</div><div class=\"line\">512</div><div class=\"line\">513</div><div class=\"line\">514</div><div class=\"line\">515</div><div class=\"line\">516</div><div class=\"line\">517</div><div class=\"line\">518</div><div class=\"line\">519</div><div class=\"line\">520</div><div class=\"line\">521</div><div class=\"line\">522</div><div class=\"line\">523</div><div class=\"line\">524</div><div class=\"line\">525</div><div class=\"line\">526</div><div class=\"line\">527</div><div class=\"line\">528</div><div class=\"line\">529</div><div class=\"line\">530</div><div class=\"line\">531</div><div class=\"line\">532</div><div class=\"line\">533</div><div class=\"line\">534</div><div class=\"line\">535</div><div class=\"line\">536</div><div class=\"line\">537</div><div class=\"line\">538</div><div class=\"line\">539</div><div class=\"line\">540</div><div class=\"line\">541</div><div class=\"line\">542</div><div class=\"line\">543</div><div class=\"line\">544</div><div class=\"line\">545</div><div class=\"line\">546</div><div class=\"line\">547</div><div class=\"line\">548</div><div class=\"line\">549</div><div class=\"line\">550</div><div class=\"line\">551</div><div class=\"line\">552</div><div class=\"line\">553</div><div class=\"line\">554</div><div class=\"line\">555</div><div class=\"line\">556</div><div class=\"line\">557</div><div class=\"line\">558</div><div class=\"line\">559</div><div class=\"line\">560</div><div class=\"line\">561</div><div class=\"line\">562</div><div class=\"line\">563</div><div class=\"line\">564</div><div class=\"line\">565</div><div class=\"line\">566</div><div class=\"line\">567</div><div class=\"line\">568</div><div class=\"line\">569</div><div class=\"line\">570</div><div class=\"line\">571</div><div class=\"line\">572</div><div class=\"line\">573</div><div class=\"line\">574</div><div class=\"line\">575</div><div class=\"line\">576</div><div class=\"line\">577</div><div class=\"line\">578</div><div class=\"line\">579</div><div class=\"line\">580</div><div class=\"line\">581</div><div class=\"line\">582</div><div class=\"line\">583</div><div class=\"line\">584</div><div class=\"line\">585</div><div class=\"line\">586</div><div class=\"line\">587</div><div class=\"line\">588</div><div class=\"line\">589</div><div class=\"line\">590</div><div class=\"line\">591</div><div class=\"line\">592</div><div class=\"line\">593</div><div class=\"line\">594</div><div class=\"line\">595</div><div class=\"line\">596</div><div class=\"line\">597</div><div class=\"line\">598</div><div class=\"line\">599</div><div class=\"line\">600</div><div class=\"line\">601</div><div class=\"line\">602</div><div class=\"line\">603</div><div class=\"line\">604</div><div class=\"line\">605</div><div class=\"line\">606</div><div class=\"line\">607</div><div class=\"line\">608</div><div class=\"line\">609</div><div class=\"line\">610</div><div class=\"line\">611</div><div class=\"line\">612</div><div class=\"line\">613</div><div class=\"line\">614</div><div class=\"line\">615</div><div class=\"line\">616</div><div class=\"line\">617</div><div class=\"line\">618</div><div class=\"line\">619</div><div class=\"line\">620</div><div class=\"line\">621</div><div class=\"line\">622</div><div class=\"line\">623</div><div class=\"line\">624</div><div class=\"line\">625</div><div class=\"line\">626</div><div class=\"line\">627</div><div class=\"line\">628</div><div class=\"line\">629</div><div class=\"line\">630</div><div class=\"line\">631</div><div class=\"line\">632</div><div class=\"line\">633</div><div class=\"line\">634</div><div class=\"line\">635</div><div class=\"line\">636</div><div class=\"line\">637</div><div class=\"line\">638</div><div class=\"line\">639</div><div class=\"line\">640</div><div class=\"line\">641</div><div class=\"line\">642</div><div class=\"line\">643</div><div class=\"line\">644</div><div class=\"line\">645</div><div class=\"line\">646</div><div class=\"line\">647</div><div class=\"line\">648</div><div class=\"line\">649</div><div class=\"line\">650</div><div class=\"line\">651</div><div class=\"line\">652</div><div class=\"line\">653</div><div class=\"line\">654</div><div class=\"line\">655</div><div class=\"line\">656</div><div class=\"line\">657</div><div class=\"line\">658</div><div class=\"line\">659</div><div class=\"line\">660</div><div class=\"line\">661</div><div class=\"line\">662</div><div class=\"line\">663</div><div class=\"line\">664</div><div class=\"line\">665</div><div class=\"line\">666</div><div class=\"line\">667</div><div class=\"line\">668</div><div class=\"line\">669</div><div class=\"line\">670</div><div class=\"line\">671</div><div class=\"line\">672</div><div class=\"line\">673</div><div class=\"line\">674</div><div class=\"line\">675</div><div class=\"line\">676</div><div class=\"line\">677</div><div class=\"line\">678</div><div class=\"line\">679</div><div class=\"line\">680</div><div class=\"line\">681</div><div class=\"line\">682</div><div class=\"line\">683</div><div class=\"line\">684</div><div class=\"line\">685</div><div class=\"line\">686</div><div class=\"line\">687</div><div class=\"line\">688</div><div class=\"line\">689</div><div class=\"line\">690</div><div class=\"line\">691</div><div class=\"line\">692</div><div class=\"line\">693</div><div class=\"line\">694</div><div class=\"line\">695</div><div class=\"line\">696</div><div class=\"line\">697</div><div class=\"line\">698</div><div class=\"line\">699</div><div class=\"line\">700</div><div class=\"line\">701</div><div class=\"line\">702</div><div class=\"line\">703</div><div class=\"line\">704</div><div class=\"line\">705</div><div class=\"line\">706</div><div class=\"line\">707</div><div class=\"line\">708</div><div class=\"line\">709</div><div class=\"line\">710</div><div class=\"line\">711</div><div class=\"line\">712</div><div class=\"line\">713</div><div class=\"line\">714</div><div class=\"line\">715</div><div class=\"line\">716</div><div class=\"line\">717</div><div class=\"line\">718</div><div class=\"line\">719</div><div class=\"line\">720</div><div class=\"line\">721</div><div class=\"line\">722</div><div class=\"line\">723</div><div class=\"line\">724</div><div class=\"line\">725</div><div class=\"line\">726</div><div class=\"line\">727</div><div class=\"line\">728</div><div class=\"line\">729</div><div class=\"line\">730</div><div class=\"line\">731</div><div class=\"line\">732</div><div class=\"line\">733</div><div class=\"line\">734</div><div class=\"line\">735</div><div class=\"line\">736</div><div class=\"line\">737</div><div class=\"line\">738</div><div class=\"line\">739</div><div class=\"line\">740</div><div class=\"line\">741</div><div class=\"line\">742</div><div class=\"line\">743</div><div class=\"line\">744</div><div class=\"line\">745</div><div class=\"line\">746</div><div class=\"line\">747</div><div class=\"line\">748</div><div class=\"line\">749</div><div class=\"line\">750</div><div class=\"line\">751</div><div class=\"line\">752</div><div class=\"line\">753</div><div class=\"line\">754</div><div class=\"line\">755</div><div class=\"line\">756</div><div class=\"line\">757</div><div class=\"line\">758</div><div class=\"line\">759</div><div class=\"line\">760</div><div class=\"line\">761</div><div class=\"line\">762</div><div class=\"line\">763</div><div class=\"line\">764</div><div class=\"line\">765</div><div class=\"line\">766</div><div class=\"line\">767</div><div class=\"line\">768</div><div class=\"line\">769</div><div class=\"line\">770</div><div class=\"line\">771</div><div class=\"line\">772</div><div class=\"line\">773</div><div class=\"line\">774</div><div class=\"line\">775</div><div class=\"line\">776</div><div class=\"line\">777</div><div class=\"line\">778</div><div class=\"line\">779</div><div class=\"line\">780</div><div class=\"line\">781</div><div class=\"line\">782</div><div class=\"line\">783</div><div class=\"line\">784</div><div class=\"line\">785</div><div class=\"line\">786</div><div class=\"line\">787</div><div class=\"line\">788</div><div class=\"line\">789</div><div class=\"line\">790</div><div class=\"line\">791</div><div class=\"line\">792</div><div class=\"line\">793</div><div class=\"line\">794</div><div class=\"line\">795</div><div class=\"line\">796</div><div class=\"line\">797</div><div class=\"line\">798</div><div class=\"line\">799</div><div class=\"line\">800</div><div class=\"line\">801</div><div class=\"line\">802</div><div class=\"line\">803</div><div class=\"line\">804</div><div class=\"line\">805</div><div class=\"line\">806</div><div class=\"line\">807</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test.util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang.StringUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Maps;</div><div class=\"line\"><span class=\"keyword\">import</span> test.util.ObjectUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> test.util.StringUtil;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.Jedis;</div><div class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.JedisPool;</div><div class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.exceptions.JedisException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JedisUtils</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> Logger logger = LoggerFactory.getLogger(JedisUtils.class);</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> DEFAULT_CACHE_SECONDS = <span class=\"number\">30</span> * <span class=\"number\">60</span>; <span class=\"comment\">//缓存30分钟</span></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">// 这里如果用spring的话可以使用配置注入，配置见文章末尾</span></div><div class=\"line\">\t<span class=\"keyword\">public</span> JedisPool jedisPool;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> JedisPool <span class=\"title\">getJedisPool</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> jedisPool;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJedisPool</span><span class=\"params\">(JedisPool jedisPool)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.jedisPool = jedisPool;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 如果不使用注入，这里初始化一下连接池</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (jedisPool== <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tJedisPoolConfig config = <span class=\"keyword\">new</span> JedisPoolConfig();</div><div class=\"line\">\t\t\t<span class=\"comment\">// 控制一个pool可分配多少个jedis实例，通过pool.getResource()来获取</span></div><div class=\"line\">\t\t\tconfig.setMaxActive(<span class=\"number\">50</span>);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例</span></div><div class=\"line\">            config.setMaxIdle(<span class=\"number\">5</span>);</div><div class=\"line\">            <span class=\"comment\">// 表示当borrow(引入)一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException</span></div><div class=\"line\">            config.setMaxWait(<span class=\"number\">1000</span> * <span class=\"number\">100</span>);</div><div class=\"line\">            <span class=\"comment\">// 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的</span></div><div class=\"line\">            config.setTestOnBorrow(<span class=\"keyword\">true</span>);  </div><div class=\"line\">            <span class=\"comment\">// 这里获取配置不多说，后面的3600表示超时时间，database表示数据库号，都可以不填</span></div><div class=\"line\">            pool = <span class=\"keyword\">new</span> JedisPool(config, <span class=\"string\">\"host:port\"</span>, password, <span class=\"number\">3600</span>, database);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.get(key);</div><div class=\"line\">\t\t\t\tvalue = StringUtils.isNotBlank(value) &amp;&amp; !<span class=\"string\">\"nil\"</span>.equalsIgnoreCase(value) ? value : <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"get &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"get &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span>  cacheSeconds 缓存时间</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">(String key, <span class=\"keyword\">int</span> cacheSeconds)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.get(key);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\tvalue = StringUtils.isNotBlank(value) &amp;&amp; !<span class=\"string\">\"nil\"</span>.equalsIgnoreCase(value) ? value : <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"get &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"get &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 设置缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">set</span><span class=\"params\">(String key, String value, <span class=\"keyword\">int</span> cacheSeconds)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.set(key, value);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"set &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"set &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取单个hash缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> field </div><div class=\"line\">\t * <span class=\"doctag\">@return</span> String</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">hget</span><span class=\"params\">(String key, String field)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tvalue = jedis.hget(key, field);</div><div class=\"line\">\t\t\tvalue = StringUtils.isNotBlank(value) &amp;&amp; !<span class=\"string\">\"nil\"</span>.equalsIgnoreCase(value) ? value : <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"hget &#123;&#125; = &#123;&#125;\"</span>, field, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"hget &#123;&#125; = &#123;&#125;\"</span>, field, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 设置单个hash缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> field </div><div class=\"line\">\t * <span class=\"doctag\">@return</span> String</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">hset</span><span class=\"params\">(String key, String field, String value)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tjedis.hset(key, field, value);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"hset &#123;&#125; : &#123;&#125; = &#123;&#125;\"</span>, key, field, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"hset &#123;&#125; : &#123;&#125; = &#123;&#125;\"</span>, key, field, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取List缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getList</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tList&lt;String&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.lrange(key, <span class=\"number\">0</span>, -<span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getList &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getList &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 设置List缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">setList</span><span class=\"params\">(String key, List&lt;String&gt; value, <span class=\"keyword\">int</span> cacheSeconds)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tjedis.del(key);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tresult = jedis.rpush(key, (String[])value.toArray());</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"setList &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"setList &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 向List缓存中添加值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">listAdd</span><span class=\"params\">(String key, String... value)</span><span class=\"keyword\">throws</span> Exception  </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.rpush(key, value);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"listAdd &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"listAdd &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取有序zet缓存 （按分值由低到高排序输出）</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">getZsetZrange</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> getZsetZrange(key,<span class=\"number\">0</span> , -<span class=\"number\">1</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取有序zet缓存 （按分值由高到低排序输出）</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">getZsetZrevrange</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>  getZsetZrevrange(key,<span class=\"number\">0</span> , -<span class=\"number\">1</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * </div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getZsetZrangePage</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 分页获取 获取有序zet缓存 （按分值由低到高排序输出）</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> end</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> Set&lt;String&gt;    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">getZsetZrange</span><span class=\"params\">(String key,<span class=\"keyword\">long</span> start , <span class=\"keyword\">long</span> end)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tSet&lt;String&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.zrange(key, start, end);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getZset &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getZset &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * </div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getZsetZrevrange</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 获取有序zet缓存 （按分值由高到低排序输出）</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> start</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> end</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> Set&lt;String&gt;    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">getZsetZrevrange</span><span class=\"params\">(String key,<span class=\"keyword\">long</span> start , <span class=\"keyword\">long</span> end)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tSet&lt;String&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.zrevrange (key, start,end);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getZset &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getZset &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\"></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 设置Set缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">setZset</span><span class=\"params\">(String key, Map&lt;String, Double&gt; scoreMembers, <span class=\"keyword\">int</span> cacheSeconds)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> isExists = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tisExists = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tjedis.zadd(key, scoreMembers);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!isExists &amp;&amp; cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"setZset &#123;&#125; = &#123;&#125;\"</span>, key, scoreMembers);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"setZset &#123;&#125; = &#123;&#125;\"</span>, key, scoreMembers, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取Map缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title\">getMap</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tMap&lt;String, String&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.hgetAll(key);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getMap &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取Map缓存里某个key的值</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getMapKeyVal</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: TODO</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> mapKey</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> String    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String  <span class=\"title\">getMapKeyVal</span><span class=\"params\">(String key,String mapKey)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tString  value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(jedis.hexists(key, mapKey))&#123;</div><div class=\"line\">\t\t\t\t\tvalue = jedis.hget(key, mapKey);</div><div class=\"line\">\t\t\t\t\tlogger.debug(<span class=\"string\">\"getMap &#123;&#125;  &#123;&#125; = &#123;&#125;\"</span>, key, mapKey,value);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取Map缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Map&lt;String, Object&gt; <span class=\"title\">getObjectMap</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tMap&lt;String, Object&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(getBytesKey(key))) &#123;</div><div class=\"line\">\t\t\t\tvalue = Maps.newHashMap();</div><div class=\"line\">\t\t\t\tMap&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt; map = jedis.hgetAll(getBytesKey(key));</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt; e : map.entrySet())&#123;</div><div class=\"line\">\t\t\t\t\tvalue.put(StringUtil.toString(e.getKey()), toObject(e.getValue()));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getObjectMap &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getObjectMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 设置Map缓存 </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">setMap</span><span class=\"params\">(String key, Map&lt;String, String&gt; value, <span class=\"keyword\">int</span> cacheSeconds)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> isExists = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tisExists = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tresult = jedis.hmset(key, value);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!isExists &amp;&amp; cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"setMap &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"setMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 设置Map缓存 </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">setObjectMap</span><span class=\"params\">(String key, Map&lt;String, Object&gt; value, <span class=\"keyword\">int</span> cacheSeconds)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> isExists = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(getBytesKey(key))) &#123;</div><div class=\"line\">\t\t\t\tisExists = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tMap&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt; map = Maps.newHashMap();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;String, Object&gt; e : value.entrySet())&#123;</div><div class=\"line\">\t\t\t\tmap.put(getBytesKey(e.getKey()), toBytes(e.getValue()));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tresult = jedis.hmset(getBytesKey(key), (Map&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt;)map);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!isExists &amp;&amp; cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"setObjectMap &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"setObjectMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 向Map缓存中添加值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">mapPut</span><span class=\"params\">(String key, Map&lt;String, String&gt; value)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hmset(key, value);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapPut &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapPut &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 向Map缓存中添加值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">mapObjectPut</span><span class=\"params\">(String key, Map&lt;String, Object&gt; value)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tMap&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt; map = Maps.newHashMap();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;String, Object&gt; e : value.entrySet())&#123;</div><div class=\"line\">\t\t\t\tmap.put(getBytesKey(e.getKey()), toBytes(e.getValue()));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tresult = jedis.hmset(getBytesKey(key), (Map&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt;)map);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapObjectPut &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapObjectPut &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 移除Map缓存中的值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">mapRemove</span><span class=\"params\">(String key, String mapKey)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hdel(key, mapKey);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapRemove &#123;&#125;  &#123;&#125;\"</span>, key, mapKey);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapRemove &#123;&#125;  &#123;&#125;\"</span>, key, mapKey, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 移除Map缓存中的值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">mapObjectRemove</span><span class=\"params\">(String key, String mapKey)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hdel(getBytesKey(key), getBytesKey(mapKey));</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapObjectRemove &#123;&#125;  &#123;&#125;\"</span>, key, mapKey);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapObjectRemove &#123;&#125;  &#123;&#125;\"</span>, key, mapKey, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 判断Map缓存中的Key是否存在</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">mapExists</span><span class=\"params\">(String key, String mapKey)</span><span class=\"keyword\">throws</span> Exception  </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hexists(key, mapKey);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapExists &#123;&#125;  &#123;&#125;\"</span>, key, mapKey);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapExists &#123;&#125;  &#123;&#125;\"</span>, key, mapKey, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 判断Map缓存中的Key是否存在</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">mapObjectExists</span><span class=\"params\">(String key, String mapKey)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hexists(getBytesKey(key), getBytesKey(mapKey));</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapObjectExists &#123;&#125;  &#123;&#125;\"</span>, key, mapKey);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapObjectExists &#123;&#125;  &#123;&#125;\"</span>, key, mapKey, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 删除缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">del</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key))&#123;</div><div class=\"line\">\t\t\t\tresult = jedis.del(key);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"del &#123;&#125;\"</span>, key);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"del &#123;&#125; not exists\"</span>, key);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"del &#123;&#125;\"</span>, key, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 删除缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">delObject</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(getBytesKey(key)))&#123;</div><div class=\"line\">\t\t\t\tresult = jedis.del(getBytesKey(key));</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"delObject &#123;&#125;\"</span>, key);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"delObject &#123;&#125; not exists\"</span>, key);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"delObject &#123;&#125;\"</span>, key, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 缓存是否存在</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">exists</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.exists(key);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"exists &#123;&#125;\"</span>, key);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"exists &#123;&#125;\"</span>, key, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 缓存是否存在</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">existsObject</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception  </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.exists(getBytesKey(key));</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"existsObject &#123;&#125;\"</span>, key);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"existsObject &#123;&#125;\"</span>, key, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取资源</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> JedisException</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Jedis <span class=\"title\">getResource</span><span class=\"params\">()</span>  <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = jedisPool.getResource();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (JedisException e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getResource.\"</span>, e);</div><div class=\"line\">\t\t\treturnBrokenResource(jedis);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> jedis;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 归还资源</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> jedis</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> isBroken</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">returnBrokenResource</span><span class=\"params\">(Jedis jedis)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (jedis != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">/*jedisPool.returnBrokenResource(jedis);*/</span></div><div class=\"line\">\t\t\tjedis.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 释放资源</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> jedis</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> isBroken</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">returnResource</span><span class=\"params\">(Jedis jedis)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (jedis != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">/*jedisPool.returnResource(jedis);*/</span></div><div class=\"line\">\t\t\tjedis.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取byte[]类型Key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] getBytesKey(Object object)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(object <span class=\"keyword\">instanceof</span> String)&#123;</div><div class=\"line\">    \t\t<span class=\"keyword\">return</span> StringUtil.getBytes((String)object);</div><div class=\"line\">    \t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    \t\t<span class=\"keyword\">return</span> ObjectUtils.serialize(object);</div><div class=\"line\">    \t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * Object转换byte[]类型</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] toBytes(Object object)&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> ObjectUtils.serialize(object);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * byte[]型转换Object</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">toObject</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> ObjectUtils.unserialize(bytes);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Object序列化和反序列化工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test.util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ObjectUtils</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 序列化对象</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> object</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] serialize(Object object) &#123;</div><div class=\"line\">\t\t <span class=\"keyword\">byte</span>[]  bytes = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tObjectOutputStream oos = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tByteArrayOutputStream baos = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (object != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t\tbaos = <span class=\"keyword\">new</span> ByteArrayOutputStream();</div><div class=\"line\">\t\t\t\toos = <span class=\"keyword\">new</span> ObjectOutputStream(baos);</div><div class=\"line\">\t\t\t\toos.writeObject(object);</div><div class=\"line\">\t\t\t\tbytes = baos.toByteArray();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != oos) &#123;</div><div class=\"line\">\t\t\t\t\toos.close();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != baos) &#123;</div><div class=\"line\">\t\t\t\t\tbaos.close();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e2) &#123;</div><div class=\"line\">\t\t\t\te2.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> bytes;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 反序列化对象</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> bytes</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">unserialize</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes)</span> </span>&#123;</div><div class=\"line\">\t\tObject object = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tByteArrayInputStream bais = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tObjectInputStream ois = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bytes != <span class=\"keyword\">null</span> &amp;&amp; bytes.length &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t\tbais = <span class=\"keyword\">new</span> ByteArrayInputStream(bytes);</div><div class=\"line\">\t\t\t\tois = <span class=\"keyword\">new</span> ObjectInputStream(bais);</div><div class=\"line\">\t\t\t\tobject = ois.readObject();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != ois) &#123;</div><div class=\"line\">\t\t\t\t\tois.close();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != bais) &#123;</div><div class=\"line\">\t\t\t\t\tbais.close();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e2) &#123;</div><div class=\"line\">\t\t\t\te2.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>  object ;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>String工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test.util;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StringUtil</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CHARSET_NAME = <span class=\"string\">\"UTF-8\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\"> \t * </div><div class=\"line\"> \t* <span class=\"doctag\">@Title</span>: toString</div><div class=\"line\"> \t* <span class=\"doctag\">@Description</span>: 把字节流转为字符串</div><div class=\"line\"> \t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> content</div><div class=\"line\"> \t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> charset</div><div class=\"line\"> \t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\"> \t* <span class=\"doctag\">@return</span> String    </div><div class=\"line\"> \t* <span class=\"doctag\">@throws</span></div><div class=\"line\"> \t */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">toString</span><span class=\"params\">(<span class=\"keyword\">byte</span>[]content, String charset)</span></span>&#123;</div><div class=\"line\">    \tString result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    \t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        \t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != content &amp;&amp; content.length &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        \t\tresult =  <span class=\"keyword\">new</span> String(content, charset);</div><div class=\"line\">        \t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">    \t</div><div class=\"line\"></div><div class=\"line\">    \t<span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 转换为字节数组</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> str</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">toString</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>  toString(bytes, <span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 转换为字节数组</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> str</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] getBytes(String str)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (str != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> str.getBytes(CHARSET_NAME);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>spring配置的片段<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 连接池配置 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisPool\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redis.clients.jedis.JedisPool\"</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"destroy\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisPoolConfig\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis_host&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"java.lang.String\"</span>  /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis_port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"3\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"360000\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 超时时间 单位ms --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"4\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis_password&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"java.lang.String\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis_database&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 注入 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisUtils\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test.util.JedisUtils\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jedisPool\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisPool\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>Jedis的简单使用<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.Jedis;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 连接本地的 redis 服务</span></div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">new</span> Jedis(<span class=\"string\">\"localhost\"</span>);</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Connection to server sucessfully\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">// 存储数据到列表中</span></div><div class=\"line\">\t\tjedis.lpush(<span class=\"string\">\"tutorial-list\"</span>, <span class=\"string\">\"Redis\"</span>);</div><div class=\"line\">\t\tjedis.lpush(<span class=\"string\">\"tutorial-list\"</span>, <span class=\"string\">\"Mongodb\"</span>);</div><div class=\"line\">\t\tjedis.lpush(<span class=\"string\">\"tutorial-list\"</span>, <span class=\"string\">\"Mysql\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">// 获取存储的数据并输出</span></div><div class=\"line\">\t\tList&lt;String&gt; list = jedis.lrange(<span class=\"string\">\"tutorial-list\"</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"Stored string in redis: \"</span> + list.get(i));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取数据并输出</span></div><div class=\"line\">\t\tSet&lt;String&gt; list1 = jedis.keys(<span class=\"string\">\"*\"</span>);</div><div class=\"line\">\t\tIterator&lt;String&gt; it = list1.iterator();</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (it.hasNext()) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"List of stored keys: \"</span> + it.next());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在实际的开发中操作redis总是需要用到连接池，同时redis也需要加密<br>先说一下windows上加密的坑<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">设置密码：</div><div class=\"line\">redis 127.0.0.1:6379&gt; config set requirepass test123</div><div class=\"line\">查询密码：</div><div class=\"line\">redis 127.0.0.1:6379&gt; config get requirepass</div><div class=\"line\">(error) ERR operation not permitted</div><div class=\"line\">密码验证：</div><div class=\"line\">redis 127.0.0.1:6379&gt; auth test123</div><div class=\"line\">OK</div><div class=\"line\">再次查询：</div><div class=\"line\">redis 127.0.0.1:6379&gt; config get requirepass</div><div class=\"line\">1) &quot;requirepass&quot;</div><div class=\"line\">2) &quot;test123&quot;</div></pre></td></tr></table></figure></p>\n<p>PS：如果配置文件中没添加密码 那么redis重启后，密码失效；所以我们需要在配置文件中配置requirepass的密码（当redis重启时密码依然有效）。<br>打开redis.windows.conf配置文件，找到requirepass，然后修改如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">requirepass yourpassword</div></pre></td></tr></table></figure></p>\n<p>然而发现在windows下，启动redis-server.exe后用redis-cli.exe登录后并不需要密码验证，原因是redis-server.exe的启动并不依赖redis.windows.conf，我的解决方法是为redis-server.exe创建一个快捷方式，然后右键属性，将目标后加上：（空格）+ redis.windows.conf，如果有更好的方法，欢迎留言。</p>\n<p>当然，如果想把redis注册成windows服务也可以<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">注册服务</div><div class=\"line\">Redis-server.exe –service-install redis.windows.conf</div><div class=\"line\">删除服务</div><div class=\"line\">redis-server –service-uninstall</div><div class=\"line\">开启服务</div><div class=\"line\">redis-server –service-start</div><div class=\"line\">停止服务</div><div class=\"line\">redis-server –service-stop</div></pre></td></tr></table></figure></p>\n<p>下面提供jedis操作的工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div><div class=\"line\">491</div><div class=\"line\">492</div><div class=\"line\">493</div><div class=\"line\">494</div><div class=\"line\">495</div><div class=\"line\">496</div><div class=\"line\">497</div><div class=\"line\">498</div><div class=\"line\">499</div><div class=\"line\">500</div><div class=\"line\">501</div><div class=\"line\">502</div><div class=\"line\">503</div><div class=\"line\">504</div><div class=\"line\">505</div><div class=\"line\">506</div><div class=\"line\">507</div><div class=\"line\">508</div><div class=\"line\">509</div><div class=\"line\">510</div><div class=\"line\">511</div><div class=\"line\">512</div><div class=\"line\">513</div><div class=\"line\">514</div><div class=\"line\">515</div><div class=\"line\">516</div><div class=\"line\">517</div><div class=\"line\">518</div><div class=\"line\">519</div><div class=\"line\">520</div><div class=\"line\">521</div><div class=\"line\">522</div><div class=\"line\">523</div><div class=\"line\">524</div><div class=\"line\">525</div><div class=\"line\">526</div><div class=\"line\">527</div><div class=\"line\">528</div><div class=\"line\">529</div><div class=\"line\">530</div><div class=\"line\">531</div><div class=\"line\">532</div><div class=\"line\">533</div><div class=\"line\">534</div><div class=\"line\">535</div><div class=\"line\">536</div><div class=\"line\">537</div><div class=\"line\">538</div><div class=\"line\">539</div><div class=\"line\">540</div><div class=\"line\">541</div><div class=\"line\">542</div><div class=\"line\">543</div><div class=\"line\">544</div><div class=\"line\">545</div><div class=\"line\">546</div><div class=\"line\">547</div><div class=\"line\">548</div><div class=\"line\">549</div><div class=\"line\">550</div><div class=\"line\">551</div><div class=\"line\">552</div><div class=\"line\">553</div><div class=\"line\">554</div><div class=\"line\">555</div><div class=\"line\">556</div><div class=\"line\">557</div><div class=\"line\">558</div><div class=\"line\">559</div><div class=\"line\">560</div><div class=\"line\">561</div><div class=\"line\">562</div><div class=\"line\">563</div><div class=\"line\">564</div><div class=\"line\">565</div><div class=\"line\">566</div><div class=\"line\">567</div><div class=\"line\">568</div><div class=\"line\">569</div><div class=\"line\">570</div><div class=\"line\">571</div><div class=\"line\">572</div><div class=\"line\">573</div><div class=\"line\">574</div><div class=\"line\">575</div><div class=\"line\">576</div><div class=\"line\">577</div><div class=\"line\">578</div><div class=\"line\">579</div><div class=\"line\">580</div><div class=\"line\">581</div><div class=\"line\">582</div><div class=\"line\">583</div><div class=\"line\">584</div><div class=\"line\">585</div><div class=\"line\">586</div><div class=\"line\">587</div><div class=\"line\">588</div><div class=\"line\">589</div><div class=\"line\">590</div><div class=\"line\">591</div><div class=\"line\">592</div><div class=\"line\">593</div><div class=\"line\">594</div><div class=\"line\">595</div><div class=\"line\">596</div><div class=\"line\">597</div><div class=\"line\">598</div><div class=\"line\">599</div><div class=\"line\">600</div><div class=\"line\">601</div><div class=\"line\">602</div><div class=\"line\">603</div><div class=\"line\">604</div><div class=\"line\">605</div><div class=\"line\">606</div><div class=\"line\">607</div><div class=\"line\">608</div><div class=\"line\">609</div><div class=\"line\">610</div><div class=\"line\">611</div><div class=\"line\">612</div><div class=\"line\">613</div><div class=\"line\">614</div><div class=\"line\">615</div><div class=\"line\">616</div><div class=\"line\">617</div><div class=\"line\">618</div><div class=\"line\">619</div><div class=\"line\">620</div><div class=\"line\">621</div><div class=\"line\">622</div><div class=\"line\">623</div><div class=\"line\">624</div><div class=\"line\">625</div><div class=\"line\">626</div><div class=\"line\">627</div><div class=\"line\">628</div><div class=\"line\">629</div><div class=\"line\">630</div><div class=\"line\">631</div><div class=\"line\">632</div><div class=\"line\">633</div><div class=\"line\">634</div><div class=\"line\">635</div><div class=\"line\">636</div><div class=\"line\">637</div><div class=\"line\">638</div><div class=\"line\">639</div><div class=\"line\">640</div><div class=\"line\">641</div><div class=\"line\">642</div><div class=\"line\">643</div><div class=\"line\">644</div><div class=\"line\">645</div><div class=\"line\">646</div><div class=\"line\">647</div><div class=\"line\">648</div><div class=\"line\">649</div><div class=\"line\">650</div><div class=\"line\">651</div><div class=\"line\">652</div><div class=\"line\">653</div><div class=\"line\">654</div><div class=\"line\">655</div><div class=\"line\">656</div><div class=\"line\">657</div><div class=\"line\">658</div><div class=\"line\">659</div><div class=\"line\">660</div><div class=\"line\">661</div><div class=\"line\">662</div><div class=\"line\">663</div><div class=\"line\">664</div><div class=\"line\">665</div><div class=\"line\">666</div><div class=\"line\">667</div><div class=\"line\">668</div><div class=\"line\">669</div><div class=\"line\">670</div><div class=\"line\">671</div><div class=\"line\">672</div><div class=\"line\">673</div><div class=\"line\">674</div><div class=\"line\">675</div><div class=\"line\">676</div><div class=\"line\">677</div><div class=\"line\">678</div><div class=\"line\">679</div><div class=\"line\">680</div><div class=\"line\">681</div><div class=\"line\">682</div><div class=\"line\">683</div><div class=\"line\">684</div><div class=\"line\">685</div><div class=\"line\">686</div><div class=\"line\">687</div><div class=\"line\">688</div><div class=\"line\">689</div><div class=\"line\">690</div><div class=\"line\">691</div><div class=\"line\">692</div><div class=\"line\">693</div><div class=\"line\">694</div><div class=\"line\">695</div><div class=\"line\">696</div><div class=\"line\">697</div><div class=\"line\">698</div><div class=\"line\">699</div><div class=\"line\">700</div><div class=\"line\">701</div><div class=\"line\">702</div><div class=\"line\">703</div><div class=\"line\">704</div><div class=\"line\">705</div><div class=\"line\">706</div><div class=\"line\">707</div><div class=\"line\">708</div><div class=\"line\">709</div><div class=\"line\">710</div><div class=\"line\">711</div><div class=\"line\">712</div><div class=\"line\">713</div><div class=\"line\">714</div><div class=\"line\">715</div><div class=\"line\">716</div><div class=\"line\">717</div><div class=\"line\">718</div><div class=\"line\">719</div><div class=\"line\">720</div><div class=\"line\">721</div><div class=\"line\">722</div><div class=\"line\">723</div><div class=\"line\">724</div><div class=\"line\">725</div><div class=\"line\">726</div><div class=\"line\">727</div><div class=\"line\">728</div><div class=\"line\">729</div><div class=\"line\">730</div><div class=\"line\">731</div><div class=\"line\">732</div><div class=\"line\">733</div><div class=\"line\">734</div><div class=\"line\">735</div><div class=\"line\">736</div><div class=\"line\">737</div><div class=\"line\">738</div><div class=\"line\">739</div><div class=\"line\">740</div><div class=\"line\">741</div><div class=\"line\">742</div><div class=\"line\">743</div><div class=\"line\">744</div><div class=\"line\">745</div><div class=\"line\">746</div><div class=\"line\">747</div><div class=\"line\">748</div><div class=\"line\">749</div><div class=\"line\">750</div><div class=\"line\">751</div><div class=\"line\">752</div><div class=\"line\">753</div><div class=\"line\">754</div><div class=\"line\">755</div><div class=\"line\">756</div><div class=\"line\">757</div><div class=\"line\">758</div><div class=\"line\">759</div><div class=\"line\">760</div><div class=\"line\">761</div><div class=\"line\">762</div><div class=\"line\">763</div><div class=\"line\">764</div><div class=\"line\">765</div><div class=\"line\">766</div><div class=\"line\">767</div><div class=\"line\">768</div><div class=\"line\">769</div><div class=\"line\">770</div><div class=\"line\">771</div><div class=\"line\">772</div><div class=\"line\">773</div><div class=\"line\">774</div><div class=\"line\">775</div><div class=\"line\">776</div><div class=\"line\">777</div><div class=\"line\">778</div><div class=\"line\">779</div><div class=\"line\">780</div><div class=\"line\">781</div><div class=\"line\">782</div><div class=\"line\">783</div><div class=\"line\">784</div><div class=\"line\">785</div><div class=\"line\">786</div><div class=\"line\">787</div><div class=\"line\">788</div><div class=\"line\">789</div><div class=\"line\">790</div><div class=\"line\">791</div><div class=\"line\">792</div><div class=\"line\">793</div><div class=\"line\">794</div><div class=\"line\">795</div><div class=\"line\">796</div><div class=\"line\">797</div><div class=\"line\">798</div><div class=\"line\">799</div><div class=\"line\">800</div><div class=\"line\">801</div><div class=\"line\">802</div><div class=\"line\">803</div><div class=\"line\">804</div><div class=\"line\">805</div><div class=\"line\">806</div><div class=\"line\">807</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test.util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang.StringUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Maps;</div><div class=\"line\"><span class=\"keyword\">import</span> test.util.ObjectUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> test.util.StringUtil;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.Jedis;</div><div class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.JedisPool;</div><div class=\"line\"><span class=\"keyword\">import</span> redis.clients.jedis.exceptions.JedisException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JedisUtils</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> Logger logger = LoggerFactory.getLogger(JedisUtils.class);</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> DEFAULT_CACHE_SECONDS = <span class=\"number\">30</span> * <span class=\"number\">60</span>; <span class=\"comment\">//缓存30分钟</span></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">// 这里如果用spring的话可以使用配置注入，配置见文章末尾</span></div><div class=\"line\">\t<span class=\"keyword\">public</span> JedisPool jedisPool;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> JedisPool <span class=\"title\">getJedisPool</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> jedisPool;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJedisPool</span><span class=\"params\">(JedisPool jedisPool)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.jedisPool = jedisPool;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 如果不使用注入，这里初始化一下连接池</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (jedisPool== <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tJedisPoolConfig config = <span class=\"keyword\">new</span> JedisPoolConfig();</div><div class=\"line\">\t\t\t<span class=\"comment\">// 控制一个pool可分配多少个jedis实例，通过pool.getResource()来获取</span></div><div class=\"line\">\t\t\tconfig.setMaxActive(<span class=\"number\">50</span>);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例</span></div><div class=\"line\">            config.setMaxIdle(<span class=\"number\">5</span>);</div><div class=\"line\">            <span class=\"comment\">// 表示当borrow(引入)一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException</span></div><div class=\"line\">            config.setMaxWait(<span class=\"number\">1000</span> * <span class=\"number\">100</span>);</div><div class=\"line\">            <span class=\"comment\">// 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的</span></div><div class=\"line\">            config.setTestOnBorrow(<span class=\"keyword\">true</span>);  </div><div class=\"line\">            <span class=\"comment\">// 这里获取配置不多说，后面的3600表示超时时间，database表示数据库号，都可以不填</span></div><div class=\"line\">            pool = <span class=\"keyword\">new</span> JedisPool(config, <span class=\"string\">\"host:port\"</span>, password, <span class=\"number\">3600</span>, database);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.get(key);</div><div class=\"line\">\t\t\t\tvalue = StringUtils.isNotBlank(value) &amp;&amp; !<span class=\"string\">\"nil\"</span>.equalsIgnoreCase(value) ? value : <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"get &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"get &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span>  cacheSeconds 缓存时间</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">(String key, <span class=\"keyword\">int</span> cacheSeconds)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.get(key);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\tvalue = StringUtils.isNotBlank(value) &amp;&amp; !<span class=\"string\">\"nil\"</span>.equalsIgnoreCase(value) ? value : <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"get &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"get &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 设置缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">set</span><span class=\"params\">(String key, String value, <span class=\"keyword\">int</span> cacheSeconds)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.set(key, value);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"set &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"set &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取单个hash缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> field </div><div class=\"line\">\t * <span class=\"doctag\">@return</span> String</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">hget</span><span class=\"params\">(String key, String field)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tvalue = jedis.hget(key, field);</div><div class=\"line\">\t\t\tvalue = StringUtils.isNotBlank(value) &amp;&amp; !<span class=\"string\">\"nil\"</span>.equalsIgnoreCase(value) ? value : <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"hget &#123;&#125; = &#123;&#125;\"</span>, field, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"hget &#123;&#125; = &#123;&#125;\"</span>, field, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 设置单个hash缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> field </div><div class=\"line\">\t * <span class=\"doctag\">@return</span> String</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">hset</span><span class=\"params\">(String key, String field, String value)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tjedis.hset(key, field, value);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"hset &#123;&#125; : &#123;&#125; = &#123;&#125;\"</span>, key, field, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"hset &#123;&#125; : &#123;&#125; = &#123;&#125;\"</span>, key, field, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取List缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getList</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tList&lt;String&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.lrange(key, <span class=\"number\">0</span>, -<span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getList &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getList &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 设置List缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">setList</span><span class=\"params\">(String key, List&lt;String&gt; value, <span class=\"keyword\">int</span> cacheSeconds)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tjedis.del(key);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tresult = jedis.rpush(key, (String[])value.toArray());</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"setList &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"setList &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 向List缓存中添加值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">listAdd</span><span class=\"params\">(String key, String... value)</span><span class=\"keyword\">throws</span> Exception  </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.rpush(key, value);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"listAdd &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"listAdd &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取有序zet缓存 （按分值由低到高排序输出）</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">getZsetZrange</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> getZsetZrange(key,<span class=\"number\">0</span> , -<span class=\"number\">1</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取有序zet缓存 （按分值由高到低排序输出）</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">getZsetZrevrange</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>  getZsetZrevrange(key,<span class=\"number\">0</span> , -<span class=\"number\">1</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * </div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getZsetZrangePage</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 分页获取 获取有序zet缓存 （按分值由低到高排序输出）</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> end</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> Set&lt;String&gt;    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">getZsetZrange</span><span class=\"params\">(String key,<span class=\"keyword\">long</span> start , <span class=\"keyword\">long</span> end)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tSet&lt;String&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.zrange(key, start, end);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getZset &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getZset &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * </div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getZsetZrevrange</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 获取有序zet缓存 （按分值由高到低排序输出）</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> start</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> end</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> Set&lt;String&gt;    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">getZsetZrevrange</span><span class=\"params\">(String key,<span class=\"keyword\">long</span> start , <span class=\"keyword\">long</span> end)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tSet&lt;String&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.zrevrange (key, start,end);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getZset &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getZset &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\"></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 设置Set缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">setZset</span><span class=\"params\">(String key, Map&lt;String, Double&gt; scoreMembers, <span class=\"keyword\">int</span> cacheSeconds)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> isExists = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tisExists = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tjedis.zadd(key, scoreMembers);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!isExists &amp;&amp; cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"setZset &#123;&#125; = &#123;&#125;\"</span>, key, scoreMembers);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"setZset &#123;&#125; = &#123;&#125;\"</span>, key, scoreMembers, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取Map缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title\">getMap</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tMap&lt;String, String&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tvalue = jedis.hgetAll(key);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getMap &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取Map缓存里某个key的值</div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: getMapKeyVal</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: TODO</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> mapKey</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> String    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String  <span class=\"title\">getMapKeyVal</span><span class=\"params\">(String key,String mapKey)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tString  value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(jedis.hexists(key, mapKey))&#123;</div><div class=\"line\">\t\t\t\t\tvalue = jedis.hget(key, mapKey);</div><div class=\"line\">\t\t\t\t\tlogger.debug(<span class=\"string\">\"getMap &#123;&#125;  &#123;&#125; = &#123;&#125;\"</span>, key, mapKey,value);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取Map缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 值</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Map&lt;String, Object&gt; <span class=\"title\">getObjectMap</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tMap&lt;String, Object&gt; value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(getBytesKey(key))) &#123;</div><div class=\"line\">\t\t\t\tvalue = Maps.newHashMap();</div><div class=\"line\">\t\t\t\tMap&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt; map = jedis.hgetAll(getBytesKey(key));</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt; e : map.entrySet())&#123;</div><div class=\"line\">\t\t\t\t\tvalue.put(StringUtil.toString(e.getKey()), toObject(e.getValue()));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"getObjectMap &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getObjectMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 设置Map缓存 </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">setMap</span><span class=\"params\">(String key, Map&lt;String, String&gt; value, <span class=\"keyword\">int</span> cacheSeconds)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> isExists = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key)) &#123;</div><div class=\"line\">\t\t\t\tisExists = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tresult = jedis.hmset(key, value);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!isExists &amp;&amp; cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"setMap &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"setMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 设置Map缓存 </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> cacheSeconds 超时时间，0为不超时</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">setObjectMap</span><span class=\"params\">(String key, Map&lt;String, Object&gt; value, <span class=\"keyword\">int</span> cacheSeconds)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> isExists = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(getBytesKey(key))) &#123;</div><div class=\"line\">\t\t\t\tisExists = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tMap&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt; map = Maps.newHashMap();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;String, Object&gt; e : value.entrySet())&#123;</div><div class=\"line\">\t\t\t\tmap.put(getBytesKey(e.getKey()), toBytes(e.getValue()));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tresult = jedis.hmset(getBytesKey(key), (Map&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt;)map);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!isExists &amp;&amp; cacheSeconds != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tjedis.expire(key, cacheSeconds);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"setObjectMap &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"setObjectMap &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 向Map缓存中添加值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">mapPut</span><span class=\"params\">(String key, Map&lt;String, String&gt; value)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hmset(key, value);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapPut &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapPut &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 向Map缓存中添加值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">mapObjectPut</span><span class=\"params\">(String key, Map&lt;String, Object&gt; value)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tString result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tMap&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt; map = Maps.newHashMap();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;String, Object&gt; e : value.entrySet())&#123;</div><div class=\"line\">\t\t\t\tmap.put(getBytesKey(e.getKey()), toBytes(e.getValue()));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tresult = jedis.hmset(getBytesKey(key), (Map&lt;<span class=\"keyword\">byte</span>[], <span class=\"keyword\">byte</span>[]&gt;)map);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapObjectPut &#123;&#125; = &#123;&#125;\"</span>, key, value);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapObjectPut &#123;&#125; = &#123;&#125;\"</span>, key, value, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 移除Map缓存中的值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">mapRemove</span><span class=\"params\">(String key, String mapKey)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hdel(key, mapKey);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapRemove &#123;&#125;  &#123;&#125;\"</span>, key, mapKey);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapRemove &#123;&#125;  &#123;&#125;\"</span>, key, mapKey, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 移除Map缓存中的值</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">mapObjectRemove</span><span class=\"params\">(String key, String mapKey)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hdel(getBytesKey(key), getBytesKey(mapKey));</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapObjectRemove &#123;&#125;  &#123;&#125;\"</span>, key, mapKey);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapObjectRemove &#123;&#125;  &#123;&#125;\"</span>, key, mapKey, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 判断Map缓存中的Key是否存在</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">mapExists</span><span class=\"params\">(String key, String mapKey)</span><span class=\"keyword\">throws</span> Exception  </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hexists(key, mapKey);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapExists &#123;&#125;  &#123;&#125;\"</span>, key, mapKey);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapExists &#123;&#125;  &#123;&#125;\"</span>, key, mapKey, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 判断Map缓存中的Key是否存在</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> value 值</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">mapObjectExists</span><span class=\"params\">(String key, String mapKey)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.hexists(getBytesKey(key), getBytesKey(mapKey));</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"mapObjectExists &#123;&#125;  &#123;&#125;\"</span>, key, mapKey);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"mapObjectExists &#123;&#125;  &#123;&#125;\"</span>, key, mapKey, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 删除缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">del</span><span class=\"params\">(String key)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(key))&#123;</div><div class=\"line\">\t\t\t\tresult = jedis.del(key);</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"del &#123;&#125;\"</span>, key);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"del &#123;&#125; not exists\"</span>, key);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"del &#123;&#125;\"</span>, key, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 删除缓存</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">delObject</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">long</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (jedis.exists(getBytesKey(key)))&#123;</div><div class=\"line\">\t\t\t\tresult = jedis.del(getBytesKey(key));</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"delObject &#123;&#125;\"</span>, key);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\tlogger.debug(<span class=\"string\">\"delObject &#123;&#125; not exists\"</span>, key);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"delObject &#123;&#125;\"</span>, key, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 缓存是否存在</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">exists</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.exists(key);</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"exists &#123;&#125;\"</span>, key);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"exists &#123;&#125;\"</span>, key, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 缓存是否存在</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key 键</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">existsObject</span><span class=\"params\">(String key)</span><span class=\"keyword\">throws</span> Exception  </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> result = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = getResource();</div><div class=\"line\">\t\t\tresult = jedis.exists(getBytesKey(key));</div><div class=\"line\">\t\t\tlogger.debug(<span class=\"string\">\"existsObject &#123;&#125;\"</span>, key);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"existsObject &#123;&#125;\"</span>, key, e);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\treturnResource(jedis);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取资源</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> JedisException</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Jedis <span class=\"title\">getResource</span><span class=\"params\">()</span>  <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tJedis jedis = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tjedis = jedisPool.getResource();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (JedisException e) &#123;</div><div class=\"line\">\t\t\tlogger.warn(<span class=\"string\">\"getResource.\"</span>, e);</div><div class=\"line\">\t\t\treturnBrokenResource(jedis);</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> jedis;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 归还资源</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> jedis</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> isBroken</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">returnBrokenResource</span><span class=\"params\">(Jedis jedis)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (jedis != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">/*jedisPool.returnBrokenResource(jedis);*/</span></div><div class=\"line\">\t\t\tjedis.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 释放资源</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> jedis</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> isBroken</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">returnResource</span><span class=\"params\">(Jedis jedis)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (jedis != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">/*jedisPool.returnResource(jedis);*/</span></div><div class=\"line\">\t\t\tjedis.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取byte[]类型Key</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] getBytesKey(Object object)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(object <span class=\"keyword\">instanceof</span> String)&#123;</div><div class=\"line\">    \t\t<span class=\"keyword\">return</span> StringUtil.getBytes((String)object);</div><div class=\"line\">    \t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    \t\t<span class=\"keyword\">return</span> ObjectUtils.serialize(object);</div><div class=\"line\">    \t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * Object转换byte[]类型</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] toBytes(Object object)&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> ObjectUtils.serialize(object);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * byte[]型转换Object</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">toObject</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> ObjectUtils.unserialize(bytes);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Object序列化和反序列化工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test.util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ObjectUtils</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 序列化对象</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> object</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] serialize(Object object) &#123;</div><div class=\"line\">\t\t <span class=\"keyword\">byte</span>[]  bytes = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tObjectOutputStream oos = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tByteArrayOutputStream baos = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (object != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t\tbaos = <span class=\"keyword\">new</span> ByteArrayOutputStream();</div><div class=\"line\">\t\t\t\toos = <span class=\"keyword\">new</span> ObjectOutputStream(baos);</div><div class=\"line\">\t\t\t\toos.writeObject(object);</div><div class=\"line\">\t\t\t\tbytes = baos.toByteArray();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != oos) &#123;</div><div class=\"line\">\t\t\t\t\toos.close();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != baos) &#123;</div><div class=\"line\">\t\t\t\t\tbaos.close();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e2) &#123;</div><div class=\"line\">\t\t\t\te2.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> bytes;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 反序列化对象</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> bytes</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">unserialize</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes)</span> </span>&#123;</div><div class=\"line\">\t\tObject object = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tByteArrayInputStream bais = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tObjectInputStream ois = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bytes != <span class=\"keyword\">null</span> &amp;&amp; bytes.length &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t\tbais = <span class=\"keyword\">new</span> ByteArrayInputStream(bytes);</div><div class=\"line\">\t\t\t\tois = <span class=\"keyword\">new</span> ObjectInputStream(bais);</div><div class=\"line\">\t\t\t\tobject = ois.readObject();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != ois) &#123;</div><div class=\"line\">\t\t\t\t\tois.close();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != bais) &#123;</div><div class=\"line\">\t\t\t\t\tbais.close();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e2) &#123;</div><div class=\"line\">\t\t\t\te2.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>  object ;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>String工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test.util;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StringUtil</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CHARSET_NAME = <span class=\"string\">\"UTF-8\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\"> \t * </div><div class=\"line\"> \t* <span class=\"doctag\">@Title</span>: toString</div><div class=\"line\"> \t* <span class=\"doctag\">@Description</span>: 把字节流转为字符串</div><div class=\"line\"> \t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> content</div><div class=\"line\"> \t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> charset</div><div class=\"line\"> \t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@return</span>    </div><div class=\"line\"> \t* <span class=\"doctag\">@return</span> String    </div><div class=\"line\"> \t* <span class=\"doctag\">@throws</span></div><div class=\"line\"> \t */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">toString</span><span class=\"params\">(<span class=\"keyword\">byte</span>[]content, String charset)</span></span>&#123;</div><div class=\"line\">    \tString result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    \t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        \t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != content &amp;&amp; content.length &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        \t\tresult =  <span class=\"keyword\">new</span> String(content, charset);</div><div class=\"line\">        \t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">    \t</div><div class=\"line\"></div><div class=\"line\">    \t<span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 转换为字节数组</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> str</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">toString</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>  toString(bytes, <span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 转换为字节数组</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> str</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] getBytes(String str)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (str != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> str.getBytes(CHARSET_NAME);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>spring配置的片段<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 连接池配置 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisPool\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redis.clients.jedis.JedisPool\"</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"destroy\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisPoolConfig\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis_host&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"java.lang.String\"</span>  /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis_port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"3\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"360000\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 超时时间 单位ms --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"4\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis_password&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"java.lang.String\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis_database&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 注入 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisUtils\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test.util.JedisUtils\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jedisPool\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisPool\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"Mybatis执行insert后获取主键方式","date":"2016-08-21T08:21:16.000Z","_content":"```\n在hibernate中，hibernate的一级缓存会把insert后的主键绑定到对象中，我们可以直接在session.save(user);\n后直接使用user.getId();的方式来取得插入后的主键，而在mybatis中，我们一般使用mapper.xml来编辑sql语句，\n当我们执行insert后，返回的model中并没有帮我们把主键返回\n```\n使用selectKey来实现类似JDBC的getGeneratedKeys();获取主键的功能\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper namespace=\"test.dao.UserDao\" >\n  <resultMap id=\"BaseResultMap\" type=\"test.model.User\" >\n    <id column=\"store_id\" property=\"storeId\" jdbcType=\"BIGINT\" />\n    <result column=\"name\" property=\"name\" jdbcType=\"VARCHAR\" />\n    <result column=\"role\" property=\"role\" jdbcType=\"BIGINT\" />\n    <result column=\"mobile\" property=\"mobile\" jdbcType=\"VARCHAR\" />\n  </resultMap>\n  \n<insert id=\"insert\" parameterType=\"test.model.User\">\n  \tinsert into u_user\n    <trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\" >\n      <if test=\"userId != null\" >\n        user_id,\n      </if>\n      <if test=\"name != null\" >\n        name,\n      </if>\n      <if test=\"role != null\" >\n        role,\n      </if>\n      <if test=\"mobile != null\" >\n        mobile,\n      </if>\n    </trim>\n    <trim prefix=\"values (\" suffix=\")\" suffixOverrides=\",\" >\n      <if test=\"userId != null\" >\n        #{userId,jdbcType=BIGINT},\n      </if>\n      <if test=\"name != null\" >\n        #{name,jdbcType=VARCHAR},\n      </if>\n      <if test=\"role != null\" >\n        #{role,jdbcType=BIGINT},\n      </if>\n      <if test=\"mobile != null\" >\n        #{mobile,jdbcType=VARCHAR},\n      </if>\n    </trim>\n    <selectKey resultType=\"java.lang.Long\" keyProperty=\"userId\">  \n      <![CDATA[SELECT LAST_INSERT_ID() AS user_id ]]>\n    </selectKey>\n</insert>\n```\n这里需要说明一下不同的数据库主键的生成，对各自的数据库有不同的方式：\n```plain\nmysql:\tSELECT LAST_INSERT_ID() AS VALUE\nmssql:\tSELECT @@IDENTITY AS VALUE\noracle:\tSELECT STOCKIDSEQUENCE.NEXTVAL AS VALUE FROM DUAL\n```\n还有一点需要注意的是不同的数据库生产商生成主键的方式不一样，有些是预先生成 (pre-generate)主键的，如Oracle和PostgreSQL。有些是事后生成(post-generate)主键的，如MySQL和SQL Server 所以如果是Oracle数据库，则需要将selectKey写在insert语句之前","source":"_posts/Mybatis执行insert后获取主键方式.md","raw":"---\ntitle: Mybatis执行insert后获取主键方式\ndate: 2016-08-21 16:21:16\ncategories: [Java]\ntags: [Java,mybatis]\n---\n```\n在hibernate中，hibernate的一级缓存会把insert后的主键绑定到对象中，我们可以直接在session.save(user);\n后直接使用user.getId();的方式来取得插入后的主键，而在mybatis中，我们一般使用mapper.xml来编辑sql语句，\n当我们执行insert后，返回的model中并没有帮我们把主键返回\n```\n使用selectKey来实现类似JDBC的getGeneratedKeys();获取主键的功能\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper namespace=\"test.dao.UserDao\" >\n  <resultMap id=\"BaseResultMap\" type=\"test.model.User\" >\n    <id column=\"store_id\" property=\"storeId\" jdbcType=\"BIGINT\" />\n    <result column=\"name\" property=\"name\" jdbcType=\"VARCHAR\" />\n    <result column=\"role\" property=\"role\" jdbcType=\"BIGINT\" />\n    <result column=\"mobile\" property=\"mobile\" jdbcType=\"VARCHAR\" />\n  </resultMap>\n  \n<insert id=\"insert\" parameterType=\"test.model.User\">\n  \tinsert into u_user\n    <trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\" >\n      <if test=\"userId != null\" >\n        user_id,\n      </if>\n      <if test=\"name != null\" >\n        name,\n      </if>\n      <if test=\"role != null\" >\n        role,\n      </if>\n      <if test=\"mobile != null\" >\n        mobile,\n      </if>\n    </trim>\n    <trim prefix=\"values (\" suffix=\")\" suffixOverrides=\",\" >\n      <if test=\"userId != null\" >\n        #{userId,jdbcType=BIGINT},\n      </if>\n      <if test=\"name != null\" >\n        #{name,jdbcType=VARCHAR},\n      </if>\n      <if test=\"role != null\" >\n        #{role,jdbcType=BIGINT},\n      </if>\n      <if test=\"mobile != null\" >\n        #{mobile,jdbcType=VARCHAR},\n      </if>\n    </trim>\n    <selectKey resultType=\"java.lang.Long\" keyProperty=\"userId\">  \n      <![CDATA[SELECT LAST_INSERT_ID() AS user_id ]]>\n    </selectKey>\n</insert>\n```\n这里需要说明一下不同的数据库主键的生成，对各自的数据库有不同的方式：\n```plain\nmysql:\tSELECT LAST_INSERT_ID() AS VALUE\nmssql:\tSELECT @@IDENTITY AS VALUE\noracle:\tSELECT STOCKIDSEQUENCE.NEXTVAL AS VALUE FROM DUAL\n```\n还有一点需要注意的是不同的数据库生产商生成主键的方式不一样，有些是预先生成 (pre-generate)主键的，如Oracle和PostgreSQL。有些是事后生成(post-generate)主键的，如MySQL和SQL Server 所以如果是Oracle数据库，则需要将selectKey写在insert语句之前","slug":"Mybatis执行insert后获取主键方式","published":1,"updated":"2017-01-17T02:37:07.156Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou47000ipo2yl2v2qp21","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">在hibernate中，hibernate的一级缓存会把insert后的主键绑定到对象中，我们可以直接在session.save(user);</div><div class=\"line\">后直接使用user.getId();的方式来取得插入后的主键，而在mybatis中，我们一般使用mapper.xml来编辑sql语句，</div><div class=\"line\">当我们执行insert后，返回的model中并没有帮我们把主键返回</div></pre></td></tr></table></figure>\n<p>使用selectKey来实现类似JDBC的getGeneratedKeys();获取主键的功能<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"test.dao.UserDao\"</span> &gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">\"BaseResultMap\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"test.model.User\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">column</span>=<span class=\"string\">\"store_id\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"storeId\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"BIGINT\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"VARCHAR\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"role\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"role\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"BIGINT\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"mobile\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"mobile\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"VARCHAR\"</span> /&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insert\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"test.model.User\"</span>&gt;</span></div><div class=\"line\">  \tinsert into u_user</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">trim</span> <span class=\"attr\">prefix</span>=<span class=\"string\">\"(\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\")\"</span> <span class=\"attr\">suffixOverrides</span>=<span class=\"string\">\",\"</span> &gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"userId != null\"</span> &gt;</span></div><div class=\"line\">        user_id,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"name != null\"</span> &gt;</span></div><div class=\"line\">        name,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"role != null\"</span> &gt;</span></div><div class=\"line\">        role,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"mobile != null\"</span> &gt;</span></div><div class=\"line\">        mobile,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">trim</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">trim</span> <span class=\"attr\">prefix</span>=<span class=\"string\">\"values (\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\")\"</span> <span class=\"attr\">suffixOverrides</span>=<span class=\"string\">\",\"</span> &gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"userId != null\"</span> &gt;</span></div><div class=\"line\">        #&#123;userId,jdbcType=BIGINT&#125;,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"name != null\"</span> &gt;</span></div><div class=\"line\">        #&#123;name,jdbcType=VARCHAR&#125;,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"role != null\"</span> &gt;</span></div><div class=\"line\">        #&#123;role,jdbcType=BIGINT&#125;,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"mobile != null\"</span> &gt;</span></div><div class=\"line\">        #&#123;mobile,jdbcType=VARCHAR&#125;,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">trim</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"java.lang.Long\"</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"userId\"</span>&gt;</span>  </div><div class=\"line\">      &lt;![CDATA[SELECT LAST_INSERT_ID() AS user_id ]]&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>这里需要说明一下不同的数据库主键的生成，对各自的数据库有不同的方式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql:\tSELECT LAST_INSERT_ID() AS VALUE</div><div class=\"line\">mssql:\tSELECT @@IDENTITY AS VALUE</div><div class=\"line\">oracle:\tSELECT STOCKIDSEQUENCE.NEXTVAL AS VALUE FROM DUAL</div></pre></td></tr></table></figure></p>\n<p>还有一点需要注意的是不同的数据库生产商生成主键的方式不一样，有些是预先生成 (pre-generate)主键的，如Oracle和PostgreSQL。有些是事后生成(post-generate)主键的，如MySQL和SQL Server 所以如果是Oracle数据库，则需要将selectKey写在insert语句之前</p>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">在hibernate中，hibernate的一级缓存会把insert后的主键绑定到对象中，我们可以直接在session.save(user);</div><div class=\"line\">后直接使用user.getId();的方式来取得插入后的主键，而在mybatis中，我们一般使用mapper.xml来编辑sql语句，</div><div class=\"line\">当我们执行insert后，返回的model中并没有帮我们把主键返回</div></pre></td></tr></table></figure>\n<p>使用selectKey来实现类似JDBC的getGeneratedKeys();获取主键的功能<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"test.dao.UserDao\"</span> &gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">\"BaseResultMap\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"test.model.User\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">column</span>=<span class=\"string\">\"store_id\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"storeId\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"BIGINT\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"VARCHAR\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"role\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"role\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"BIGINT\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">\"mobile\"</span> <span class=\"attr\">property</span>=<span class=\"string\">\"mobile\"</span> <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"VARCHAR\"</span> /&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insert\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"test.model.User\"</span>&gt;</span></div><div class=\"line\">  \tinsert into u_user</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">trim</span> <span class=\"attr\">prefix</span>=<span class=\"string\">\"(\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\")\"</span> <span class=\"attr\">suffixOverrides</span>=<span class=\"string\">\",\"</span> &gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"userId != null\"</span> &gt;</span></div><div class=\"line\">        user_id,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"name != null\"</span> &gt;</span></div><div class=\"line\">        name,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"role != null\"</span> &gt;</span></div><div class=\"line\">        role,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"mobile != null\"</span> &gt;</span></div><div class=\"line\">        mobile,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">trim</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">trim</span> <span class=\"attr\">prefix</span>=<span class=\"string\">\"values (\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\")\"</span> <span class=\"attr\">suffixOverrides</span>=<span class=\"string\">\",\"</span> &gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"userId != null\"</span> &gt;</span></div><div class=\"line\">        #&#123;userId,jdbcType=BIGINT&#125;,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"name != null\"</span> &gt;</span></div><div class=\"line\">        #&#123;name,jdbcType=VARCHAR&#125;,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"role != null\"</span> &gt;</span></div><div class=\"line\">        #&#123;role,jdbcType=BIGINT&#125;,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">\"mobile != null\"</span> &gt;</span></div><div class=\"line\">        #&#123;mobile,jdbcType=VARCHAR&#125;,</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">trim</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">resultType</span>=<span class=\"string\">\"java.lang.Long\"</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">\"userId\"</span>&gt;</span>  </div><div class=\"line\">      &lt;![CDATA[SELECT LAST_INSERT_ID() AS user_id ]]&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>这里需要说明一下不同的数据库主键的生成，对各自的数据库有不同的方式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql:\tSELECT LAST_INSERT_ID() AS VALUE</div><div class=\"line\">mssql:\tSELECT @@IDENTITY AS VALUE</div><div class=\"line\">oracle:\tSELECT STOCKIDSEQUENCE.NEXTVAL AS VALUE FROM DUAL</div></pre></td></tr></table></figure></p>\n<p>还有一点需要注意的是不同的数据库生产商生成主键的方式不一样，有些是预先生成 (pre-generate)主键的，如Oracle和PostgreSQL。有些是事后生成(post-generate)主键的，如MySQL和SQL Server 所以如果是Oracle数据库，则需要将selectKey写在insert语句之前</p>\n"},{"title":"POI导出excel表","date":"2017-01-03T09:06:39.000Z","_content":"##### 列标题属性注解类\n```Java\npackage excel;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.apache.poi.hssf.util.HSSFColor;\nimport org.apache.poi.ss.usermodel.CellStyle;\n\n/**  \n * @Title: ExcelAnnotation.java\n * @Package excel\n * @Description: 列标题属性注解\n * @author Zoro\n * @date 2016年12月30日 下午4:13:54\n * @version V1.0  \n */\n@Retention(RetentionPolicy.RUNTIME)  \n@Target({ElementType.FIELD})\npublic @interface ExcelAnnotation {\n\n\t// 列标题名\n\tpublic String name() default \"\";\n\t// 行号\n\tpublic int col() default 0;\n\t// 日期格式\n\tpublic String dateFormat() default \"\";\n\t\n\t/** 列标题样式 start */\n\t// 水平对齐（默认居中）\n\tpublic short alignment() default CellStyle.ALIGN_CENTER;\n\t// 垂直对齐（默认）\n\tpublic short verticalAlignment() default CellStyle.VERTICAL_CENTER;\n\t// 填充信息模式和纯色填充单元（默认不填充）\n\tpublic short fillPattern() default CellStyle.SOLID_FOREGROUND;\n\t// 背景色填充（默认白色）\n\tpublic short fillBackgroundColor() default HSSFColor.GREY_40_PERCENT.index;\n\t// 字号（默认16）\n\tpublic short fontHeighInPoints() default 16;\n\t// 字体颜色（默认黑色）\n\tpublic short fontColor() default HSSFColor.BLACK.index;\n\t/** 列标题样式 end */\n\t\n}\n```\n##### Excel表格属性类\n```Java\npackage excel;\n\nimport java.io.File;\nimport java.text.DateFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\n/**  \n * @Title: ExcelArgs.java\n * @Package excel\n * @Description: Excel表格属性\n * @author Zoro\n * @date 2016年12月30日 下午2:38:48\n * @version V1.0  \n */\npublic class ExcelArgs {\n\n\t// 工作表\n    private List<SheetArgs> sheets = new ArrayList<SheetArgs>();\n    // 文件名\n    private String fileName;\n    // 文件保存路径\n    private String filePath;\n    // 完整路径+文件名\n    private String excelName;\n    \n    /**\n    * @Title: init\n    * @Description: 初始化excel\n    * @param     \n    * @return void    \n    * @throws\n     */\n    public void init() {\n    \tif (null == fileName || \"\".equals(fileName.trim())) {\n    \t\tthrow new RuntimeException(\"Excel 文件名不能为空！\");\n    \t}\n    \tfileName = fileName.trim();\n    \tif (!(fileName.endsWith(\".xls\") || fileName.endsWith(\".xlsx\"))) {\n    \t\t// 设置默认文件后缀\n    \t\tfileName = fileName + \".xls\";\n    \t}\n    \tDateFormat df = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n    \tfileName = df.format(new Date()) + \"_\" + fileName;\n    \tif (null == filePath || \"\".equals(filePath.trim())) {\n    \t\t// 设置默认文件生成路径（生成的文件在项目的tmp目录下）\n    \t\tfilePath = \"src/main/webapp/tmp\";\n    \t}\n    \tif (!(filePath.endsWith(File.separator))) {  \n    \t\tfilePath += File.separator;\n        }\n    }\n      \n    public List<SheetArgs> getSheets() {  \n        return sheets;  \n    }  \n  \n    public void setSheets(SheetArgs sheet){  \n        if(sheets==null){  \n            sheets = new ArrayList<>();  \n        }  \n        sheets.add(sheet);  \n    }\n\n    public String getFileName() {\n        return fileName;\n    }\n\n    public void setFileName(String fileName) {\n        this.fileName = fileName;\n    }\n\n    public String getFilePath() {\n        return filePath;\n    }\n\n    public void setFilePath(String filePath) {\n        this.filePath = filePath;\n    }\n\n    public String getExcelName() {\n        return filePath + fileName;\n    }\n\n    public void setExcelName(String excelName) {\n        this.excelName = excelName;\n    }  \n\t\n}\n```\n##### Sheet表格属性类\n```Java\npackage excel;\n\nimport java.util.List;\n\nimport org.apache.poi.hssf.util.HSSFColor;\nimport org.apache.poi.ss.formula.functions.T;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.IndexedColors;\n\n/**  \n * @Title: SheetArgs.java\n * @Package excel\n * @Description: Sheet表格属性\n * @author Zoro\n * @date 2016年12月30日 下午2:36:25\n * @version V1.0  \n */\n@SuppressWarnings(\"hiding\")\npublic class SheetArgs<T> {\n\n\t// 工作表名\n    public String sheetName;\n    // 标题名\n    public String titleName;\n    // 注入类\n    public Class<?> clazz;\n    // 数据源\n    public List<T> source;\n    \n    /** 标题样式 start */\n    // 标题从第几行开始（默认第一行）\n    public int defaultRow = 0;\n    // 标题从第几行结束（默认第一行）\n    public int endRow = 0;\n    // 标题从第几列开始（默认第一列）\n    public int defaultCol = 0;\n    // 标题从第几列结束（默认第一列到最大列数 ）\n    public int endCol = 0;\n    // 行高\n    public int heightInPoints = 40;\n    // 默认列宽（默认25）\n    public int defaultColumnWidth = 20;\n    // 水平对齐（默认居中）\n    public short alignment = CellStyle.ALIGN_CENTER;\n    // 垂直对齐（默认）\n    public short verticalAlignment = CellStyle.VERTICAL_CENTER;\n    // 填充信息模式和纯色填充单元（默认全填充）\n    public short fillPattern = CellStyle.SOLID_FOREGROUND;\n    // 背景色填充（默认浅黄色）\n    public short fillBackgroundColor = IndexedColors.LEMON_CHIFFON.index;\n    // 字号（默认24）\n    public short fontHeighInPoints = 24;\n    // 字体颜色（默认黑色）\n    public short fontColor = HSSFColor.BLACK.index;\n    /** 标题样式  end*/\n\t\n}\n\n```\n##### 报表导出数据属性类\n```Java\npackage excel;\n/**  \n * @Title: ExcelExport.java\n * @Package excel\n * @Description: 报表导出数据属性\n * @author Zoro\n * @date 2016年12月30日 下午2:24:51\n * @version V1.0  \n */\npublic class ExcelExport implements Comparable<ExcelExport> {\n\n\tpublic String name;\n\t\n\tpublic int order;\n\t\n\tpublic String dateFormat;\n\n\tpublic ExcelExport(String name, int order, String dateFormat) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.order = order;\n\t\tthis.dateFormat = dateFormat;\n\t}\n\n\t@Override\n\tpublic int compareTo(ExcelExport o) {\n\t\treturn this.order - o.getOrder();\n\t}\n\t\n\tpublic int getOrder() {\n\t\treturn order;\n\t}\n}\n```\n##### 报表操作工具类\n```Java\npackage excel;\n\nimport java.io.FileOutputStream;\nimport java.lang.reflect.Field;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.apache.poi.hssf.usermodel.HSSFFont;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.hssf.util.HSSFColor;\nimport org.apache.poi.ss.formula.functions.T;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.Font;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.util.CellRangeAddress;\n\n/**  \n * @Title: ExcelUtil.java\n * @Package excel\n * @Description: 报表操作工具类\n * @author Zoro\n * @date 2016年12月30日 下午3:05:19\n * @version V1.0  \n */\npublic class ExcelUtil {\n\t\n\t/**\n\t * @throws SecurityException \n\t * @throws NoSuchFieldException \n\t* @Title: exportExcel\n\t* @Description: 导出报表\n\t* @param     \n\t* @return void    \n\t* @throws\n\t */\n\tpublic static String exportExcel(ExcelArgs excelArgs) throws Exception {\n\t\t// 初始化存储路径\n\t\texcelArgs.init();\n\t\t// 声明一个工作薄  \n        HSSFWorkbook workbook = new HSSFWorkbook();\n        // 获取所有工作表\n        List<SheetArgs> sheets = excelArgs.getSheets();\n        // 遍历所有工作表\n        for (SheetArgs sheet : sheets) {\n        \tcreateSheet(workbook, sheet);\n        }\n        \n        // 创建一个文件流 \n\t\ttry(FileOutputStream fos = new FileOutputStream(excelArgs.getExcelName());) {\n\t\t\t// 把内容写入流  \n\t\t\tworkbook.write(fos);\n\t\t\treturn excelArgs.getFileName();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n\t/**\n\t * @throws SecurityException \n\t * @throws NoSuchFieldException \n\t* @Title: createSheet\n\t* @Description: 生成工作表\n\t* @param @param workbook\n\t* @param @param sheet\n\t* @return void    \n\t* @throws\n\t */\n\tprivate static void createSheet(HSSFWorkbook workbook, SheetArgs mySheet) throws Exception, SecurityException {\n\t\t// 创建工作表\n\t\tSheet sheet = workbook.createSheet(mySheet.sheetName);\n\t\tsheet.setDefaultColumnWidth(mySheet.defaultColumnWidth);\n\t\tRow row = null;\n\t\tCell cell = null;\n\t\tint columnlength = 0;\n\t\tint rowNumber = 0;\n\t\tList<ExcelExport> sourceList = new ArrayList<ExcelExport>();\n\t\t\n\t\t// 获取所有的属性\n\t\tField[] fields = mySheet.clazz.getDeclaredFields();\n\t\t// 设置列标题行\n\t\tif (null != fields && fields.length > 0) {\n\t\t\trow = sheet.createRow(mySheet.endRow + 1);\n\t\t\tfor (Field field : fields) {\n\t\t\t\tExcelAnnotation annotation = field.getAnnotation(ExcelAnnotation.class);\n\t\t\t\tif (annotation instanceof ExcelAnnotation) {\n\t\t\t\t\t// 创建列\n\t\t\t\t\tcell = row.createCell(mySheet.defaultCol + annotation.col());\n\t\t\t\t\t// 设置列名样式 \n\t\t\t\t\tCellStyle titleStyle = workbook.createCellStyle();\n\t\t\t        titleStyle.setAlignment(annotation.alignment());  \n\t\t\t        titleStyle.setVerticalAlignment(annotation.verticalAlignment());\n\t\t\t        titleStyle.setFillForegroundColor(annotation.fillBackgroundColor());\n\t\t\t        titleStyle.setFillPattern(annotation.fillPattern());\n\t\t\t        Font font = workbook.createFont();\n\t\t\t        font.setFontHeightInPoints(annotation.fontHeighInPoints());\n\t\t\t        font.setColor(annotation.fontColor());\n\t\t\t        font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);\n\t\t\t        titleStyle.setFont(font);\n\t\t\t        cell.setCellStyle(titleStyle);\n\t\t\t        cell.setCellValue(annotation.name());\n\t\t\t        \n\t\t\t        ExcelExport excelExport = new ExcelExport(field.getName(), annotation.col(), annotation.dateFormat());\n\t\t\t        sourceList.add(excelExport);\n\t\t\t        columnlength++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// 排序列\n\t\tCollections.sort(sourceList);\n\t\t\n\t\t// 设置总标题\n\t\tif (null != mySheet.titleName && !\"\".equals(mySheet.titleName.trim())){\n\t\t\trow = sheet.createRow(mySheet.defaultRow);\n\t\t\tcell = row.createCell(mySheet.defaultCol);\n            row.setHeightInPoints(mySheet.heightInPoints);  \n            cell.setCellValue(mySheet.titleName);\n            \n            CellStyle titleStyle = workbook.createCellStyle();\n\t        titleStyle.setAlignment(mySheet.alignment);  \n\t        titleStyle.setVerticalAlignment(mySheet.verticalAlignment);  \n\t        titleStyle.setFillForegroundColor(mySheet.fillBackgroundColor);  \n\t        titleStyle.setFillPattern(mySheet.fillPattern);\n\t        Font font = workbook.createFont();\n\t        font.setFontHeightInPoints(mySheet.fontHeighInPoints);\n\t        font.setColor(mySheet.fontColor);\n\t        titleStyle.setFont(font);\n            cell.setCellStyle(titleStyle);\n            \n            // 合并单元格\n            if (0 == mySheet.endCol && columnlength > 0) {\n            \tmySheet.endCol = mySheet.defaultCol + columnlength - 1;\n            }\n            sheet.addMergedRegion(new CellRangeAddress(\n            \t\tmySheet.defaultRow, \n            \t\tmySheet.endRow, \n            \t\tmySheet.defaultCol, \n            \t\tmySheet.endCol));\n\t\t}\n\t\t\n\t\t// 设置数据\n\t\tList<T> datas = mySheet.source;\n\t\trowNumber = mySheet.endRow + 2;\n\t\tif (null != datas && !datas.isEmpty() && 0 < datas.size()) {\n\t\t\t// 这个放循环里面的话实例Excel超过4000行会报错\n\t\t\tCellStyle cellStyle = workbook.createCellStyle();\n\t\t\tfor (Object data : datas) {\n\t\t\t\trow = sheet.createRow(rowNumber++);\n\t\t\t\tfor (int i = 0; i < columnlength; i++) {\n\t\t\t\t\tExcelExport excelExport = sourceList.get(i);\n\t\t\t\t\tcell = row.createCell(mySheet.defaultCol + i);\n\t\t\t\t\tObject source = null;\n\t\t\t\t\tString value = null;\n\t\t\t\t\t\n\t\t\t\t\t// 反射获取数据\n\t\t\t\t\tField field = mySheet.clazz.getDeclaredField(excelExport.name);\n\t\t\t\t\tfield.setAccessible(true);\n\t\t\t\t\tsource = field.get(data);\n\t\t\t\t\t// 单元格样式\n\t\t\t\t\tcellStyle.setAlignment(CellStyle.ALIGN_CENTER);\n\t\t\t\t\tcellStyle.setVerticalAlignment(CellStyle.VERTICAL_CENTER);\n\t\t\t        Font font = workbook.createFont();\n\t\t\t        font.setFontHeightInPoints((short) 12);\n\t\t\t        font.setColor(HSSFColor.BLACK.index);\n\t\t\t        cellStyle.setFont(font);\n\t\t\t        cell.setCellStyle(cellStyle);\n\t\t\t        \n\t\t\t        value = null != source ? source.toString() : \"\";\n\t\t            if (null != excelExport.dateFormat && !\"\".equals(excelExport.dateFormat)) {\n\t\t            \tvalue = new SimpleDateFormat(excelExport.dateFormat).format(source);\n\t\t            \tsheet.setColumnWidth(mySheet.defaultCol + i, 36 * 256);\n\t\t            }\n\t\t\t\t\tcell.setCellValue(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n}\n```\n##### 测试要导出的数据源类\n```Java\npackage excel;\n\nimport java.math.BigDecimal;\nimport java.util.Date;\n\n/**  \n * @Title: ExcelSource.java\n * @Package excel\n * @Description: 报表数据源\n * @author Zoro\n * @date 2016年12月30日 下午2:33:36\n * @version V1.0  \n */\npublic class ExcelSource {\n\n\t@ExcelAnnotation(name = \"账单id\", col = 0)\n\tprivate Long billingId;\n\t\n\t@ExcelAnnotation(name = \"账单号\", col = 1)\n    private String billingNum;\n\n\t@ExcelAnnotation(name = \"店铺id\", col = 4)\n    private Long storeId;\n    \n\t@ExcelAnnotation(name = \"店铺名\", col = 3)\n    private String storeName;\n    \n\t@ExcelAnnotation(name = \"开户账号\", col = 5)\n    private String bankAccount;\n    \n\t@ExcelAnnotation(name = \"开户用户账号\", col = 6)\n    private String bankUsername;\n    \n\t@ExcelAnnotation(name = \"开户行\", col = 7)\n    private String bankName;\n    \n\t@ExcelAnnotation(name = \"账单总金额\", col = 8)\n    private BigDecimal orderAmount;\n\n\t@ExcelAnnotation(name = \"应付金额\", col = 9)\n    private BigDecimal handleMoney;\n\n\t@ExcelAnnotation(name = \"实付金额\", col = 10)\n    private BigDecimal paidMoney;\n\n\t@ExcelAnnotation(name = \"账单月\", col = 11)\n    private String billingMonth;\n\n\t@ExcelAnnotation(name = \"账单状态\", col = 12)\n    private Integer status;\n\n\t@ExcelAnnotation(name = \"出账日期\", col = 13, dateFormat = \"yyyy年MM月dd日 HH时mm分ss秒\")\n    private Date issueDateTime;\n\n\t@ExcelAnnotation(name = \"完成时间\", col = 15, dateFormat = \"yyyy年MM月dd日 HH时mm分ss秒\")\n    private Date completeDateTime;\n\n\t@ExcelAnnotation(name = \"开始时间\", col = 14, dateFormat = \"yyyy年MM月dd日 HH时mm分ss秒\")\n    private Date startDateTime;\n\n\t@ExcelAnnotation(name = \"结束时间\", col = 2, dateFormat = \"yyyy年MM月dd日 HH时mm分ss秒\")\n    private Date endDateTime;\n\n\tpublic ExcelSource(Long billingId, String billingNum, Long storeId,\n\t\t\tString storeName, String bankAccount, String bankUsername,\n\t\t\tString bankName, BigDecimal orderAmount, BigDecimal handleMoney,\n\t\t\tBigDecimal paidMoney, String billingMonth, Integer status,\n\t\t\tDate issueDateTime, Date completeDateTime, Date startDateTime,\n\t\t\tDate endDateTime) {\n\t\tsuper();\n\t\tthis.billingId = billingId;\n\t\tthis.billingNum = billingNum;\n\t\tthis.storeId = storeId;\n\t\tthis.storeName = storeName;\n\t\tthis.bankAccount = bankAccount;\n\t\tthis.bankUsername = bankUsername;\n\t\tthis.bankName = bankName;\n\t\tthis.orderAmount = orderAmount;\n\t\tthis.handleMoney = handleMoney;\n\t\tthis.paidMoney = paidMoney;\n\t\tthis.billingMonth = billingMonth;\n\t\tthis.status = status;\n\t\tthis.issueDateTime = issueDateTime;\n\t\tthis.completeDateTime = completeDateTime;\n\t\tthis.startDateTime = startDateTime;\n\t\tthis.endDateTime = endDateTime;\n\t}\n\n\tpublic Long getBillingId() {\n\t\treturn billingId;\n\t}\n\n\tpublic void setBillingId(Long billingId) {\n\t\tthis.billingId = billingId;\n\t}\n\n\tpublic String getBillingNum() {\n\t\treturn billingNum;\n\t}\n\n\tpublic void setBillingNum(String billingNum) {\n\t\tthis.billingNum = billingNum;\n\t}\n\n\tpublic Long getStoreId() {\n\t\treturn storeId;\n\t}\n\n\tpublic void setStoreId(Long storeId) {\n\t\tthis.storeId = storeId;\n\t}\n\n\tpublic String getStoreName() {\n\t\treturn storeName;\n\t}\n\n\tpublic void setStoreName(String storeName) {\n\t\tthis.storeName = storeName;\n\t}\n\n\tpublic String getBankAccount() {\n\t\treturn bankAccount;\n\t}\n\n\tpublic void setBankAccount(String bankAccount) {\n\t\tthis.bankAccount = bankAccount;\n\t}\n\n\tpublic String getBankUsername() {\n\t\treturn bankUsername;\n\t}\n\n\tpublic void setBankUsername(String bankUsername) {\n\t\tthis.bankUsername = bankUsername;\n\t}\n\n\tpublic String getBankName() {\n\t\treturn bankName;\n\t}\n\n\tpublic void setBankName(String bankName) {\n\t\tthis.bankName = bankName;\n\t}\n\n\tpublic BigDecimal getOrderAmount() {\n\t\treturn orderAmount;\n\t}\n\n\tpublic void setOrderAmount(BigDecimal orderAmount) {\n\t\tthis.orderAmount = orderAmount;\n\t}\n\n\tpublic BigDecimal getHandleMoney() {\n\t\treturn handleMoney;\n\t}\n\n\tpublic void setHandleMoney(BigDecimal handleMoney) {\n\t\tthis.handleMoney = handleMoney;\n\t}\n\n\tpublic BigDecimal getPaidMoney() {\n\t\treturn paidMoney;\n\t}\n\n\tpublic void setPaidMoney(BigDecimal paidMoney) {\n\t\tthis.paidMoney = paidMoney;\n\t}\n\n\tpublic String getBillingMonth() {\n\t\treturn billingMonth;\n\t}\n\n\tpublic void setBillingMonth(String billingMonth) {\n\t\tthis.billingMonth = billingMonth;\n\t}\n\n\tpublic Integer getStatus() {\n\t\treturn status;\n\t}\n\n\tpublic void setStatus(Integer status) {\n\t\tthis.status = status;\n\t}\n\n\tpublic Date getIssueDateTime() {\n\t\treturn issueDateTime;\n\t}\n\n\tpublic void setIssueDateTime(Date issueDateTime) {\n\t\tthis.issueDateTime = issueDateTime;\n\t}\n\n\tpublic Date getCompleteDateTime() {\n\t\treturn completeDateTime;\n\t}\n\n\tpublic void setCompleteDateTime(Date completeDateTime) {\n\t\tthis.completeDateTime = completeDateTime;\n\t}\n\n\tpublic Date getStartDateTime() {\n\t\treturn startDateTime;\n\t}\n\n\tpublic void setStartDateTime(Date startDateTime) {\n\t\tthis.startDateTime = startDateTime;\n\t}\n\n\tpublic Date getEndDateTime() {\n\t\treturn endDateTime;\n\t}\n\n\tpublic void setEndDateTime(Date endDateTime) {\n\t\tthis.endDateTime = endDateTime;\n\t}\n\t\n}\n```\n##### 测试类\n```Java\npackage excel;\n\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\n/**  \n * @Title: ExcelTest.java\n * @Package excel\n * @Description: TODO\n * @author Zoro\n * @date 2016年12月30日 下午5:12:52\n * @version V1.0  \n */\npublic class ExcelTest {\n\n\tpublic static void main(String[] args) {\n\n\t\t// 数据源\n\t\tExcelSource source1 = new ExcelSource(10L, \"1\", 11L, \"01\", \"31\", \"21\", \"41\", new BigDecimal(51), new BigDecimal(61), new BigDecimal(1), \"201601\", 71, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source2 = new ExcelSource(20L, \"2\", 22L, \"02\", \"32\", \"22\", \"42\", new BigDecimal(52), new BigDecimal(62), new BigDecimal(2), \"202602\", 72, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source3 = new ExcelSource(30L, \"3\", 33L, \"03\", \"33\", \"23\", \"43\", new BigDecimal(53), new BigDecimal(63), new BigDecimal(3), \"203603\", 73, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source4 = new ExcelSource(40L, \"4\", 44L, \"04\", \"34\", \"24\", \"44\", new BigDecimal(54), new BigDecimal(64), new BigDecimal(4), \"204604\", 74, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source5 = new ExcelSource(50L, \"5\", 55L, \"05\", \"35\", \"25\", \"45\", new BigDecimal(55), new BigDecimal(65), new BigDecimal(5), \"205605\", 75, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source6 = new ExcelSource(60L, \"6\", 66L, \"06\", \"36\", \"26\", \"46\", new BigDecimal(56), new BigDecimal(66), new BigDecimal(6), \"206606\", 76, new Date(), new Date(), new Date(), new Date());\n\t\tList<ExcelSource> list = new ArrayList<ExcelSource>();\n\t\tlist.add(source1);\n\t\tlist.add(source2);\n\t\tlist.add(source3);\n\t\tlist.add(source4);\n\t\tlist.add(source5);\n\t\tlist.add(source6);\n\t\t\n\t\t// sheet表设置\n\t\tSheetArgs<ExcelSource> sheetArgs = new SheetArgs<ExcelSource>();\n\t\tsheetArgs.sheetName = \"sheet表名\";\n\t\tsheetArgs.titleName = \"总标题名\";\n\t\tsheetArgs.clazz = ExcelSource.class;\n\t\tsheetArgs.source = list;\n\t\t\n\t\t// excel文件设置\n\t\tExcelArgs excelArgs = new ExcelArgs();\n\t\texcelArgs.setSheets(sheetArgs);\n\t\texcelArgs.setFileName(\"excel表名\");\n\t\t\n\t\ttry {\n\t\t\t// 导出\n\t\t\tExcelUtil.exportExcel(excelArgs);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n```\n##### 效果图（为了截到完整的数据图，调过列宽）\n![](/image/POI导出excel表/excel导出效果图.jpg)\n","source":"_posts/POI导出excel表.md","raw":"---\ntitle: POI导出excel表\ndate: 2017-01-03 17:06:39\ncategories: [Java]\ntags: [Java]\n---\n##### 列标题属性注解类\n```Java\npackage excel;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.apache.poi.hssf.util.HSSFColor;\nimport org.apache.poi.ss.usermodel.CellStyle;\n\n/**  \n * @Title: ExcelAnnotation.java\n * @Package excel\n * @Description: 列标题属性注解\n * @author Zoro\n * @date 2016年12月30日 下午4:13:54\n * @version V1.0  \n */\n@Retention(RetentionPolicy.RUNTIME)  \n@Target({ElementType.FIELD})\npublic @interface ExcelAnnotation {\n\n\t// 列标题名\n\tpublic String name() default \"\";\n\t// 行号\n\tpublic int col() default 0;\n\t// 日期格式\n\tpublic String dateFormat() default \"\";\n\t\n\t/** 列标题样式 start */\n\t// 水平对齐（默认居中）\n\tpublic short alignment() default CellStyle.ALIGN_CENTER;\n\t// 垂直对齐（默认）\n\tpublic short verticalAlignment() default CellStyle.VERTICAL_CENTER;\n\t// 填充信息模式和纯色填充单元（默认不填充）\n\tpublic short fillPattern() default CellStyle.SOLID_FOREGROUND;\n\t// 背景色填充（默认白色）\n\tpublic short fillBackgroundColor() default HSSFColor.GREY_40_PERCENT.index;\n\t// 字号（默认16）\n\tpublic short fontHeighInPoints() default 16;\n\t// 字体颜色（默认黑色）\n\tpublic short fontColor() default HSSFColor.BLACK.index;\n\t/** 列标题样式 end */\n\t\n}\n```\n##### Excel表格属性类\n```Java\npackage excel;\n\nimport java.io.File;\nimport java.text.DateFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\n/**  \n * @Title: ExcelArgs.java\n * @Package excel\n * @Description: Excel表格属性\n * @author Zoro\n * @date 2016年12月30日 下午2:38:48\n * @version V1.0  \n */\npublic class ExcelArgs {\n\n\t// 工作表\n    private List<SheetArgs> sheets = new ArrayList<SheetArgs>();\n    // 文件名\n    private String fileName;\n    // 文件保存路径\n    private String filePath;\n    // 完整路径+文件名\n    private String excelName;\n    \n    /**\n    * @Title: init\n    * @Description: 初始化excel\n    * @param     \n    * @return void    \n    * @throws\n     */\n    public void init() {\n    \tif (null == fileName || \"\".equals(fileName.trim())) {\n    \t\tthrow new RuntimeException(\"Excel 文件名不能为空！\");\n    \t}\n    \tfileName = fileName.trim();\n    \tif (!(fileName.endsWith(\".xls\") || fileName.endsWith(\".xlsx\"))) {\n    \t\t// 设置默认文件后缀\n    \t\tfileName = fileName + \".xls\";\n    \t}\n    \tDateFormat df = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n    \tfileName = df.format(new Date()) + \"_\" + fileName;\n    \tif (null == filePath || \"\".equals(filePath.trim())) {\n    \t\t// 设置默认文件生成路径（生成的文件在项目的tmp目录下）\n    \t\tfilePath = \"src/main/webapp/tmp\";\n    \t}\n    \tif (!(filePath.endsWith(File.separator))) {  \n    \t\tfilePath += File.separator;\n        }\n    }\n      \n    public List<SheetArgs> getSheets() {  \n        return sheets;  \n    }  \n  \n    public void setSheets(SheetArgs sheet){  \n        if(sheets==null){  \n            sheets = new ArrayList<>();  \n        }  \n        sheets.add(sheet);  \n    }\n\n    public String getFileName() {\n        return fileName;\n    }\n\n    public void setFileName(String fileName) {\n        this.fileName = fileName;\n    }\n\n    public String getFilePath() {\n        return filePath;\n    }\n\n    public void setFilePath(String filePath) {\n        this.filePath = filePath;\n    }\n\n    public String getExcelName() {\n        return filePath + fileName;\n    }\n\n    public void setExcelName(String excelName) {\n        this.excelName = excelName;\n    }  \n\t\n}\n```\n##### Sheet表格属性类\n```Java\npackage excel;\n\nimport java.util.List;\n\nimport org.apache.poi.hssf.util.HSSFColor;\nimport org.apache.poi.ss.formula.functions.T;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.IndexedColors;\n\n/**  \n * @Title: SheetArgs.java\n * @Package excel\n * @Description: Sheet表格属性\n * @author Zoro\n * @date 2016年12月30日 下午2:36:25\n * @version V1.0  \n */\n@SuppressWarnings(\"hiding\")\npublic class SheetArgs<T> {\n\n\t// 工作表名\n    public String sheetName;\n    // 标题名\n    public String titleName;\n    // 注入类\n    public Class<?> clazz;\n    // 数据源\n    public List<T> source;\n    \n    /** 标题样式 start */\n    // 标题从第几行开始（默认第一行）\n    public int defaultRow = 0;\n    // 标题从第几行结束（默认第一行）\n    public int endRow = 0;\n    // 标题从第几列开始（默认第一列）\n    public int defaultCol = 0;\n    // 标题从第几列结束（默认第一列到最大列数 ）\n    public int endCol = 0;\n    // 行高\n    public int heightInPoints = 40;\n    // 默认列宽（默认25）\n    public int defaultColumnWidth = 20;\n    // 水平对齐（默认居中）\n    public short alignment = CellStyle.ALIGN_CENTER;\n    // 垂直对齐（默认）\n    public short verticalAlignment = CellStyle.VERTICAL_CENTER;\n    // 填充信息模式和纯色填充单元（默认全填充）\n    public short fillPattern = CellStyle.SOLID_FOREGROUND;\n    // 背景色填充（默认浅黄色）\n    public short fillBackgroundColor = IndexedColors.LEMON_CHIFFON.index;\n    // 字号（默认24）\n    public short fontHeighInPoints = 24;\n    // 字体颜色（默认黑色）\n    public short fontColor = HSSFColor.BLACK.index;\n    /** 标题样式  end*/\n\t\n}\n\n```\n##### 报表导出数据属性类\n```Java\npackage excel;\n/**  \n * @Title: ExcelExport.java\n * @Package excel\n * @Description: 报表导出数据属性\n * @author Zoro\n * @date 2016年12月30日 下午2:24:51\n * @version V1.0  \n */\npublic class ExcelExport implements Comparable<ExcelExport> {\n\n\tpublic String name;\n\t\n\tpublic int order;\n\t\n\tpublic String dateFormat;\n\n\tpublic ExcelExport(String name, int order, String dateFormat) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.order = order;\n\t\tthis.dateFormat = dateFormat;\n\t}\n\n\t@Override\n\tpublic int compareTo(ExcelExport o) {\n\t\treturn this.order - o.getOrder();\n\t}\n\t\n\tpublic int getOrder() {\n\t\treturn order;\n\t}\n}\n```\n##### 报表操作工具类\n```Java\npackage excel;\n\nimport java.io.FileOutputStream;\nimport java.lang.reflect.Field;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.apache.poi.hssf.usermodel.HSSFFont;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.hssf.util.HSSFColor;\nimport org.apache.poi.ss.formula.functions.T;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.Font;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.util.CellRangeAddress;\n\n/**  \n * @Title: ExcelUtil.java\n * @Package excel\n * @Description: 报表操作工具类\n * @author Zoro\n * @date 2016年12月30日 下午3:05:19\n * @version V1.0  \n */\npublic class ExcelUtil {\n\t\n\t/**\n\t * @throws SecurityException \n\t * @throws NoSuchFieldException \n\t* @Title: exportExcel\n\t* @Description: 导出报表\n\t* @param     \n\t* @return void    \n\t* @throws\n\t */\n\tpublic static String exportExcel(ExcelArgs excelArgs) throws Exception {\n\t\t// 初始化存储路径\n\t\texcelArgs.init();\n\t\t// 声明一个工作薄  \n        HSSFWorkbook workbook = new HSSFWorkbook();\n        // 获取所有工作表\n        List<SheetArgs> sheets = excelArgs.getSheets();\n        // 遍历所有工作表\n        for (SheetArgs sheet : sheets) {\n        \tcreateSheet(workbook, sheet);\n        }\n        \n        // 创建一个文件流 \n\t\ttry(FileOutputStream fos = new FileOutputStream(excelArgs.getExcelName());) {\n\t\t\t// 把内容写入流  \n\t\t\tworkbook.write(fos);\n\t\t\treturn excelArgs.getFileName();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n\t/**\n\t * @throws SecurityException \n\t * @throws NoSuchFieldException \n\t* @Title: createSheet\n\t* @Description: 生成工作表\n\t* @param @param workbook\n\t* @param @param sheet\n\t* @return void    \n\t* @throws\n\t */\n\tprivate static void createSheet(HSSFWorkbook workbook, SheetArgs mySheet) throws Exception, SecurityException {\n\t\t// 创建工作表\n\t\tSheet sheet = workbook.createSheet(mySheet.sheetName);\n\t\tsheet.setDefaultColumnWidth(mySheet.defaultColumnWidth);\n\t\tRow row = null;\n\t\tCell cell = null;\n\t\tint columnlength = 0;\n\t\tint rowNumber = 0;\n\t\tList<ExcelExport> sourceList = new ArrayList<ExcelExport>();\n\t\t\n\t\t// 获取所有的属性\n\t\tField[] fields = mySheet.clazz.getDeclaredFields();\n\t\t// 设置列标题行\n\t\tif (null != fields && fields.length > 0) {\n\t\t\trow = sheet.createRow(mySheet.endRow + 1);\n\t\t\tfor (Field field : fields) {\n\t\t\t\tExcelAnnotation annotation = field.getAnnotation(ExcelAnnotation.class);\n\t\t\t\tif (annotation instanceof ExcelAnnotation) {\n\t\t\t\t\t// 创建列\n\t\t\t\t\tcell = row.createCell(mySheet.defaultCol + annotation.col());\n\t\t\t\t\t// 设置列名样式 \n\t\t\t\t\tCellStyle titleStyle = workbook.createCellStyle();\n\t\t\t        titleStyle.setAlignment(annotation.alignment());  \n\t\t\t        titleStyle.setVerticalAlignment(annotation.verticalAlignment());\n\t\t\t        titleStyle.setFillForegroundColor(annotation.fillBackgroundColor());\n\t\t\t        titleStyle.setFillPattern(annotation.fillPattern());\n\t\t\t        Font font = workbook.createFont();\n\t\t\t        font.setFontHeightInPoints(annotation.fontHeighInPoints());\n\t\t\t        font.setColor(annotation.fontColor());\n\t\t\t        font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);\n\t\t\t        titleStyle.setFont(font);\n\t\t\t        cell.setCellStyle(titleStyle);\n\t\t\t        cell.setCellValue(annotation.name());\n\t\t\t        \n\t\t\t        ExcelExport excelExport = new ExcelExport(field.getName(), annotation.col(), annotation.dateFormat());\n\t\t\t        sourceList.add(excelExport);\n\t\t\t        columnlength++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// 排序列\n\t\tCollections.sort(sourceList);\n\t\t\n\t\t// 设置总标题\n\t\tif (null != mySheet.titleName && !\"\".equals(mySheet.titleName.trim())){\n\t\t\trow = sheet.createRow(mySheet.defaultRow);\n\t\t\tcell = row.createCell(mySheet.defaultCol);\n            row.setHeightInPoints(mySheet.heightInPoints);  \n            cell.setCellValue(mySheet.titleName);\n            \n            CellStyle titleStyle = workbook.createCellStyle();\n\t        titleStyle.setAlignment(mySheet.alignment);  \n\t        titleStyle.setVerticalAlignment(mySheet.verticalAlignment);  \n\t        titleStyle.setFillForegroundColor(mySheet.fillBackgroundColor);  \n\t        titleStyle.setFillPattern(mySheet.fillPattern);\n\t        Font font = workbook.createFont();\n\t        font.setFontHeightInPoints(mySheet.fontHeighInPoints);\n\t        font.setColor(mySheet.fontColor);\n\t        titleStyle.setFont(font);\n            cell.setCellStyle(titleStyle);\n            \n            // 合并单元格\n            if (0 == mySheet.endCol && columnlength > 0) {\n            \tmySheet.endCol = mySheet.defaultCol + columnlength - 1;\n            }\n            sheet.addMergedRegion(new CellRangeAddress(\n            \t\tmySheet.defaultRow, \n            \t\tmySheet.endRow, \n            \t\tmySheet.defaultCol, \n            \t\tmySheet.endCol));\n\t\t}\n\t\t\n\t\t// 设置数据\n\t\tList<T> datas = mySheet.source;\n\t\trowNumber = mySheet.endRow + 2;\n\t\tif (null != datas && !datas.isEmpty() && 0 < datas.size()) {\n\t\t\t// 这个放循环里面的话实例Excel超过4000行会报错\n\t\t\tCellStyle cellStyle = workbook.createCellStyle();\n\t\t\tfor (Object data : datas) {\n\t\t\t\trow = sheet.createRow(rowNumber++);\n\t\t\t\tfor (int i = 0; i < columnlength; i++) {\n\t\t\t\t\tExcelExport excelExport = sourceList.get(i);\n\t\t\t\t\tcell = row.createCell(mySheet.defaultCol + i);\n\t\t\t\t\tObject source = null;\n\t\t\t\t\tString value = null;\n\t\t\t\t\t\n\t\t\t\t\t// 反射获取数据\n\t\t\t\t\tField field = mySheet.clazz.getDeclaredField(excelExport.name);\n\t\t\t\t\tfield.setAccessible(true);\n\t\t\t\t\tsource = field.get(data);\n\t\t\t\t\t// 单元格样式\n\t\t\t\t\tcellStyle.setAlignment(CellStyle.ALIGN_CENTER);\n\t\t\t\t\tcellStyle.setVerticalAlignment(CellStyle.VERTICAL_CENTER);\n\t\t\t        Font font = workbook.createFont();\n\t\t\t        font.setFontHeightInPoints((short) 12);\n\t\t\t        font.setColor(HSSFColor.BLACK.index);\n\t\t\t        cellStyle.setFont(font);\n\t\t\t        cell.setCellStyle(cellStyle);\n\t\t\t        \n\t\t\t        value = null != source ? source.toString() : \"\";\n\t\t            if (null != excelExport.dateFormat && !\"\".equals(excelExport.dateFormat)) {\n\t\t            \tvalue = new SimpleDateFormat(excelExport.dateFormat).format(source);\n\t\t            \tsheet.setColumnWidth(mySheet.defaultCol + i, 36 * 256);\n\t\t            }\n\t\t\t\t\tcell.setCellValue(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n}\n```\n##### 测试要导出的数据源类\n```Java\npackage excel;\n\nimport java.math.BigDecimal;\nimport java.util.Date;\n\n/**  \n * @Title: ExcelSource.java\n * @Package excel\n * @Description: 报表数据源\n * @author Zoro\n * @date 2016年12月30日 下午2:33:36\n * @version V1.0  \n */\npublic class ExcelSource {\n\n\t@ExcelAnnotation(name = \"账单id\", col = 0)\n\tprivate Long billingId;\n\t\n\t@ExcelAnnotation(name = \"账单号\", col = 1)\n    private String billingNum;\n\n\t@ExcelAnnotation(name = \"店铺id\", col = 4)\n    private Long storeId;\n    \n\t@ExcelAnnotation(name = \"店铺名\", col = 3)\n    private String storeName;\n    \n\t@ExcelAnnotation(name = \"开户账号\", col = 5)\n    private String bankAccount;\n    \n\t@ExcelAnnotation(name = \"开户用户账号\", col = 6)\n    private String bankUsername;\n    \n\t@ExcelAnnotation(name = \"开户行\", col = 7)\n    private String bankName;\n    \n\t@ExcelAnnotation(name = \"账单总金额\", col = 8)\n    private BigDecimal orderAmount;\n\n\t@ExcelAnnotation(name = \"应付金额\", col = 9)\n    private BigDecimal handleMoney;\n\n\t@ExcelAnnotation(name = \"实付金额\", col = 10)\n    private BigDecimal paidMoney;\n\n\t@ExcelAnnotation(name = \"账单月\", col = 11)\n    private String billingMonth;\n\n\t@ExcelAnnotation(name = \"账单状态\", col = 12)\n    private Integer status;\n\n\t@ExcelAnnotation(name = \"出账日期\", col = 13, dateFormat = \"yyyy年MM月dd日 HH时mm分ss秒\")\n    private Date issueDateTime;\n\n\t@ExcelAnnotation(name = \"完成时间\", col = 15, dateFormat = \"yyyy年MM月dd日 HH时mm分ss秒\")\n    private Date completeDateTime;\n\n\t@ExcelAnnotation(name = \"开始时间\", col = 14, dateFormat = \"yyyy年MM月dd日 HH时mm分ss秒\")\n    private Date startDateTime;\n\n\t@ExcelAnnotation(name = \"结束时间\", col = 2, dateFormat = \"yyyy年MM月dd日 HH时mm分ss秒\")\n    private Date endDateTime;\n\n\tpublic ExcelSource(Long billingId, String billingNum, Long storeId,\n\t\t\tString storeName, String bankAccount, String bankUsername,\n\t\t\tString bankName, BigDecimal orderAmount, BigDecimal handleMoney,\n\t\t\tBigDecimal paidMoney, String billingMonth, Integer status,\n\t\t\tDate issueDateTime, Date completeDateTime, Date startDateTime,\n\t\t\tDate endDateTime) {\n\t\tsuper();\n\t\tthis.billingId = billingId;\n\t\tthis.billingNum = billingNum;\n\t\tthis.storeId = storeId;\n\t\tthis.storeName = storeName;\n\t\tthis.bankAccount = bankAccount;\n\t\tthis.bankUsername = bankUsername;\n\t\tthis.bankName = bankName;\n\t\tthis.orderAmount = orderAmount;\n\t\tthis.handleMoney = handleMoney;\n\t\tthis.paidMoney = paidMoney;\n\t\tthis.billingMonth = billingMonth;\n\t\tthis.status = status;\n\t\tthis.issueDateTime = issueDateTime;\n\t\tthis.completeDateTime = completeDateTime;\n\t\tthis.startDateTime = startDateTime;\n\t\tthis.endDateTime = endDateTime;\n\t}\n\n\tpublic Long getBillingId() {\n\t\treturn billingId;\n\t}\n\n\tpublic void setBillingId(Long billingId) {\n\t\tthis.billingId = billingId;\n\t}\n\n\tpublic String getBillingNum() {\n\t\treturn billingNum;\n\t}\n\n\tpublic void setBillingNum(String billingNum) {\n\t\tthis.billingNum = billingNum;\n\t}\n\n\tpublic Long getStoreId() {\n\t\treturn storeId;\n\t}\n\n\tpublic void setStoreId(Long storeId) {\n\t\tthis.storeId = storeId;\n\t}\n\n\tpublic String getStoreName() {\n\t\treturn storeName;\n\t}\n\n\tpublic void setStoreName(String storeName) {\n\t\tthis.storeName = storeName;\n\t}\n\n\tpublic String getBankAccount() {\n\t\treturn bankAccount;\n\t}\n\n\tpublic void setBankAccount(String bankAccount) {\n\t\tthis.bankAccount = bankAccount;\n\t}\n\n\tpublic String getBankUsername() {\n\t\treturn bankUsername;\n\t}\n\n\tpublic void setBankUsername(String bankUsername) {\n\t\tthis.bankUsername = bankUsername;\n\t}\n\n\tpublic String getBankName() {\n\t\treturn bankName;\n\t}\n\n\tpublic void setBankName(String bankName) {\n\t\tthis.bankName = bankName;\n\t}\n\n\tpublic BigDecimal getOrderAmount() {\n\t\treturn orderAmount;\n\t}\n\n\tpublic void setOrderAmount(BigDecimal orderAmount) {\n\t\tthis.orderAmount = orderAmount;\n\t}\n\n\tpublic BigDecimal getHandleMoney() {\n\t\treturn handleMoney;\n\t}\n\n\tpublic void setHandleMoney(BigDecimal handleMoney) {\n\t\tthis.handleMoney = handleMoney;\n\t}\n\n\tpublic BigDecimal getPaidMoney() {\n\t\treturn paidMoney;\n\t}\n\n\tpublic void setPaidMoney(BigDecimal paidMoney) {\n\t\tthis.paidMoney = paidMoney;\n\t}\n\n\tpublic String getBillingMonth() {\n\t\treturn billingMonth;\n\t}\n\n\tpublic void setBillingMonth(String billingMonth) {\n\t\tthis.billingMonth = billingMonth;\n\t}\n\n\tpublic Integer getStatus() {\n\t\treturn status;\n\t}\n\n\tpublic void setStatus(Integer status) {\n\t\tthis.status = status;\n\t}\n\n\tpublic Date getIssueDateTime() {\n\t\treturn issueDateTime;\n\t}\n\n\tpublic void setIssueDateTime(Date issueDateTime) {\n\t\tthis.issueDateTime = issueDateTime;\n\t}\n\n\tpublic Date getCompleteDateTime() {\n\t\treturn completeDateTime;\n\t}\n\n\tpublic void setCompleteDateTime(Date completeDateTime) {\n\t\tthis.completeDateTime = completeDateTime;\n\t}\n\n\tpublic Date getStartDateTime() {\n\t\treturn startDateTime;\n\t}\n\n\tpublic void setStartDateTime(Date startDateTime) {\n\t\tthis.startDateTime = startDateTime;\n\t}\n\n\tpublic Date getEndDateTime() {\n\t\treturn endDateTime;\n\t}\n\n\tpublic void setEndDateTime(Date endDateTime) {\n\t\tthis.endDateTime = endDateTime;\n\t}\n\t\n}\n```\n##### 测试类\n```Java\npackage excel;\n\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\n/**  \n * @Title: ExcelTest.java\n * @Package excel\n * @Description: TODO\n * @author Zoro\n * @date 2016年12月30日 下午5:12:52\n * @version V1.0  \n */\npublic class ExcelTest {\n\n\tpublic static void main(String[] args) {\n\n\t\t// 数据源\n\t\tExcelSource source1 = new ExcelSource(10L, \"1\", 11L, \"01\", \"31\", \"21\", \"41\", new BigDecimal(51), new BigDecimal(61), new BigDecimal(1), \"201601\", 71, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source2 = new ExcelSource(20L, \"2\", 22L, \"02\", \"32\", \"22\", \"42\", new BigDecimal(52), new BigDecimal(62), new BigDecimal(2), \"202602\", 72, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source3 = new ExcelSource(30L, \"3\", 33L, \"03\", \"33\", \"23\", \"43\", new BigDecimal(53), new BigDecimal(63), new BigDecimal(3), \"203603\", 73, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source4 = new ExcelSource(40L, \"4\", 44L, \"04\", \"34\", \"24\", \"44\", new BigDecimal(54), new BigDecimal(64), new BigDecimal(4), \"204604\", 74, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source5 = new ExcelSource(50L, \"5\", 55L, \"05\", \"35\", \"25\", \"45\", new BigDecimal(55), new BigDecimal(65), new BigDecimal(5), \"205605\", 75, new Date(), new Date(), new Date(), new Date());\n\t\tExcelSource source6 = new ExcelSource(60L, \"6\", 66L, \"06\", \"36\", \"26\", \"46\", new BigDecimal(56), new BigDecimal(66), new BigDecimal(6), \"206606\", 76, new Date(), new Date(), new Date(), new Date());\n\t\tList<ExcelSource> list = new ArrayList<ExcelSource>();\n\t\tlist.add(source1);\n\t\tlist.add(source2);\n\t\tlist.add(source3);\n\t\tlist.add(source4);\n\t\tlist.add(source5);\n\t\tlist.add(source6);\n\t\t\n\t\t// sheet表设置\n\t\tSheetArgs<ExcelSource> sheetArgs = new SheetArgs<ExcelSource>();\n\t\tsheetArgs.sheetName = \"sheet表名\";\n\t\tsheetArgs.titleName = \"总标题名\";\n\t\tsheetArgs.clazz = ExcelSource.class;\n\t\tsheetArgs.source = list;\n\t\t\n\t\t// excel文件设置\n\t\tExcelArgs excelArgs = new ExcelArgs();\n\t\texcelArgs.setSheets(sheetArgs);\n\t\texcelArgs.setFileName(\"excel表名\");\n\t\t\n\t\ttry {\n\t\t\t// 导出\n\t\t\tExcelUtil.exportExcel(excelArgs);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n```\n##### 效果图（为了截到完整的数据图，调过列宽）\n![](/image/POI导出excel表/excel导出效果图.jpg)\n","slug":"POI导出excel表","published":1,"updated":"2017-06-13T01:41:34.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4a000npo2yrqy202c4","content":"<h5 id=\"列标题属性注解类\"><a href=\"#列标题属性注解类\" class=\"headerlink\" title=\"列标题属性注解类\"></a>列标题属性注解类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.ElementType;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Retention;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.RetentionPolicy;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Target;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.util.HSSFColor;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.CellStyle;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelAnnotation.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 列标题属性注解</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午4:13:54</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)  </div><div class=\"line\"><span class=\"meta\">@Target</span>(&#123;ElementType.FIELD&#125;)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> ExcelAnnotation &#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 列标题名</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">name</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> \"\"</span>;</div><div class=\"line\">\t<span class=\"comment\">// 行号</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">col</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 0</span>;</div><div class=\"line\">\t<span class=\"comment\">// 日期格式</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">dateFormat</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> \"\"</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/** 列标题样式 start */</span></div><div class=\"line\">\t<span class=\"comment\">// 水平对齐（默认居中）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">alignment</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> CellStyle.ALIGN_CENTER</span>;</div><div class=\"line\">\t<span class=\"comment\">// 垂直对齐（默认）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">verticalAlignment</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> CellStyle.VERTICAL_CENTER</span>;</div><div class=\"line\">\t<span class=\"comment\">// 填充信息模式和纯色填充单元（默认不填充）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">fillPattern</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> CellStyle.SOLID_FOREGROUND</span>;</div><div class=\"line\">\t<span class=\"comment\">// 背景色填充（默认白色）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">fillBackgroundColor</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> HSSFColor.GREY_40_PERCENT.index</span>;</div><div class=\"line\">\t<span class=\"comment\">// 字号（默认16）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">fontHeighInPoints</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 16</span>;</div><div class=\"line\">\t<span class=\"comment\">// 字体颜色（默认黑色）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">fontColor</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> HSSFColor.BLACK.index</span>;</div><div class=\"line\">\t<span class=\"comment\">/** 列标题样式 end */</span></div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"Excel表格属性类\"><a href=\"#Excel表格属性类\" class=\"headerlink\" title=\"Excel表格属性类\"></a>Excel表格属性类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.DateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelArgs.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: Excel表格属性</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午2:38:48</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelArgs</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 工作表</span></div><div class=\"line\">    <span class=\"keyword\">private</span> List&lt;SheetArgs&gt; sheets = <span class=\"keyword\">new</span> ArrayList&lt;SheetArgs&gt;();</div><div class=\"line\">    <span class=\"comment\">// 文件名</span></div><div class=\"line\">    <span class=\"keyword\">private</span> String fileName;</div><div class=\"line\">    <span class=\"comment\">// 文件保存路径</span></div><div class=\"line\">    <span class=\"keyword\">private</span> String filePath;</div><div class=\"line\">    <span class=\"comment\">// 完整路径+文件名</span></div><div class=\"line\">    <span class=\"keyword\">private</span> String excelName;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">    * <span class=\"doctag\">@Title</span>: init</div><div class=\"line\">    * <span class=\"doctag\">@Description</span>: 初始化excel</div><div class=\"line\">    * <span class=\"doctag\">@param</span>     </div><div class=\"line\">    * <span class=\"doctag\">@return</span> void    </div><div class=\"line\">    * <span class=\"doctag\">@throws</span></div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    \t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == fileName || <span class=\"string\">\"\"</span>.equals(fileName.trim())) &#123;</div><div class=\"line\">    \t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Excel 文件名不能为空！\"</span>);</div><div class=\"line\">    \t&#125;</div><div class=\"line\">    \tfileName = fileName.trim();</div><div class=\"line\">    \t<span class=\"keyword\">if</span> (!(fileName.endsWith(<span class=\"string\">\".xls\"</span>) || fileName.endsWith(<span class=\"string\">\".xlsx\"</span>))) &#123;</div><div class=\"line\">    \t\t<span class=\"comment\">// 设置默认文件后缀</span></div><div class=\"line\">    \t\tfileName = fileName + <span class=\"string\">\".xls\"</span>;</div><div class=\"line\">    \t&#125;</div><div class=\"line\">    \tDateFormat df = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyyMMddHHmmss\"</span>);</div><div class=\"line\">    \tfileName = df.format(<span class=\"keyword\">new</span> Date()) + <span class=\"string\">\"_\"</span> + fileName;</div><div class=\"line\">    \t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == filePath || <span class=\"string\">\"\"</span>.equals(filePath.trim())) &#123;</div><div class=\"line\">    \t\t<span class=\"comment\">// 设置默认文件生成路径（生成的文件在项目的tmp目录下）</span></div><div class=\"line\">    \t\tfilePath = <span class=\"string\">\"src/main/webapp/tmp\"</span>;</div><div class=\"line\">    \t&#125;</div><div class=\"line\">    \t<span class=\"keyword\">if</span> (!(filePath.endsWith(File.separator))) &#123;  </div><div class=\"line\">    \t\tfilePath += File.separator;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">      </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;SheetArgs&gt; <span class=\"title\">getSheets</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">return</span> sheets;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSheets</span><span class=\"params\">(SheetArgs sheet)</span></span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">if</span>(sheets==<span class=\"keyword\">null</span>)&#123;  </div><div class=\"line\">            sheets = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        sheets.add(sheet);  </div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getFileName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> fileName;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setFileName</span><span class=\"params\">(String fileName)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.fileName = fileName;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getFilePath</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> filePath;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setFilePath</span><span class=\"params\">(String filePath)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.filePath = filePath;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getExcelName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> filePath + fileName;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setExcelName</span><span class=\"params\">(String excelName)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.excelName = excelName;</div><div class=\"line\">    &#125;  </div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"Sheet表格属性类\"><a href=\"#Sheet表格属性类\" class=\"headerlink\" title=\"Sheet表格属性类\"></a>Sheet表格属性类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.util.HSSFColor;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.formula.functions.T;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.CellStyle;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.IndexedColors;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: SheetArgs.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: Sheet表格属性</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午2:36:25</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"hiding\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SheetArgs</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 工作表名</span></div><div class=\"line\">    <span class=\"keyword\">public</span> String sheetName;</div><div class=\"line\">    <span class=\"comment\">// 标题名</span></div><div class=\"line\">    <span class=\"keyword\">public</span> String titleName;</div><div class=\"line\">    <span class=\"comment\">// 注入类</span></div><div class=\"line\">    <span class=\"keyword\">public</span> Class&lt;?&gt; clazz;</div><div class=\"line\">    <span class=\"comment\">// 数据源</span></div><div class=\"line\">    <span class=\"keyword\">public</span> List&lt;T&gt; source;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/** 标题样式 start */</span></div><div class=\"line\">    <span class=\"comment\">// 标题从第几行开始（默认第一行）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> defaultRow = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">// 标题从第几行结束（默认第一行）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> endRow = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">// 标题从第几列开始（默认第一列）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> defaultCol = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">// 标题从第几列结束（默认第一列到最大列数 ）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> endCol = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">// 行高</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> heightInPoints = <span class=\"number\">40</span>;</div><div class=\"line\">    <span class=\"comment\">// 默认列宽（默认25）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> defaultColumnWidth = <span class=\"number\">20</span>;</div><div class=\"line\">    <span class=\"comment\">// 水平对齐（默认居中）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> alignment = CellStyle.ALIGN_CENTER;</div><div class=\"line\">    <span class=\"comment\">// 垂直对齐（默认）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> verticalAlignment = CellStyle.VERTICAL_CENTER;</div><div class=\"line\">    <span class=\"comment\">// 填充信息模式和纯色填充单元（默认全填充）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> fillPattern = CellStyle.SOLID_FOREGROUND;</div><div class=\"line\">    <span class=\"comment\">// 背景色填充（默认浅黄色）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> fillBackgroundColor = IndexedColors.LEMON_CHIFFON.index;</div><div class=\"line\">    <span class=\"comment\">// 字号（默认24）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> fontHeighInPoints = <span class=\"number\">24</span>;</div><div class=\"line\">    <span class=\"comment\">// 字体颜色（默认黑色）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> fontColor = HSSFColor.BLACK.index;</div><div class=\"line\">    <span class=\"comment\">/** 标题样式  end*/</span></div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"报表导出数据属性类\"><a href=\"#报表导出数据属性类\" class=\"headerlink\" title=\"报表导出数据属性类\"></a>报表导出数据属性类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelExport.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 报表导出数据属性</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午2:24:51</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelExport</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">ExcelExport</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> String name;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> order;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">public</span> String dateFormat;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelExport</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> order, String dateFormat)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.order = order;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.dateFormat = dateFormat;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(ExcelExport o)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.order - o.getOrder();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> order;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"报表操作工具类\"><a href=\"#报表操作工具类\" class=\"headerlink\" title=\"报表操作工具类\"></a>报表操作工具类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.usermodel.HSSFFont;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.util.HSSFColor;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.formula.functions.T;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Cell;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.CellStyle;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Font;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Row;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Sheet;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.util.CellRangeAddress;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelUtil.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 报表操作工具类</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午3:05:19</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelUtil</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SecurityException </div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> NoSuchFieldException </div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: exportExcel</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 导出报表</div><div class=\"line\">\t* <span class=\"doctag\">@param</span>     </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> void    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">exportExcel</span><span class=\"params\">(ExcelArgs excelArgs)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 初始化存储路径</span></div><div class=\"line\">\t\texcelArgs.init();</div><div class=\"line\">\t\t<span class=\"comment\">// 声明一个工作薄  </span></div><div class=\"line\">        HSSFWorkbook workbook = <span class=\"keyword\">new</span> HSSFWorkbook();</div><div class=\"line\">        <span class=\"comment\">// 获取所有工作表</span></div><div class=\"line\">        List&lt;SheetArgs&gt; sheets = excelArgs.getSheets();</div><div class=\"line\">        <span class=\"comment\">// 遍历所有工作表</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (SheetArgs sheet : sheets) &#123;</div><div class=\"line\">        \tcreateSheet(workbook, sheet);</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"comment\">// 创建一个文件流 </span></div><div class=\"line\">\t\t<span class=\"keyword\">try</span>(FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(excelArgs.getExcelName());) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 把内容写入流  </span></div><div class=\"line\">\t\t\tworkbook.write(fos);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> excelArgs.getFileName();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SecurityException </div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> NoSuchFieldException </div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: createSheet</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 生成工作表</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> workbook</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@return</span> void    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">createSheet</span><span class=\"params\">(HSSFWorkbook workbook, SheetArgs mySheet)</span> <span class=\"keyword\">throws</span> Exception, SecurityException </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 创建工作表</span></div><div class=\"line\">\t\tSheet sheet = workbook.createSheet(mySheet.sheetName);</div><div class=\"line\">\t\tsheet.setDefaultColumnWidth(mySheet.defaultColumnWidth);</div><div class=\"line\">\t\tRow row = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tCell cell = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> columnlength = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> rowNumber = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tList&lt;ExcelExport&gt; sourceList = <span class=\"keyword\">new</span> ArrayList&lt;ExcelExport&gt;();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// 获取所有的属性</span></div><div class=\"line\">\t\tField[] fields = mySheet.clazz.getDeclaredFields();</div><div class=\"line\">\t\t<span class=\"comment\">// 设置列标题行</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != fields &amp;&amp; fields.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\trow = sheet.createRow(mySheet.endRow + <span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Field field : fields) &#123;</div><div class=\"line\">\t\t\t\tExcelAnnotation annotation = field.getAnnotation(ExcelAnnotation.class);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (annotation <span class=\"keyword\">instanceof</span> ExcelAnnotation) &#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 创建列</span></div><div class=\"line\">\t\t\t\t\tcell = row.createCell(mySheet.defaultCol + annotation.col());</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 设置列名样式 </span></div><div class=\"line\">\t\t\t\t\tCellStyle titleStyle = workbook.createCellStyle();</div><div class=\"line\">\t\t\t        titleStyle.setAlignment(annotation.alignment());  </div><div class=\"line\">\t\t\t        titleStyle.setVerticalAlignment(annotation.verticalAlignment());</div><div class=\"line\">\t\t\t        titleStyle.setFillForegroundColor(annotation.fillBackgroundColor());</div><div class=\"line\">\t\t\t        titleStyle.setFillPattern(annotation.fillPattern());</div><div class=\"line\">\t\t\t        Font font = workbook.createFont();</div><div class=\"line\">\t\t\t        font.setFontHeightInPoints(annotation.fontHeighInPoints());</div><div class=\"line\">\t\t\t        font.setColor(annotation.fontColor());</div><div class=\"line\">\t\t\t        font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</div><div class=\"line\">\t\t\t        titleStyle.setFont(font);</div><div class=\"line\">\t\t\t        cell.setCellStyle(titleStyle);</div><div class=\"line\">\t\t\t        cell.setCellValue(annotation.name());</div><div class=\"line\">\t\t\t        </div><div class=\"line\">\t\t\t        ExcelExport excelExport = <span class=\"keyword\">new</span> ExcelExport(field.getName(), annotation.col(), annotation.dateFormat());</div><div class=\"line\">\t\t\t        sourceList.add(excelExport);</div><div class=\"line\">\t\t\t        columnlength++;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 排序列</span></div><div class=\"line\">\t\tCollections.sort(sourceList);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// 设置总标题</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != mySheet.titleName &amp;&amp; !<span class=\"string\">\"\"</span>.equals(mySheet.titleName.trim()))&#123;</div><div class=\"line\">\t\t\trow = sheet.createRow(mySheet.defaultRow);</div><div class=\"line\">\t\t\tcell = row.createCell(mySheet.defaultCol);</div><div class=\"line\">            row.setHeightInPoints(mySheet.heightInPoints);  </div><div class=\"line\">            cell.setCellValue(mySheet.titleName);</div><div class=\"line\">            </div><div class=\"line\">            CellStyle titleStyle = workbook.createCellStyle();</div><div class=\"line\">\t        titleStyle.setAlignment(mySheet.alignment);  </div><div class=\"line\">\t        titleStyle.setVerticalAlignment(mySheet.verticalAlignment);  </div><div class=\"line\">\t        titleStyle.setFillForegroundColor(mySheet.fillBackgroundColor);  </div><div class=\"line\">\t        titleStyle.setFillPattern(mySheet.fillPattern);</div><div class=\"line\">\t        Font font = workbook.createFont();</div><div class=\"line\">\t        font.setFontHeightInPoints(mySheet.fontHeighInPoints);</div><div class=\"line\">\t        font.setColor(mySheet.fontColor);</div><div class=\"line\">\t        titleStyle.setFont(font);</div><div class=\"line\">            cell.setCellStyle(titleStyle);</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"comment\">// 合并单元格</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == mySheet.endCol &amp;&amp; columnlength &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            \tmySheet.endCol = mySheet.defaultCol + columnlength - <span class=\"number\">1</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            sheet.addMergedRegion(<span class=\"keyword\">new</span> CellRangeAddress(</div><div class=\"line\">            \t\tmySheet.defaultRow, </div><div class=\"line\">            \t\tmySheet.endRow, </div><div class=\"line\">            \t\tmySheet.defaultCol, </div><div class=\"line\">            \t\tmySheet.endCol));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// 设置数据</span></div><div class=\"line\">\t\tList&lt;T&gt; datas = mySheet.source;</div><div class=\"line\">\t\trowNumber = mySheet.endRow + <span class=\"number\">2</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != datas &amp;&amp; !datas.isEmpty() &amp;&amp; <span class=\"number\">0</span> &lt; datas.size()) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 这个放循环里面的话实例Excel超过4000行会报错</span></div><div class=\"line\">\t\t\tCellStyle cellStyle = workbook.createCellStyle();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Object data : datas) &#123;</div><div class=\"line\">\t\t\t\trow = sheet.createRow(rowNumber++);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; columnlength; i++) &#123;</div><div class=\"line\">\t\t\t\t\tExcelExport excelExport = sourceList.get(i);</div><div class=\"line\">\t\t\t\t\tcell = row.createCell(mySheet.defaultCol + i);</div><div class=\"line\">\t\t\t\t\tObject source = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t\t\tString value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t\t\t</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 反射获取数据</span></div><div class=\"line\">\t\t\t\t\tField field = mySheet.clazz.getDeclaredField(excelExport.name);</div><div class=\"line\">\t\t\t\t\tfield.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">\t\t\t\t\tsource = field.get(data);</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 单元格样式</span></div><div class=\"line\">\t\t\t\t\tcellStyle.setAlignment(CellStyle.ALIGN_CENTER);</div><div class=\"line\">\t\t\t\t\tcellStyle.setVerticalAlignment(CellStyle.VERTICAL_CENTER);</div><div class=\"line\">\t\t\t        Font font = workbook.createFont();</div><div class=\"line\">\t\t\t        font.setFontHeightInPoints((<span class=\"keyword\">short</span>) <span class=\"number\">12</span>);</div><div class=\"line\">\t\t\t        font.setColor(HSSFColor.BLACK.index);</div><div class=\"line\">\t\t\t        cellStyle.setFont(font);</div><div class=\"line\">\t\t\t        cell.setCellStyle(cellStyle);</div><div class=\"line\">\t\t\t        </div><div class=\"line\">\t\t\t        value = <span class=\"keyword\">null</span> != source ? source.toString() : <span class=\"string\">\"\"</span>;</div><div class=\"line\">\t\t            <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != excelExport.dateFormat &amp;&amp; !<span class=\"string\">\"\"</span>.equals(excelExport.dateFormat)) &#123;</div><div class=\"line\">\t\t            \tvalue = <span class=\"keyword\">new</span> SimpleDateFormat(excelExport.dateFormat).format(source);</div><div class=\"line\">\t\t            \tsheet.setColumnWidth(mySheet.defaultCol + i, <span class=\"number\">36</span> * <span class=\"number\">256</span>);</div><div class=\"line\">\t\t            &#125;</div><div class=\"line\">\t\t\t\t\tcell.setCellValue(value);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"测试要导出的数据源类\"><a href=\"#测试要导出的数据源类\" class=\"headerlink\" title=\"测试要导出的数据源类\"></a>测试要导出的数据源类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelSource.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 报表数据源</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午2:33:36</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelSource</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单id\"</span>, col = <span class=\"number\">0</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> Long billingId;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单号\"</span>, col = <span class=\"number\">1</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String billingNum;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"店铺id\"</span>, col = <span class=\"number\">4</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Long storeId;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"店铺名\"</span>, col = <span class=\"number\">3</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String storeName;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"开户账号\"</span>, col = <span class=\"number\">5</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String bankAccount;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"开户用户账号\"</span>, col = <span class=\"number\">6</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String bankUsername;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"开户行\"</span>, col = <span class=\"number\">7</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String bankName;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单总金额\"</span>, col = <span class=\"number\">8</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> BigDecimal orderAmount;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"应付金额\"</span>, col = <span class=\"number\">9</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> BigDecimal handleMoney;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"实付金额\"</span>, col = <span class=\"number\">10</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> BigDecimal paidMoney;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单月\"</span>, col = <span class=\"number\">11</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String billingMonth;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单状态\"</span>, col = <span class=\"number\">12</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Integer status;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"出账日期\"</span>, col = <span class=\"number\">13</span>, dateFormat = <span class=\"string\">\"yyyy年MM月dd日 HH时mm分ss秒\"</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Date issueDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"完成时间\"</span>, col = <span class=\"number\">15</span>, dateFormat = <span class=\"string\">\"yyyy年MM月dd日 HH时mm分ss秒\"</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Date completeDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"开始时间\"</span>, col = <span class=\"number\">14</span>, dateFormat = <span class=\"string\">\"yyyy年MM月dd日 HH时mm分ss秒\"</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Date startDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"结束时间\"</span>, col = <span class=\"number\">2</span>, dateFormat = <span class=\"string\">\"yyyy年MM月dd日 HH时mm分ss秒\"</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Date endDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelSource</span><span class=\"params\">(Long billingId, String billingNum, Long storeId,</span></span></div><div class=\"line\">\t\t\tString storeName, String bankAccount, String bankUsername,</div><div class=\"line\">\t\t\tString bankName, BigDecimal orderAmount, BigDecimal handleMoney,</div><div class=\"line\">\t\t\tBigDecimal paidMoney, String billingMonth, Integer status,</div><div class=\"line\">\t\t\tDate issueDateTime, Date completeDateTime, Date startDateTime,</div><div class=\"line\">\t\t\tDate endDateTime) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingId = billingId;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingNum = billingNum;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.storeId = storeId;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.storeName = storeName;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankAccount = bankAccount;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankUsername = bankUsername;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankName = bankName;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.orderAmount = orderAmount;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.handleMoney = handleMoney;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.paidMoney = paidMoney;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingMonth = billingMonth;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.status = status;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.issueDateTime = issueDateTime;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.completeDateTime = completeDateTime;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.startDateTime = startDateTime;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.endDateTime = endDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Long <span class=\"title\">getBillingId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> billingId;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBillingId</span><span class=\"params\">(Long billingId)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingId = billingId;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBillingNum</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> billingNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBillingNum</span><span class=\"params\">(String billingNum)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingNum = billingNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Long <span class=\"title\">getStoreId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> storeId;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStoreId</span><span class=\"params\">(Long storeId)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.storeId = storeId;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getStoreName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> storeName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStoreName</span><span class=\"params\">(String storeName)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.storeName = storeName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBankAccount</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> bankAccount;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBankAccount</span><span class=\"params\">(String bankAccount)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankAccount = bankAccount;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBankUsername</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> bankUsername;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBankUsername</span><span class=\"params\">(String bankUsername)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankUsername = bankUsername;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBankName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> bankName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBankName</span><span class=\"params\">(String bankName)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankName = bankName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> BigDecimal <span class=\"title\">getOrderAmount</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> orderAmount;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOrderAmount</span><span class=\"params\">(BigDecimal orderAmount)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.orderAmount = orderAmount;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> BigDecimal <span class=\"title\">getHandleMoney</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> handleMoney;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHandleMoney</span><span class=\"params\">(BigDecimal handleMoney)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.handleMoney = handleMoney;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> BigDecimal <span class=\"title\">getPaidMoney</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> paidMoney;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPaidMoney</span><span class=\"params\">(BigDecimal paidMoney)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.paidMoney = paidMoney;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBillingMonth</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> billingMonth;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBillingMonth</span><span class=\"params\">(String billingMonth)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingMonth = billingMonth;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getStatus</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> status;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatus</span><span class=\"params\">(Integer status)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.status = status;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getIssueDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> issueDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setIssueDateTime</span><span class=\"params\">(Date issueDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.issueDateTime = issueDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getCompleteDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> completeDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setCompleteDateTime</span><span class=\"params\">(Date completeDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.completeDateTime = completeDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getStartDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> startDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStartDateTime</span><span class=\"params\">(Date startDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.startDateTime = startDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getEndDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> endDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEndDateTime</span><span class=\"params\">(Date endDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.endDateTime = endDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"测试类\"><a href=\"#测试类\" class=\"headerlink\" title=\"测试类\"></a>测试类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelTest.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: TODO</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午5:12:52</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelTest</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 数据源</span></div><div class=\"line\">\t\tExcelSource source1 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">10L</span>, <span class=\"string\">\"1\"</span>, <span class=\"number\">11L</span>, <span class=\"string\">\"01\"</span>, <span class=\"string\">\"31\"</span>, <span class=\"string\">\"21\"</span>, <span class=\"string\">\"41\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">51</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">61</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">1</span>), <span class=\"string\">\"201601\"</span>, <span class=\"number\">71</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source2 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">20L</span>, <span class=\"string\">\"2\"</span>, <span class=\"number\">22L</span>, <span class=\"string\">\"02\"</span>, <span class=\"string\">\"32\"</span>, <span class=\"string\">\"22\"</span>, <span class=\"string\">\"42\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">52</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">62</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">2</span>), <span class=\"string\">\"202602\"</span>, <span class=\"number\">72</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source3 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">30L</span>, <span class=\"string\">\"3\"</span>, <span class=\"number\">33L</span>, <span class=\"string\">\"03\"</span>, <span class=\"string\">\"33\"</span>, <span class=\"string\">\"23\"</span>, <span class=\"string\">\"43\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">53</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">63</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">3</span>), <span class=\"string\">\"203603\"</span>, <span class=\"number\">73</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source4 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">40L</span>, <span class=\"string\">\"4\"</span>, <span class=\"number\">44L</span>, <span class=\"string\">\"04\"</span>, <span class=\"string\">\"34\"</span>, <span class=\"string\">\"24\"</span>, <span class=\"string\">\"44\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">54</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">64</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">4</span>), <span class=\"string\">\"204604\"</span>, <span class=\"number\">74</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source5 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">50L</span>, <span class=\"string\">\"5\"</span>, <span class=\"number\">55L</span>, <span class=\"string\">\"05\"</span>, <span class=\"string\">\"35\"</span>, <span class=\"string\">\"25\"</span>, <span class=\"string\">\"45\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">55</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">65</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">5</span>), <span class=\"string\">\"205605\"</span>, <span class=\"number\">75</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source6 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">60L</span>, <span class=\"string\">\"6\"</span>, <span class=\"number\">66L</span>, <span class=\"string\">\"06\"</span>, <span class=\"string\">\"36\"</span>, <span class=\"string\">\"26\"</span>, <span class=\"string\">\"46\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">56</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">66</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">6</span>), <span class=\"string\">\"206606\"</span>, <span class=\"number\">76</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tList&lt;ExcelSource&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;ExcelSource&gt;();</div><div class=\"line\">\t\tlist.add(source1);</div><div class=\"line\">\t\tlist.add(source2);</div><div class=\"line\">\t\tlist.add(source3);</div><div class=\"line\">\t\tlist.add(source4);</div><div class=\"line\">\t\tlist.add(source5);</div><div class=\"line\">\t\tlist.add(source6);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// sheet表设置</span></div><div class=\"line\">\t\tSheetArgs&lt;ExcelSource&gt; sheetArgs = <span class=\"keyword\">new</span> SheetArgs&lt;ExcelSource&gt;();</div><div class=\"line\">\t\tsheetArgs.sheetName = <span class=\"string\">\"sheet表名\"</span>;</div><div class=\"line\">\t\tsheetArgs.titleName = <span class=\"string\">\"总标题名\"</span>;</div><div class=\"line\">\t\tsheetArgs.clazz = ExcelSource.class;</div><div class=\"line\">\t\tsheetArgs.source = list;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// excel文件设置</span></div><div class=\"line\">\t\tExcelArgs excelArgs = <span class=\"keyword\">new</span> ExcelArgs();</div><div class=\"line\">\t\texcelArgs.setSheets(sheetArgs);</div><div class=\"line\">\t\texcelArgs.setFileName(<span class=\"string\">\"excel表名\"</span>);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 导出</span></div><div class=\"line\">\t\t\tExcelUtil.exportExcel(excelArgs);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"效果图（为了截到完整的数据图，调过列宽）\"><a href=\"#效果图（为了截到完整的数据图，调过列宽）\" class=\"headerlink\" title=\"效果图（为了截到完整的数据图，调过列宽）\"></a>效果图（为了截到完整的数据图，调过列宽）</h5><p><img src=\"/image/POI导出excel表/excel导出效果图.jpg\" alt=\"\"></p>\n","excerpt":"","more":"<h5 id=\"列标题属性注解类\"><a href=\"#列标题属性注解类\" class=\"headerlink\" title=\"列标题属性注解类\"></a>列标题属性注解类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.ElementType;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Retention;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.RetentionPolicy;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Target;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.util.HSSFColor;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.CellStyle;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelAnnotation.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 列标题属性注解</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午4:13:54</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)  </div><div class=\"line\"><span class=\"meta\">@Target</span>(&#123;ElementType.FIELD&#125;)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> ExcelAnnotation &#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 列标题名</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">name</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> \"\"</span>;</div><div class=\"line\">\t<span class=\"comment\">// 行号</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">col</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 0</span>;</div><div class=\"line\">\t<span class=\"comment\">// 日期格式</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">dateFormat</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> \"\"</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/** 列标题样式 start */</span></div><div class=\"line\">\t<span class=\"comment\">// 水平对齐（默认居中）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">alignment</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> CellStyle.ALIGN_CENTER</span>;</div><div class=\"line\">\t<span class=\"comment\">// 垂直对齐（默认）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">verticalAlignment</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> CellStyle.VERTICAL_CENTER</span>;</div><div class=\"line\">\t<span class=\"comment\">// 填充信息模式和纯色填充单元（默认不填充）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">fillPattern</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> CellStyle.SOLID_FOREGROUND</span>;</div><div class=\"line\">\t<span class=\"comment\">// 背景色填充（默认白色）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">fillBackgroundColor</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> HSSFColor.GREY_40_PERCENT.index</span>;</div><div class=\"line\">\t<span class=\"comment\">// 字号（默认16）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">fontHeighInPoints</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 16</span>;</div><div class=\"line\">\t<span class=\"comment\">// 字体颜色（默认黑色）</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">short</span> <span class=\"title\">fontColor</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> HSSFColor.BLACK.index</span>;</div><div class=\"line\">\t<span class=\"comment\">/** 列标题样式 end */</span></div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"Excel表格属性类\"><a href=\"#Excel表格属性类\" class=\"headerlink\" title=\"Excel表格属性类\"></a>Excel表格属性类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.DateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelArgs.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: Excel表格属性</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午2:38:48</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelArgs</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 工作表</span></div><div class=\"line\">    <span class=\"keyword\">private</span> List&lt;SheetArgs&gt; sheets = <span class=\"keyword\">new</span> ArrayList&lt;SheetArgs&gt;();</div><div class=\"line\">    <span class=\"comment\">// 文件名</span></div><div class=\"line\">    <span class=\"keyword\">private</span> String fileName;</div><div class=\"line\">    <span class=\"comment\">// 文件保存路径</span></div><div class=\"line\">    <span class=\"keyword\">private</span> String filePath;</div><div class=\"line\">    <span class=\"comment\">// 完整路径+文件名</span></div><div class=\"line\">    <span class=\"keyword\">private</span> String excelName;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">    * <span class=\"doctag\">@Title</span>: init</div><div class=\"line\">    * <span class=\"doctag\">@Description</span>: 初始化excel</div><div class=\"line\">    * <span class=\"doctag\">@param</span>     </div><div class=\"line\">    * <span class=\"doctag\">@return</span> void    </div><div class=\"line\">    * <span class=\"doctag\">@throws</span></div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    \t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == fileName || <span class=\"string\">\"\"</span>.equals(fileName.trim())) &#123;</div><div class=\"line\">    \t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Excel 文件名不能为空！\"</span>);</div><div class=\"line\">    \t&#125;</div><div class=\"line\">    \tfileName = fileName.trim();</div><div class=\"line\">    \t<span class=\"keyword\">if</span> (!(fileName.endsWith(<span class=\"string\">\".xls\"</span>) || fileName.endsWith(<span class=\"string\">\".xlsx\"</span>))) &#123;</div><div class=\"line\">    \t\t<span class=\"comment\">// 设置默认文件后缀</span></div><div class=\"line\">    \t\tfileName = fileName + <span class=\"string\">\".xls\"</span>;</div><div class=\"line\">    \t&#125;</div><div class=\"line\">    \tDateFormat df = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyyMMddHHmmss\"</span>);</div><div class=\"line\">    \tfileName = df.format(<span class=\"keyword\">new</span> Date()) + <span class=\"string\">\"_\"</span> + fileName;</div><div class=\"line\">    \t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == filePath || <span class=\"string\">\"\"</span>.equals(filePath.trim())) &#123;</div><div class=\"line\">    \t\t<span class=\"comment\">// 设置默认文件生成路径（生成的文件在项目的tmp目录下）</span></div><div class=\"line\">    \t\tfilePath = <span class=\"string\">\"src/main/webapp/tmp\"</span>;</div><div class=\"line\">    \t&#125;</div><div class=\"line\">    \t<span class=\"keyword\">if</span> (!(filePath.endsWith(File.separator))) &#123;  </div><div class=\"line\">    \t\tfilePath += File.separator;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">      </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;SheetArgs&gt; <span class=\"title\">getSheets</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">return</span> sheets;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSheets</span><span class=\"params\">(SheetArgs sheet)</span></span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">if</span>(sheets==<span class=\"keyword\">null</span>)&#123;  </div><div class=\"line\">            sheets = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        sheets.add(sheet);  </div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getFileName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> fileName;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setFileName</span><span class=\"params\">(String fileName)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.fileName = fileName;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getFilePath</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> filePath;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setFilePath</span><span class=\"params\">(String filePath)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.filePath = filePath;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getExcelName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> filePath + fileName;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setExcelName</span><span class=\"params\">(String excelName)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.excelName = excelName;</div><div class=\"line\">    &#125;  </div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"Sheet表格属性类\"><a href=\"#Sheet表格属性类\" class=\"headerlink\" title=\"Sheet表格属性类\"></a>Sheet表格属性类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.util.HSSFColor;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.formula.functions.T;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.CellStyle;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.IndexedColors;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: SheetArgs.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: Sheet表格属性</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午2:36:25</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"hiding\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SheetArgs</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 工作表名</span></div><div class=\"line\">    <span class=\"keyword\">public</span> String sheetName;</div><div class=\"line\">    <span class=\"comment\">// 标题名</span></div><div class=\"line\">    <span class=\"keyword\">public</span> String titleName;</div><div class=\"line\">    <span class=\"comment\">// 注入类</span></div><div class=\"line\">    <span class=\"keyword\">public</span> Class&lt;?&gt; clazz;</div><div class=\"line\">    <span class=\"comment\">// 数据源</span></div><div class=\"line\">    <span class=\"keyword\">public</span> List&lt;T&gt; source;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/** 标题样式 start */</span></div><div class=\"line\">    <span class=\"comment\">// 标题从第几行开始（默认第一行）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> defaultRow = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">// 标题从第几行结束（默认第一行）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> endRow = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">// 标题从第几列开始（默认第一列）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> defaultCol = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">// 标题从第几列结束（默认第一列到最大列数 ）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> endCol = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"comment\">// 行高</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> heightInPoints = <span class=\"number\">40</span>;</div><div class=\"line\">    <span class=\"comment\">// 默认列宽（默认25）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> defaultColumnWidth = <span class=\"number\">20</span>;</div><div class=\"line\">    <span class=\"comment\">// 水平对齐（默认居中）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> alignment = CellStyle.ALIGN_CENTER;</div><div class=\"line\">    <span class=\"comment\">// 垂直对齐（默认）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> verticalAlignment = CellStyle.VERTICAL_CENTER;</div><div class=\"line\">    <span class=\"comment\">// 填充信息模式和纯色填充单元（默认全填充）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> fillPattern = CellStyle.SOLID_FOREGROUND;</div><div class=\"line\">    <span class=\"comment\">// 背景色填充（默认浅黄色）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> fillBackgroundColor = IndexedColors.LEMON_CHIFFON.index;</div><div class=\"line\">    <span class=\"comment\">// 字号（默认24）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> fontHeighInPoints = <span class=\"number\">24</span>;</div><div class=\"line\">    <span class=\"comment\">// 字体颜色（默认黑色）</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">short</span> fontColor = HSSFColor.BLACK.index;</div><div class=\"line\">    <span class=\"comment\">/** 标题样式  end*/</span></div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"报表导出数据属性类\"><a href=\"#报表导出数据属性类\" class=\"headerlink\" title=\"报表导出数据属性类\"></a>报表导出数据属性类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelExport.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 报表导出数据属性</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午2:24:51</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelExport</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">ExcelExport</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> String name;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> order;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">public</span> String dateFormat;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelExport</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> order, String dateFormat)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.order = order;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.dateFormat = dateFormat;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(ExcelExport o)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.order - o.getOrder();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> order;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"报表操作工具类\"><a href=\"#报表操作工具类\" class=\"headerlink\" title=\"报表操作工具类\"></a>报表操作工具类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.usermodel.HSSFFont;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.usermodel.HSSFWorkbook;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.hssf.util.HSSFColor;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.formula.functions.T;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Cell;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.CellStyle;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Font;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Row;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Sheet;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.util.CellRangeAddress;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelUtil.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 报表操作工具类</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午3:05:19</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelUtil</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SecurityException </div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> NoSuchFieldException </div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: exportExcel</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 导出报表</div><div class=\"line\">\t* <span class=\"doctag\">@param</span>     </div><div class=\"line\">\t* <span class=\"doctag\">@return</span> void    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">exportExcel</span><span class=\"params\">(ExcelArgs excelArgs)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 初始化存储路径</span></div><div class=\"line\">\t\texcelArgs.init();</div><div class=\"line\">\t\t<span class=\"comment\">// 声明一个工作薄  </span></div><div class=\"line\">        HSSFWorkbook workbook = <span class=\"keyword\">new</span> HSSFWorkbook();</div><div class=\"line\">        <span class=\"comment\">// 获取所有工作表</span></div><div class=\"line\">        List&lt;SheetArgs&gt; sheets = excelArgs.getSheets();</div><div class=\"line\">        <span class=\"comment\">// 遍历所有工作表</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (SheetArgs sheet : sheets) &#123;</div><div class=\"line\">        \tcreateSheet(workbook, sheet);</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"comment\">// 创建一个文件流 </span></div><div class=\"line\">\t\t<span class=\"keyword\">try</span>(FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(excelArgs.getExcelName());) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 把内容写入流  </span></div><div class=\"line\">\t\t\tworkbook.write(fos);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> excelArgs.getFileName();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SecurityException </div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> NoSuchFieldException </div><div class=\"line\">\t* <span class=\"doctag\">@Title</span>: createSheet</div><div class=\"line\">\t* <span class=\"doctag\">@Description</span>: 生成工作表</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> workbook</div><div class=\"line\">\t* <span class=\"doctag\">@param</span> <span class=\"doctag\">@param</span> sheet</div><div class=\"line\">\t* <span class=\"doctag\">@return</span> void    </div><div class=\"line\">\t* <span class=\"doctag\">@throws</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">createSheet</span><span class=\"params\">(HSSFWorkbook workbook, SheetArgs mySheet)</span> <span class=\"keyword\">throws</span> Exception, SecurityException </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 创建工作表</span></div><div class=\"line\">\t\tSheet sheet = workbook.createSheet(mySheet.sheetName);</div><div class=\"line\">\t\tsheet.setDefaultColumnWidth(mySheet.defaultColumnWidth);</div><div class=\"line\">\t\tRow row = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tCell cell = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> columnlength = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> rowNumber = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tList&lt;ExcelExport&gt; sourceList = <span class=\"keyword\">new</span> ArrayList&lt;ExcelExport&gt;();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// 获取所有的属性</span></div><div class=\"line\">\t\tField[] fields = mySheet.clazz.getDeclaredFields();</div><div class=\"line\">\t\t<span class=\"comment\">// 设置列标题行</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != fields &amp;&amp; fields.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\trow = sheet.createRow(mySheet.endRow + <span class=\"number\">1</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Field field : fields) &#123;</div><div class=\"line\">\t\t\t\tExcelAnnotation annotation = field.getAnnotation(ExcelAnnotation.class);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (annotation <span class=\"keyword\">instanceof</span> ExcelAnnotation) &#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 创建列</span></div><div class=\"line\">\t\t\t\t\tcell = row.createCell(mySheet.defaultCol + annotation.col());</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 设置列名样式 </span></div><div class=\"line\">\t\t\t\t\tCellStyle titleStyle = workbook.createCellStyle();</div><div class=\"line\">\t\t\t        titleStyle.setAlignment(annotation.alignment());  </div><div class=\"line\">\t\t\t        titleStyle.setVerticalAlignment(annotation.verticalAlignment());</div><div class=\"line\">\t\t\t        titleStyle.setFillForegroundColor(annotation.fillBackgroundColor());</div><div class=\"line\">\t\t\t        titleStyle.setFillPattern(annotation.fillPattern());</div><div class=\"line\">\t\t\t        Font font = workbook.createFont();</div><div class=\"line\">\t\t\t        font.setFontHeightInPoints(annotation.fontHeighInPoints());</div><div class=\"line\">\t\t\t        font.setColor(annotation.fontColor());</div><div class=\"line\">\t\t\t        font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</div><div class=\"line\">\t\t\t        titleStyle.setFont(font);</div><div class=\"line\">\t\t\t        cell.setCellStyle(titleStyle);</div><div class=\"line\">\t\t\t        cell.setCellValue(annotation.name());</div><div class=\"line\">\t\t\t        </div><div class=\"line\">\t\t\t        ExcelExport excelExport = <span class=\"keyword\">new</span> ExcelExport(field.getName(), annotation.col(), annotation.dateFormat());</div><div class=\"line\">\t\t\t        sourceList.add(excelExport);</div><div class=\"line\">\t\t\t        columnlength++;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 排序列</span></div><div class=\"line\">\t\tCollections.sort(sourceList);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// 设置总标题</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != mySheet.titleName &amp;&amp; !<span class=\"string\">\"\"</span>.equals(mySheet.titleName.trim()))&#123;</div><div class=\"line\">\t\t\trow = sheet.createRow(mySheet.defaultRow);</div><div class=\"line\">\t\t\tcell = row.createCell(mySheet.defaultCol);</div><div class=\"line\">            row.setHeightInPoints(mySheet.heightInPoints);  </div><div class=\"line\">            cell.setCellValue(mySheet.titleName);</div><div class=\"line\">            </div><div class=\"line\">            CellStyle titleStyle = workbook.createCellStyle();</div><div class=\"line\">\t        titleStyle.setAlignment(mySheet.alignment);  </div><div class=\"line\">\t        titleStyle.setVerticalAlignment(mySheet.verticalAlignment);  </div><div class=\"line\">\t        titleStyle.setFillForegroundColor(mySheet.fillBackgroundColor);  </div><div class=\"line\">\t        titleStyle.setFillPattern(mySheet.fillPattern);</div><div class=\"line\">\t        Font font = workbook.createFont();</div><div class=\"line\">\t        font.setFontHeightInPoints(mySheet.fontHeighInPoints);</div><div class=\"line\">\t        font.setColor(mySheet.fontColor);</div><div class=\"line\">\t        titleStyle.setFont(font);</div><div class=\"line\">            cell.setCellStyle(titleStyle);</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"comment\">// 合并单元格</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == mySheet.endCol &amp;&amp; columnlength &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            \tmySheet.endCol = mySheet.defaultCol + columnlength - <span class=\"number\">1</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            sheet.addMergedRegion(<span class=\"keyword\">new</span> CellRangeAddress(</div><div class=\"line\">            \t\tmySheet.defaultRow, </div><div class=\"line\">            \t\tmySheet.endRow, </div><div class=\"line\">            \t\tmySheet.defaultCol, </div><div class=\"line\">            \t\tmySheet.endCol));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// 设置数据</span></div><div class=\"line\">\t\tList&lt;T&gt; datas = mySheet.source;</div><div class=\"line\">\t\trowNumber = mySheet.endRow + <span class=\"number\">2</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != datas &amp;&amp; !datas.isEmpty() &amp;&amp; <span class=\"number\">0</span> &lt; datas.size()) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 这个放循环里面的话实例Excel超过4000行会报错</span></div><div class=\"line\">\t\t\tCellStyle cellStyle = workbook.createCellStyle();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Object data : datas) &#123;</div><div class=\"line\">\t\t\t\trow = sheet.createRow(rowNumber++);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; columnlength; i++) &#123;</div><div class=\"line\">\t\t\t\t\tExcelExport excelExport = sourceList.get(i);</div><div class=\"line\">\t\t\t\t\tcell = row.createCell(mySheet.defaultCol + i);</div><div class=\"line\">\t\t\t\t\tObject source = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t\t\tString value = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t\t\t</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 反射获取数据</span></div><div class=\"line\">\t\t\t\t\tField field = mySheet.clazz.getDeclaredField(excelExport.name);</div><div class=\"line\">\t\t\t\t\tfield.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">\t\t\t\t\tsource = field.get(data);</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 单元格样式</span></div><div class=\"line\">\t\t\t\t\tcellStyle.setAlignment(CellStyle.ALIGN_CENTER);</div><div class=\"line\">\t\t\t\t\tcellStyle.setVerticalAlignment(CellStyle.VERTICAL_CENTER);</div><div class=\"line\">\t\t\t        Font font = workbook.createFont();</div><div class=\"line\">\t\t\t        font.setFontHeightInPoints((<span class=\"keyword\">short</span>) <span class=\"number\">12</span>);</div><div class=\"line\">\t\t\t        font.setColor(HSSFColor.BLACK.index);</div><div class=\"line\">\t\t\t        cellStyle.setFont(font);</div><div class=\"line\">\t\t\t        cell.setCellStyle(cellStyle);</div><div class=\"line\">\t\t\t        </div><div class=\"line\">\t\t\t        value = <span class=\"keyword\">null</span> != source ? source.toString() : <span class=\"string\">\"\"</span>;</div><div class=\"line\">\t\t            <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != excelExport.dateFormat &amp;&amp; !<span class=\"string\">\"\"</span>.equals(excelExport.dateFormat)) &#123;</div><div class=\"line\">\t\t            \tvalue = <span class=\"keyword\">new</span> SimpleDateFormat(excelExport.dateFormat).format(source);</div><div class=\"line\">\t\t            \tsheet.setColumnWidth(mySheet.defaultCol + i, <span class=\"number\">36</span> * <span class=\"number\">256</span>);</div><div class=\"line\">\t\t            &#125;</div><div class=\"line\">\t\t\t\t\tcell.setCellValue(value);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"测试要导出的数据源类\"><a href=\"#测试要导出的数据源类\" class=\"headerlink\" title=\"测试要导出的数据源类\"></a>测试要导出的数据源类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelSource.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 报表数据源</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午2:33:36</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelSource</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单id\"</span>, col = <span class=\"number\">0</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> Long billingId;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单号\"</span>, col = <span class=\"number\">1</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String billingNum;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"店铺id\"</span>, col = <span class=\"number\">4</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Long storeId;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"店铺名\"</span>, col = <span class=\"number\">3</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String storeName;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"开户账号\"</span>, col = <span class=\"number\">5</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String bankAccount;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"开户用户账号\"</span>, col = <span class=\"number\">6</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String bankUsername;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"开户行\"</span>, col = <span class=\"number\">7</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String bankName;</div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单总金额\"</span>, col = <span class=\"number\">8</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> BigDecimal orderAmount;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"应付金额\"</span>, col = <span class=\"number\">9</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> BigDecimal handleMoney;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"实付金额\"</span>, col = <span class=\"number\">10</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> BigDecimal paidMoney;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单月\"</span>, col = <span class=\"number\">11</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> String billingMonth;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"账单状态\"</span>, col = <span class=\"number\">12</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Integer status;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"出账日期\"</span>, col = <span class=\"number\">13</span>, dateFormat = <span class=\"string\">\"yyyy年MM月dd日 HH时mm分ss秒\"</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Date issueDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"完成时间\"</span>, col = <span class=\"number\">15</span>, dateFormat = <span class=\"string\">\"yyyy年MM月dd日 HH时mm分ss秒\"</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Date completeDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"开始时间\"</span>, col = <span class=\"number\">14</span>, dateFormat = <span class=\"string\">\"yyyy年MM月dd日 HH时mm分ss秒\"</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Date startDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@ExcelAnnotation</span>(name = <span class=\"string\">\"结束时间\"</span>, col = <span class=\"number\">2</span>, dateFormat = <span class=\"string\">\"yyyy年MM月dd日 HH时mm分ss秒\"</span>)</div><div class=\"line\">    <span class=\"keyword\">private</span> Date endDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelSource</span><span class=\"params\">(Long billingId, String billingNum, Long storeId,</div><div class=\"line\">\t\t\tString storeName, String bankAccount, String bankUsername,</div><div class=\"line\">\t\t\tString bankName, BigDecimal orderAmount, BigDecimal handleMoney,</div><div class=\"line\">\t\t\tBigDecimal paidMoney, String billingMonth, Integer status,</div><div class=\"line\">\t\t\tDate issueDateTime, Date completeDateTime, Date startDateTime,</div><div class=\"line\">\t\t\tDate endDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingId = billingId;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingNum = billingNum;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.storeId = storeId;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.storeName = storeName;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankAccount = bankAccount;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankUsername = bankUsername;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankName = bankName;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.orderAmount = orderAmount;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.handleMoney = handleMoney;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.paidMoney = paidMoney;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingMonth = billingMonth;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.status = status;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.issueDateTime = issueDateTime;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.completeDateTime = completeDateTime;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.startDateTime = startDateTime;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.endDateTime = endDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Long <span class=\"title\">getBillingId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> billingId;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBillingId</span><span class=\"params\">(Long billingId)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingId = billingId;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBillingNum</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> billingNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBillingNum</span><span class=\"params\">(String billingNum)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingNum = billingNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Long <span class=\"title\">getStoreId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> storeId;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStoreId</span><span class=\"params\">(Long storeId)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.storeId = storeId;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getStoreName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> storeName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStoreName</span><span class=\"params\">(String storeName)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.storeName = storeName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBankAccount</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> bankAccount;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBankAccount</span><span class=\"params\">(String bankAccount)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankAccount = bankAccount;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBankUsername</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> bankUsername;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBankUsername</span><span class=\"params\">(String bankUsername)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankUsername = bankUsername;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBankName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> bankName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBankName</span><span class=\"params\">(String bankName)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.bankName = bankName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> BigDecimal <span class=\"title\">getOrderAmount</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> orderAmount;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOrderAmount</span><span class=\"params\">(BigDecimal orderAmount)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.orderAmount = orderAmount;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> BigDecimal <span class=\"title\">getHandleMoney</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> handleMoney;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHandleMoney</span><span class=\"params\">(BigDecimal handleMoney)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.handleMoney = handleMoney;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> BigDecimal <span class=\"title\">getPaidMoney</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> paidMoney;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPaidMoney</span><span class=\"params\">(BigDecimal paidMoney)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.paidMoney = paidMoney;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBillingMonth</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> billingMonth;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBillingMonth</span><span class=\"params\">(String billingMonth)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.billingMonth = billingMonth;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getStatus</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> status;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatus</span><span class=\"params\">(Integer status)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.status = status;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getIssueDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> issueDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setIssueDateTime</span><span class=\"params\">(Date issueDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.issueDateTime = issueDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getCompleteDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> completeDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setCompleteDateTime</span><span class=\"params\">(Date completeDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.completeDateTime = completeDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getStartDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> startDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStartDateTime</span><span class=\"params\">(Date startDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.startDateTime = startDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Date <span class=\"title\">getEndDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> endDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEndDateTime</span><span class=\"params\">(Date endDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.endDateTime = endDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"测试类\"><a href=\"#测试类\" class=\"headerlink\" title=\"测试类\"></a>测试类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> excel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: ExcelTest.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> excel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: TODO</div><div class=\"line\"> * <span class=\"doctag\">@author</span> Zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年12月30日 下午5:12:52</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelTest</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 数据源</span></div><div class=\"line\">\t\tExcelSource source1 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">10L</span>, <span class=\"string\">\"1\"</span>, <span class=\"number\">11L</span>, <span class=\"string\">\"01\"</span>, <span class=\"string\">\"31\"</span>, <span class=\"string\">\"21\"</span>, <span class=\"string\">\"41\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">51</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">61</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">1</span>), <span class=\"string\">\"201601\"</span>, <span class=\"number\">71</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source2 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">20L</span>, <span class=\"string\">\"2\"</span>, <span class=\"number\">22L</span>, <span class=\"string\">\"02\"</span>, <span class=\"string\">\"32\"</span>, <span class=\"string\">\"22\"</span>, <span class=\"string\">\"42\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">52</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">62</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">2</span>), <span class=\"string\">\"202602\"</span>, <span class=\"number\">72</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source3 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">30L</span>, <span class=\"string\">\"3\"</span>, <span class=\"number\">33L</span>, <span class=\"string\">\"03\"</span>, <span class=\"string\">\"33\"</span>, <span class=\"string\">\"23\"</span>, <span class=\"string\">\"43\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">53</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">63</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">3</span>), <span class=\"string\">\"203603\"</span>, <span class=\"number\">73</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source4 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">40L</span>, <span class=\"string\">\"4\"</span>, <span class=\"number\">44L</span>, <span class=\"string\">\"04\"</span>, <span class=\"string\">\"34\"</span>, <span class=\"string\">\"24\"</span>, <span class=\"string\">\"44\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">54</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">64</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">4</span>), <span class=\"string\">\"204604\"</span>, <span class=\"number\">74</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source5 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">50L</span>, <span class=\"string\">\"5\"</span>, <span class=\"number\">55L</span>, <span class=\"string\">\"05\"</span>, <span class=\"string\">\"35\"</span>, <span class=\"string\">\"25\"</span>, <span class=\"string\">\"45\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">55</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">65</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">5</span>), <span class=\"string\">\"205605\"</span>, <span class=\"number\">75</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tExcelSource source6 = <span class=\"keyword\">new</span> ExcelSource(<span class=\"number\">60L</span>, <span class=\"string\">\"6\"</span>, <span class=\"number\">66L</span>, <span class=\"string\">\"06\"</span>, <span class=\"string\">\"36\"</span>, <span class=\"string\">\"26\"</span>, <span class=\"string\">\"46\"</span>, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">56</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">66</span>), <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">6</span>), <span class=\"string\">\"206606\"</span>, <span class=\"number\">76</span>, <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date(), <span class=\"keyword\">new</span> Date());</div><div class=\"line\">\t\tList&lt;ExcelSource&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;ExcelSource&gt;();</div><div class=\"line\">\t\tlist.add(source1);</div><div class=\"line\">\t\tlist.add(source2);</div><div class=\"line\">\t\tlist.add(source3);</div><div class=\"line\">\t\tlist.add(source4);</div><div class=\"line\">\t\tlist.add(source5);</div><div class=\"line\">\t\tlist.add(source6);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// sheet表设置</span></div><div class=\"line\">\t\tSheetArgs&lt;ExcelSource&gt; sheetArgs = <span class=\"keyword\">new</span> SheetArgs&lt;ExcelSource&gt;();</div><div class=\"line\">\t\tsheetArgs.sheetName = <span class=\"string\">\"sheet表名\"</span>;</div><div class=\"line\">\t\tsheetArgs.titleName = <span class=\"string\">\"总标题名\"</span>;</div><div class=\"line\">\t\tsheetArgs.clazz = ExcelSource.class;</div><div class=\"line\">\t\tsheetArgs.source = list;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">// excel文件设置</span></div><div class=\"line\">\t\tExcelArgs excelArgs = <span class=\"keyword\">new</span> ExcelArgs();</div><div class=\"line\">\t\texcelArgs.setSheets(sheetArgs);</div><div class=\"line\">\t\texcelArgs.setFileName(<span class=\"string\">\"excel表名\"</span>);</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 导出</span></div><div class=\"line\">\t\t\tExcelUtil.exportExcel(excelArgs);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"效果图（为了截到完整的数据图，调过列宽）\"><a href=\"#效果图（为了截到完整的数据图，调过列宽）\" class=\"headerlink\" title=\"效果图（为了截到完整的数据图，调过列宽）\"></a>效果图（为了截到完整的数据图，调过列宽）</h5><p><img src=\"/image/POI导出excel表/excel导出效果图.jpg\" alt=\"\"></p>\n"},{"title":"Java自定义验证注解","date":"2016-08-21T08:21:16.000Z","_content":"**元注解：Java5定义了4个标准的meta-annotation类型**\n　**1、@Target：**表示Annotation所修饰的对象范围\n\t　取值(ElementType)有：\n　　　1）CONSTRUCTOR:用于描述构造器\n　　　2）FIELD:用于描述域\n　　　3）LOCAL_VARIABLE:用于描述局部变量\n　　　4）METHOD:用于描述方法\n　　　5）PACKAGE:用于描述包\n　　　6）PARAMETER:用于描述参数\n　　　7）TYPE:用于描述类、接口(包括注解类型) 或enum声明\n　**2、@Retention：**表示Annotation被保留的时间长短\n　\t　取值(RetentionPoicy)有：\n　　　1）SOURCE:在源文件中有效（即源文件保留）\n　　　2）CLASS:在class文件中有效（即class保留）\n　　　3）RUNTIME:在运行时有效（即运行时保留）\n　**3、@Documented：**用于描述其它类型的annotation应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。Documented是一个标记注解，没有成员\n　**4、@Inherited：**阐述了某个被标注的类型是被继承的。如果一个使用了@Inherited修饰的annotation类型被用于一个class，则这个annotation将被用于该class的子类\n\n**hibernate的@Valid注解为我们提供了很多的验证方式，但是并不能完全满足我们的需求**\n如下的一个bean，需要联合起来判断，上下午不能同时为空，当开始/结束时间不为空时，结束/开始时间也不能为空\n```Java\npackage com.sq580.mall.goods.web.vo;\n/**  \n * @Title: DayTime.java\n * @Package com.sq580.mall.goods.web.vo\n * @company：     社区580\n * @Description: TODO\n * @author zfs\n * @date 2016年11月5日 下午2:05:52\n * @version V1.0  \n */\n@DateTimeNotNull\npublic class DayTime {\n\n    private String morningStartDateTime;\n    \n    private String morningEndDateTime;\n    \n    private String afternoonStartDateTime;\n    \n    private String afternoonEndDateTime;\n\n\tpublic String getMorningStartDateTime() {\n\t\treturn morningStartDateTime;\n\t}\n\n\tpublic void setMorningStartDateTime(String morningStartDateTime) {\n\t\tthis.morningStartDateTime = morningStartDateTime;\n\t}\n\n\tpublic String getMorningEndDateTime() {\n\t\treturn morningEndDateTime;\n\t}\n\n\tpublic void setMorningEndDateTime(String morningEndDateTime) {\n\t\tthis.morningEndDateTime = morningEndDateTime;\n\t}\n\n\tpublic Integer getMorningNum() {\n\t\treturn morningNum;\n\t}\n\n\tpublic void setMorningNum(Integer morningNum) {\n\t\tthis.morningNum = morningNum;\n\t}\n\n\tpublic String getAfternoonStartDateTime() {\n\t\treturn afternoonStartDateTime;\n\t}\n\n\tpublic void setAfternoonStartDateTime(String afternoonStartDateTime) {\n\t\tthis.afternoonStartDateTime = afternoonStartDateTime;\n\t}\n\n\tpublic String getAfternoonEndDateTime() {\n\t\treturn afternoonEndDateTime;\n\t}\n\n\tpublic void setAfternoonEndDateTime(String afternoonEndDateTime) {\n\t\tthis.afternoonEndDateTime = afternoonEndDateTime;\n\t}\n\n\tpublic Integer getAfternoonNum() {\n\t\treturn afternoonNum;\n\t}\n\n\tpublic void setAfternoonNum(Integer afternoonNum) {\n\t\tthis.afternoonNum = afternoonNum;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"DayTime [morningStartDateTime=\" + morningStartDateTime\n\t\t\t\t+ \", morningEndDateTime=\" + morningEndDateTime\n\t\t\t\t+ \", morningNum=\" + morningNum + \", afternoonStartDateTime=\"\n\t\t\t\t+ afternoonStartDateTime + \", afternoonEndDateTime=\"\n\t\t\t\t+ afternoonEndDateTime + \", afternoonNum=\" + afternoonNum + \"]\";\n\t}\n\n}\n\n```\n定义一个验证接口（标准格式）\n```Java\npackage test;\n\nimport java.lang.annotation.Documented;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport javax.validation.Constraint;\nimport javax.validation.Payload;\n\nimport test.DayTimeValid;\n\n@Constraint(validatedBy = DayTimeValid.class)\n@Target( {\n\tjava.lang.annotation.ElementType.METHOD,    \n    java.lang.annotation.ElementType.FIELD,\n    java.lang.annotation.ElementType.TYPE\n} )\n@Retention(java.lang.annotation.RetentionPolicy.RUNTIME)    \n@Documented\npublic @interface DateTimeNotNull {\n\n\tString message() default \"{时间不能为空！}\";\n\t\n\tClass<?>[] groups() default {};\n\tClass<? extends Payload>[] payload() default {};\n\t\n}\n```\n验证类\n```Java\npackage test;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\n\nimport javax.validation.ConstraintValidator;\nimport javax.validation.ConstraintValidatorContext;\n\nimport test.DayTime;\nimport test.DateTimeNotNull;\n\npublic class DayTimeValid implements ConstraintValidator<DateTimeNotNull, DayTime> {\n\n\tprivate final static SimpleDateFormat sdf = new SimpleDateFormat(\"HH:mm\");\n\n\t@Override\n\tpublic void initialize(DayTimeVo obj) {\n\n\t}\n\n\t@Override\n\tpublic boolean isValid(DayTime daytime,\n\t\t\tConstraintValidatorContext constraintValidatorContext) {\n\t\tconstraintValidatorContext.disableDefaultConstraintViolation();\n\t\tif (daytime.getMorningStartDateTime() == null\n\t\t\t\t&& daytime.getMorningEndDateTime() == null\n\t\t\t\t&& daytime.getAfternoonStartDateTime() == null\n\t\t\t\t&& daytime.getAfternoonEndDateTime() == null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"服务时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getMorningStartDateTime() == null\n\t\t\t\t&& daytime.getMorningEndDateTime() != null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"上午开始时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getMorningStartDateTime() != null\n\t\t\t\t&& daytime.getMorningEndDateTime() == null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"上午结束时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getAfternoonStartDateTime() == null\n\t\t\t\t&& daytime.getAfternoonEndDateTime() != null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"下午开始时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getAfternoonStartDateTime() != null\n\t\t\t\t&& daytime.getAfternoonEndDateTime() == null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"下午结束时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getMorningStartDateTime() != null\n\t\t\t\t&& daytime.getMorningEndDateTime() != null) {\n\t\t\ttry {\n\t\t\t\tsdf.parse(daytime.getMorningStartDateTime());\n\t\t\t} catch (ParseException e) {\n\t\t\t\tconstraintValidatorContext\n\t\t\t\t\t\t.buildConstraintViolationWithTemplate(\"上午开始时间格式不正确！\")\n\t\t\t\t\t\t.addConstraintViolation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tsdf.parse(daytime.getMorningEndDateTime());\n\t\t\t} catch (ParseException e) {\n\t\t\t\tconstraintValidatorContext\n\t\t\t\t\t\t.buildConstraintViolationWithTemplate(\"上午结束时间格式不正确！\")\n\t\t\t\t\t\t.addConstraintViolation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (daytime.getAfternoonStartDateTime() != null\n\t\t\t\t&& daytime.getAfternoonEndDateTime() != null) {\n\t\t\ttry {\n\t\t\t\tsdf.parse(daytime.getAfternoonStartDateTime());\n\t\t\t} catch (ParseException e) {\n\t\t\t\tconstraintValidatorContext\n\t\t\t\t\t\t.buildConstraintViolationWithTemplate(\"下午开始时间格式不正确！\")\n\t\t\t\t\t\t.addConstraintViolation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tsdf.parse(daytime.getAfternoonEndDateTime());\n\t\t\t} catch (ParseException e) {\n\t\t\t\tconstraintValidatorContext\n\t\t\t\t\t\t.buildConstraintViolationWithTemplate(\"下午结束时间格式不正确！\")\n\t\t\t\t\t\t.addConstraintViolation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n}\n```","source":"_posts/Java自定义验证注解.md","raw":"---\ntitle: Java自定义验证注解\ndate: 2016-08-21 16:21:16\ncategories: [Java]\ntags: [Java]\n---\n**元注解：Java5定义了4个标准的meta-annotation类型**\n　**1、@Target：**表示Annotation所修饰的对象范围\n\t　取值(ElementType)有：\n　　　1）CONSTRUCTOR:用于描述构造器\n　　　2）FIELD:用于描述域\n　　　3）LOCAL_VARIABLE:用于描述局部变量\n　　　4）METHOD:用于描述方法\n　　　5）PACKAGE:用于描述包\n　　　6）PARAMETER:用于描述参数\n　　　7）TYPE:用于描述类、接口(包括注解类型) 或enum声明\n　**2、@Retention：**表示Annotation被保留的时间长短\n　\t　取值(RetentionPoicy)有：\n　　　1）SOURCE:在源文件中有效（即源文件保留）\n　　　2）CLASS:在class文件中有效（即class保留）\n　　　3）RUNTIME:在运行时有效（即运行时保留）\n　**3、@Documented：**用于描述其它类型的annotation应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。Documented是一个标记注解，没有成员\n　**4、@Inherited：**阐述了某个被标注的类型是被继承的。如果一个使用了@Inherited修饰的annotation类型被用于一个class，则这个annotation将被用于该class的子类\n\n**hibernate的@Valid注解为我们提供了很多的验证方式，但是并不能完全满足我们的需求**\n如下的一个bean，需要联合起来判断，上下午不能同时为空，当开始/结束时间不为空时，结束/开始时间也不能为空\n```Java\npackage com.sq580.mall.goods.web.vo;\n/**  \n * @Title: DayTime.java\n * @Package com.sq580.mall.goods.web.vo\n * @company：     社区580\n * @Description: TODO\n * @author zfs\n * @date 2016年11月5日 下午2:05:52\n * @version V1.0  \n */\n@DateTimeNotNull\npublic class DayTime {\n\n    private String morningStartDateTime;\n    \n    private String morningEndDateTime;\n    \n    private String afternoonStartDateTime;\n    \n    private String afternoonEndDateTime;\n\n\tpublic String getMorningStartDateTime() {\n\t\treturn morningStartDateTime;\n\t}\n\n\tpublic void setMorningStartDateTime(String morningStartDateTime) {\n\t\tthis.morningStartDateTime = morningStartDateTime;\n\t}\n\n\tpublic String getMorningEndDateTime() {\n\t\treturn morningEndDateTime;\n\t}\n\n\tpublic void setMorningEndDateTime(String morningEndDateTime) {\n\t\tthis.morningEndDateTime = morningEndDateTime;\n\t}\n\n\tpublic Integer getMorningNum() {\n\t\treturn morningNum;\n\t}\n\n\tpublic void setMorningNum(Integer morningNum) {\n\t\tthis.morningNum = morningNum;\n\t}\n\n\tpublic String getAfternoonStartDateTime() {\n\t\treturn afternoonStartDateTime;\n\t}\n\n\tpublic void setAfternoonStartDateTime(String afternoonStartDateTime) {\n\t\tthis.afternoonStartDateTime = afternoonStartDateTime;\n\t}\n\n\tpublic String getAfternoonEndDateTime() {\n\t\treturn afternoonEndDateTime;\n\t}\n\n\tpublic void setAfternoonEndDateTime(String afternoonEndDateTime) {\n\t\tthis.afternoonEndDateTime = afternoonEndDateTime;\n\t}\n\n\tpublic Integer getAfternoonNum() {\n\t\treturn afternoonNum;\n\t}\n\n\tpublic void setAfternoonNum(Integer afternoonNum) {\n\t\tthis.afternoonNum = afternoonNum;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"DayTime [morningStartDateTime=\" + morningStartDateTime\n\t\t\t\t+ \", morningEndDateTime=\" + morningEndDateTime\n\t\t\t\t+ \", morningNum=\" + morningNum + \", afternoonStartDateTime=\"\n\t\t\t\t+ afternoonStartDateTime + \", afternoonEndDateTime=\"\n\t\t\t\t+ afternoonEndDateTime + \", afternoonNum=\" + afternoonNum + \"]\";\n\t}\n\n}\n\n```\n定义一个验证接口（标准格式）\n```Java\npackage test;\n\nimport java.lang.annotation.Documented;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.Target;\n\nimport javax.validation.Constraint;\nimport javax.validation.Payload;\n\nimport test.DayTimeValid;\n\n@Constraint(validatedBy = DayTimeValid.class)\n@Target( {\n\tjava.lang.annotation.ElementType.METHOD,    \n    java.lang.annotation.ElementType.FIELD,\n    java.lang.annotation.ElementType.TYPE\n} )\n@Retention(java.lang.annotation.RetentionPolicy.RUNTIME)    \n@Documented\npublic @interface DateTimeNotNull {\n\n\tString message() default \"{时间不能为空！}\";\n\t\n\tClass<?>[] groups() default {};\n\tClass<? extends Payload>[] payload() default {};\n\t\n}\n```\n验证类\n```Java\npackage test;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\n\nimport javax.validation.ConstraintValidator;\nimport javax.validation.ConstraintValidatorContext;\n\nimport test.DayTime;\nimport test.DateTimeNotNull;\n\npublic class DayTimeValid implements ConstraintValidator<DateTimeNotNull, DayTime> {\n\n\tprivate final static SimpleDateFormat sdf = new SimpleDateFormat(\"HH:mm\");\n\n\t@Override\n\tpublic void initialize(DayTimeVo obj) {\n\n\t}\n\n\t@Override\n\tpublic boolean isValid(DayTime daytime,\n\t\t\tConstraintValidatorContext constraintValidatorContext) {\n\t\tconstraintValidatorContext.disableDefaultConstraintViolation();\n\t\tif (daytime.getMorningStartDateTime() == null\n\t\t\t\t&& daytime.getMorningEndDateTime() == null\n\t\t\t\t&& daytime.getAfternoonStartDateTime() == null\n\t\t\t\t&& daytime.getAfternoonEndDateTime() == null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"服务时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getMorningStartDateTime() == null\n\t\t\t\t&& daytime.getMorningEndDateTime() != null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"上午开始时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getMorningStartDateTime() != null\n\t\t\t\t&& daytime.getMorningEndDateTime() == null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"上午结束时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getAfternoonStartDateTime() == null\n\t\t\t\t&& daytime.getAfternoonEndDateTime() != null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"下午开始时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getAfternoonStartDateTime() != null\n\t\t\t\t&& daytime.getAfternoonEndDateTime() == null) {\n\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(\n\t\t\t\t\t\"下午结束时间不能为空！\").addConstraintViolation();\n\t\t\treturn false;\n\t\t} else if (daytime.getMorningStartDateTime() != null\n\t\t\t\t&& daytime.getMorningEndDateTime() != null) {\n\t\t\ttry {\n\t\t\t\tsdf.parse(daytime.getMorningStartDateTime());\n\t\t\t} catch (ParseException e) {\n\t\t\t\tconstraintValidatorContext\n\t\t\t\t\t\t.buildConstraintViolationWithTemplate(\"上午开始时间格式不正确！\")\n\t\t\t\t\t\t.addConstraintViolation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tsdf.parse(daytime.getMorningEndDateTime());\n\t\t\t} catch (ParseException e) {\n\t\t\t\tconstraintValidatorContext\n\t\t\t\t\t\t.buildConstraintViolationWithTemplate(\"上午结束时间格式不正确！\")\n\t\t\t\t\t\t.addConstraintViolation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (daytime.getAfternoonStartDateTime() != null\n\t\t\t\t&& daytime.getAfternoonEndDateTime() != null) {\n\t\t\ttry {\n\t\t\t\tsdf.parse(daytime.getAfternoonStartDateTime());\n\t\t\t} catch (ParseException e) {\n\t\t\t\tconstraintValidatorContext\n\t\t\t\t\t\t.buildConstraintViolationWithTemplate(\"下午开始时间格式不正确！\")\n\t\t\t\t\t\t.addConstraintViolation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tsdf.parse(daytime.getAfternoonEndDateTime());\n\t\t\t} catch (ParseException e) {\n\t\t\t\tconstraintValidatorContext\n\t\t\t\t\t\t.buildConstraintViolationWithTemplate(\"下午结束时间格式不正确！\")\n\t\t\t\t\t\t.addConstraintViolation();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n}\n```","slug":"Java自定义验证注解","published":1,"updated":"2017-01-16T08:59:43.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4b000qpo2y0m9f871r","content":"<p><strong>元注解：Java5定义了4个标准的meta-annotation类型</strong><br>　<strong>1、@Target：</strong>表示Annotation所修饰的对象范围<br>    　取值(ElementType)有：<br>　　　1）CONSTRUCTOR:用于描述构造器<br>　　　2）FIELD:用于描述域<br>　　　3）LOCAL_VARIABLE:用于描述局部变量<br>　　　4）METHOD:用于描述方法<br>　　　5）PACKAGE:用于描述包<br>　　　6）PARAMETER:用于描述参数<br>　　　7）TYPE:用于描述类、接口(包括注解类型) 或enum声明<br>　<strong>2、@Retention：</strong>表示Annotation被保留的时间长短<br>　    　取值(RetentionPoicy)有：<br>　　　1）SOURCE:在源文件中有效（即源文件保留）<br>　　　2）CLASS:在class文件中有效（即class保留）<br>　　　3）RUNTIME:在运行时有效（即运行时保留）<br>　<strong>3、@Documented：</strong>用于描述其它类型的annotation应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。Documented是一个标记注解，没有成员<br>　<strong>4、@Inherited：</strong>阐述了某个被标注的类型是被继承的。如果一个使用了@Inherited修饰的annotation类型被用于一个class，则这个annotation将被用于该class的子类</p>\n<p><strong>hibernate的@Valid注解为我们提供了很多的验证方式，但是并不能完全满足我们的需求</strong><br>如下的一个bean，需要联合起来判断，上下午不能同时为空，当开始/结束时间不为空时，结束/开始时间也不能为空<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.sq580.mall.goods.web.vo;</div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: DayTime.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> com.sq580.mall.goods.web.vo</div><div class=\"line\"> * <span class=\"doctag\">@company</span>：     社区580</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: TODO</div><div class=\"line\"> * <span class=\"doctag\">@author</span> zfs</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年11月5日 下午2:05:52</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@DateTimeNotNull</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DayTime</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> String morningStartDateTime;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">private</span> String morningEndDateTime;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">private</span> String afternoonStartDateTime;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">private</span> String afternoonEndDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMorningStartDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> morningStartDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMorningStartDateTime</span><span class=\"params\">(String morningStartDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.morningStartDateTime = morningStartDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMorningEndDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> morningEndDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMorningEndDateTime</span><span class=\"params\">(String morningEndDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.morningEndDateTime = morningEndDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getMorningNum</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> morningNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMorningNum</span><span class=\"params\">(Integer morningNum)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.morningNum = morningNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getAfternoonStartDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> afternoonStartDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAfternoonStartDateTime</span><span class=\"params\">(String afternoonStartDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.afternoonStartDateTime = afternoonStartDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getAfternoonEndDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> afternoonEndDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAfternoonEndDateTime</span><span class=\"params\">(String afternoonEndDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.afternoonEndDateTime = afternoonEndDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getAfternoonNum</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> afternoonNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAfternoonNum</span><span class=\"params\">(Integer afternoonNum)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.afternoonNum = afternoonNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"DayTime [morningStartDateTime=\"</span> + morningStartDateTime</div><div class=\"line\">\t\t\t\t+ <span class=\"string\">\", morningEndDateTime=\"</span> + morningEndDateTime</div><div class=\"line\">\t\t\t\t+ <span class=\"string\">\", morningNum=\"</span> + morningNum + <span class=\"string\">\", afternoonStartDateTime=\"</span></div><div class=\"line\">\t\t\t\t+ afternoonStartDateTime + <span class=\"string\">\", afternoonEndDateTime=\"</span></div><div class=\"line\">\t\t\t\t+ afternoonEndDateTime + <span class=\"string\">\", afternoonNum=\"</span> + afternoonNum + <span class=\"string\">\"]\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>定义一个验证接口（标准格式）<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">package test;</div><div class=\"line\"></div><div class=\"line\">import java.lang.annotation.Documented;</div><div class=\"line\">import java.lang.annotation.Retention;</div><div class=\"line\">import java.lang.annotation.Target;</div><div class=\"line\"></div><div class=\"line\">import javax.validation.Constraint;</div><div class=\"line\">import javax.validation.Payload;</div><div class=\"line\"></div><div class=\"line\">import test.DayTimeValid;</div><div class=\"line\"></div><div class=\"line\">@Constraint(validatedBy = DayTimeValid.class)</div><div class=\"line\">@Target( &#123;</div><div class=\"line\">\tjava.lang.annotation.ElementType.METHOD,    </div><div class=\"line\">    java.lang.annotation.ElementType.FIELD,</div><div class=\"line\">    java.lang.annotation.ElementType.TYPE</div><div class=\"line\">&#125; )</div><div class=\"line\">@Retention(java.lang.annotation.RetentionPolicy.RUNTIME)    </div><div class=\"line\">@Documented</div><div class=\"line\">public @interface DateTimeNotNull &#123;</div><div class=\"line\"></div><div class=\"line\">\tString message() default \"&#123;时间不能为空！&#125;\";</div><div class=\"line\">\t</div><div class=\"line\">\tClass&lt;?&gt;[] groups() default &#123;&#125;;</div><div class=\"line\">\tClass&lt;? extends Payload&gt;[] payload() default &#123;&#125;;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>验证类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.text.ParseException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.validation.ConstraintValidator;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.validation.ConstraintValidatorContext;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> test.DayTime;</div><div class=\"line\"><span class=\"keyword\">import</span> test.DateTimeNotNull;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DayTimeValid</span> <span class=\"keyword\">implements</span> <span class=\"title\">ConstraintValidator</span>&lt;<span class=\"title\">DateTimeNotNull</span>, <span class=\"title\">DayTime</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> SimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"HH:mm\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initialize</span><span class=\"params\">(DayTimeVo obj)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isValid</span><span class=\"params\">(DayTime daytime,</span></span></div><div class=\"line\">\t\t\tConstraintValidatorContext constraintValidatorContext) &#123;</div><div class=\"line\">\t\tconstraintValidatorContext.disableDefaultConstraintViolation();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (daytime.getMorningStartDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getMorningEndDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonStartDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonEndDateTime() == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"服务时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getMorningStartDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getMorningEndDateTime() != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"上午开始时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getMorningStartDateTime() != <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getMorningEndDateTime() == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"上午结束时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getAfternoonStartDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonEndDateTime() != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"下午开始时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getAfternoonStartDateTime() != <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonEndDateTime() == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"下午结束时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getMorningStartDateTime() != <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getMorningEndDateTime() != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tsdf.parse(daytime.getMorningStartDateTime());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\t\tconstraintValidatorContext</div><div class=\"line\">\t\t\t\t\t\t.buildConstraintViolationWithTemplate(<span class=\"string\">\"上午开始时间格式不正确！\"</span>)</div><div class=\"line\">\t\t\t\t\t\t.addConstraintViolation();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tsdf.parse(daytime.getMorningEndDateTime());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\t\tconstraintValidatorContext</div><div class=\"line\">\t\t\t\t\t\t.buildConstraintViolationWithTemplate(<span class=\"string\">\"上午结束时间格式不正确！\"</span>)</div><div class=\"line\">\t\t\t\t\t\t.addConstraintViolation();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getAfternoonStartDateTime() != <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonEndDateTime() != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tsdf.parse(daytime.getAfternoonStartDateTime());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\t\tconstraintValidatorContext</div><div class=\"line\">\t\t\t\t\t\t.buildConstraintViolationWithTemplate(<span class=\"string\">\"下午开始时间格式不正确！\"</span>)</div><div class=\"line\">\t\t\t\t\t\t.addConstraintViolation();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tsdf.parse(daytime.getAfternoonEndDateTime());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\t\tconstraintValidatorContext</div><div class=\"line\">\t\t\t\t\t\t.buildConstraintViolationWithTemplate(<span class=\"string\">\"下午结束时间格式不正确！\"</span>)</div><div class=\"line\">\t\t\t\t\t\t.addConstraintViolation();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p><strong>元注解：Java5定义了4个标准的meta-annotation类型</strong><br>　<strong>1、@Target：</strong>表示Annotation所修饰的对象范围<br>    　取值(ElementType)有：<br>　　　1）CONSTRUCTOR:用于描述构造器<br>　　　2）FIELD:用于描述域<br>　　　3）LOCAL_VARIABLE:用于描述局部变量<br>　　　4）METHOD:用于描述方法<br>　　　5）PACKAGE:用于描述包<br>　　　6）PARAMETER:用于描述参数<br>　　　7）TYPE:用于描述类、接口(包括注解类型) 或enum声明<br>　<strong>2、@Retention：</strong>表示Annotation被保留的时间长短<br>　    　取值(RetentionPoicy)有：<br>　　　1）SOURCE:在源文件中有效（即源文件保留）<br>　　　2）CLASS:在class文件中有效（即class保留）<br>　　　3）RUNTIME:在运行时有效（即运行时保留）<br>　<strong>3、@Documented：</strong>用于描述其它类型的annotation应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。Documented是一个标记注解，没有成员<br>　<strong>4、@Inherited：</strong>阐述了某个被标注的类型是被继承的。如果一个使用了@Inherited修饰的annotation类型被用于一个class，则这个annotation将被用于该class的子类</p>\n<p><strong>hibernate的@Valid注解为我们提供了很多的验证方式，但是并不能完全满足我们的需求</strong><br>如下的一个bean，需要联合起来判断，上下午不能同时为空，当开始/结束时间不为空时，结束/开始时间也不能为空<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.sq580.mall.goods.web.vo;</div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: DayTime.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> com.sq580.mall.goods.web.vo</div><div class=\"line\"> * <span class=\"doctag\">@company</span>：     社区580</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: TODO</div><div class=\"line\"> * <span class=\"doctag\">@author</span> zfs</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2016年11月5日 下午2:05:52</div><div class=\"line\"> * <span class=\"doctag\">@version</span> V1.0  </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@DateTimeNotNull</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DayTime</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> String morningStartDateTime;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">private</span> String morningEndDateTime;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">private</span> String afternoonStartDateTime;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">private</span> String afternoonEndDateTime;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMorningStartDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> morningStartDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMorningStartDateTime</span><span class=\"params\">(String morningStartDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.morningStartDateTime = morningStartDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMorningEndDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> morningEndDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMorningEndDateTime</span><span class=\"params\">(String morningEndDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.morningEndDateTime = morningEndDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getMorningNum</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> morningNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMorningNum</span><span class=\"params\">(Integer morningNum)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.morningNum = morningNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getAfternoonStartDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> afternoonStartDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAfternoonStartDateTime</span><span class=\"params\">(String afternoonStartDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.afternoonStartDateTime = afternoonStartDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getAfternoonEndDateTime</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> afternoonEndDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAfternoonEndDateTime</span><span class=\"params\">(String afternoonEndDateTime)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.afternoonEndDateTime = afternoonEndDateTime;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getAfternoonNum</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> afternoonNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAfternoonNum</span><span class=\"params\">(Integer afternoonNum)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.afternoonNum = afternoonNum;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"DayTime [morningStartDateTime=\"</span> + morningStartDateTime</div><div class=\"line\">\t\t\t\t+ <span class=\"string\">\", morningEndDateTime=\"</span> + morningEndDateTime</div><div class=\"line\">\t\t\t\t+ <span class=\"string\">\", morningNum=\"</span> + morningNum + <span class=\"string\">\", afternoonStartDateTime=\"</span></div><div class=\"line\">\t\t\t\t+ afternoonStartDateTime + <span class=\"string\">\", afternoonEndDateTime=\"</span></div><div class=\"line\">\t\t\t\t+ afternoonEndDateTime + <span class=\"string\">\", afternoonNum=\"</span> + afternoonNum + <span class=\"string\">\"]\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>定义一个验证接口（标准格式）<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">package test;</div><div class=\"line\"></div><div class=\"line\">import java.lang.annotation.Documented;</div><div class=\"line\">import java.lang.annotation.Retention;</div><div class=\"line\">import java.lang.annotation.Target;</div><div class=\"line\"></div><div class=\"line\">import javax.validation.Constraint;</div><div class=\"line\">import javax.validation.Payload;</div><div class=\"line\"></div><div class=\"line\">import test.DayTimeValid;</div><div class=\"line\"></div><div class=\"line\">@Constraint(validatedBy = DayTimeValid.class)</div><div class=\"line\">@Target( &#123;</div><div class=\"line\">\tjava.lang.annotation.ElementType.METHOD,    </div><div class=\"line\">    java.lang.annotation.ElementType.FIELD,</div><div class=\"line\">    java.lang.annotation.ElementType.TYPE</div><div class=\"line\">&#125; )</div><div class=\"line\">@Retention(java.lang.annotation.RetentionPolicy.RUNTIME)    </div><div class=\"line\">@Documented</div><div class=\"line\">public @interface DateTimeNotNull &#123;</div><div class=\"line\"></div><div class=\"line\">\tString message() default \"&#123;时间不能为空！&#125;\";</div><div class=\"line\">\t</div><div class=\"line\">\tClass&lt;?&gt;[] groups() default &#123;&#125;;</div><div class=\"line\">\tClass&lt;? extends Payload&gt;[] payload() default &#123;&#125;;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>验证类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.text.ParseException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.validation.ConstraintValidator;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.validation.ConstraintValidatorContext;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> test.DayTime;</div><div class=\"line\"><span class=\"keyword\">import</span> test.DateTimeNotNull;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DayTimeValid</span> <span class=\"keyword\">implements</span> <span class=\"title\">ConstraintValidator</span>&lt;<span class=\"title\">DateTimeNotNull</span>, <span class=\"title\">DayTime</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> SimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"HH:mm\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initialize</span><span class=\"params\">(DayTimeVo obj)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isValid</span><span class=\"params\">(DayTime daytime,</div><div class=\"line\">\t\t\tConstraintValidatorContext constraintValidatorContext)</span> </span>&#123;</div><div class=\"line\">\t\tconstraintValidatorContext.disableDefaultConstraintViolation();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (daytime.getMorningStartDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getMorningEndDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonStartDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonEndDateTime() == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"服务时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getMorningStartDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getMorningEndDateTime() != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"上午开始时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getMorningStartDateTime() != <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getMorningEndDateTime() == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"上午结束时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getAfternoonStartDateTime() == <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonEndDateTime() != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"下午开始时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getAfternoonStartDateTime() != <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonEndDateTime() == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\tconstraintValidatorContext.buildConstraintViolationWithTemplate(</div><div class=\"line\">\t\t\t\t\t<span class=\"string\">\"下午结束时间不能为空！\"</span>).addConstraintViolation();</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getMorningStartDateTime() != <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getMorningEndDateTime() != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tsdf.parse(daytime.getMorningStartDateTime());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\t\tconstraintValidatorContext</div><div class=\"line\">\t\t\t\t\t\t.buildConstraintViolationWithTemplate(<span class=\"string\">\"上午开始时间格式不正确！\"</span>)</div><div class=\"line\">\t\t\t\t\t\t.addConstraintViolation();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tsdf.parse(daytime.getMorningEndDateTime());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\t\tconstraintValidatorContext</div><div class=\"line\">\t\t\t\t\t\t.buildConstraintViolationWithTemplate(<span class=\"string\">\"上午结束时间格式不正确！\"</span>)</div><div class=\"line\">\t\t\t\t\t\t.addConstraintViolation();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (daytime.getAfternoonStartDateTime() != <span class=\"keyword\">null</span></div><div class=\"line\">\t\t\t\t&amp;&amp; daytime.getAfternoonEndDateTime() != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tsdf.parse(daytime.getAfternoonStartDateTime());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\t\tconstraintValidatorContext</div><div class=\"line\">\t\t\t\t\t\t.buildConstraintViolationWithTemplate(<span class=\"string\">\"下午开始时间格式不正确！\"</span>)</div><div class=\"line\">\t\t\t\t\t\t.addConstraintViolation();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tsdf.parse(daytime.getAfternoonEndDateTime());</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</div><div class=\"line\">\t\t\t\tconstraintValidatorContext</div><div class=\"line\">\t\t\t\t\t\t.buildConstraintViolationWithTemplate(<span class=\"string\">\"下午结束时间格式不正确！\"</span>)</div><div class=\"line\">\t\t\t\t\t\t.addConstraintViolation();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"Spring boot的入门使用","date":"2017-01-24T08:25:49.000Z","_content":"pom.xml的配置\n```XML\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>test</groupId>\n  <artifactId>test</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>war</packaging>\n\n  <name>test</name>\n  <url>http://maven.apache.org</url>\n  \n  \t<!-- 若已经有父项目依赖，则在父项目中添加如下代码 -->\n  \t<!-- <dependencyManagement>\n\t<dependencies>\n\t   <dependency>\n\t       Import dependency management from Spring Boot\n\t            <groupId>org.springframework.boot</groupId>\n\t            <artifactId>spring-boot-dependencies</artifactId>\n\t            <version>1.2.3.RELEASE</version>\n\t            <type>pom</type>\n\t            <scope>import</scope>\n\t        </dependency>\n\t    </dependencies>\n\t</dependencyManagement> -->\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>1.3.0.RELEASE</version>\n\t</parent>\n\n\t<properties>\n\t    <!-- 项目编码配置 start -->\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<!-- 项目编码配置 end -->\n\t\t\n\t\t<!-- 依赖的jar的版本号控制 start -->\n\t\t\n\t\t<!-- 依赖的jar的版本号控制 end -->\n\t</properties>\n\n\t<dependencies>\n  \n\t    <!-- 核心模块，包括自动配置支持、日志和YAML -->\n\t    <dependency>\n\t\t    <groupId>org.springframework.boot</groupId>\n\t\t    <artifactId>spring-boot-starter</artifactId>\n\t\t</dependency>\n\t\t\n\t    <!-- 测试模块，包括JUnit、Hamcrest、Mockito -->\n\t\t<dependency>\n\t\t    <groupId>org.springframework.boot</groupId>\n\t\t    <artifactId>spring-boot-starter-test</artifactId>\n\t\t    <scope>test</scope>\n\t\t</dependency>\n\t\t\n\t\t<!-- Web模块 -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n    \n\t</dependencies>\n  \n\t<build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.springframework</groupId>\n                        <artifactId>springloaded</artifactId>\n                        <version>1.2.5.RELEASE</version>\n                    </dependency>\n                </dependencies>\n                <configuration>\n                \t<!-- 热部署配置 -->\n\t\t            <jvmArguments>\n\t\t            \t-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\n\t\t            </jvmArguments>\n\t\t\t\t\t<!-- spring-boot 默认使用1.6，若使用其它版本，需要指定好相应版本 -->\n\t                <source>1.7</source>\n\t                <target>1.7</target>\n\t            </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n\n```\nmodel类\n```Java\npackage per.test.mdoel;\n\n/**\n * @Title: User.java\n * @Package per.test.mdoel\n * @Description: 用户实体类\n * @author zoro\n * @date 2017年1月22日 下午5:09:58\n */\npublic class User {\n\n\tprivate Long id;\n\n\tprivate String name;\n\n\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\tresult = prime * result + ((name == null) ? 0 : name.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tUser other = (User) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\tif (name == null) {\n\t\t\tif (other.name != null)\n\t\t\t\treturn false;\n\t\t} else if (!name.equals(other.name))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"User [id=\" + id + \", name=\" + name + \"]\";\n\t}\n\n}\n```\nController类\n```Java\npackage per.test.controller;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport per.test.mdoel.User;\n\n/**  \n * @Title: UserController.java\n * @Package per.test.controller\n * @Description: 用户请求控制类\n * @author zoro\n * @date 2017年1月22日 下午5:31:52\n * pre: \n * \t@Controller + @EnableAutoConfiguration = @RestController\n */\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\t\n\t@RequestMapping(\"/{id}\")\n\tpublic User view(@PathVariable(\"id\") Long id) {\n\t\tUser user = new User();\n        user.setId(id);\n        user.setName(\"zhang\");\n        return user;\n\t}\n\t\n}\n```\n运行\n```Java\npackage per.test;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n/**  \n * @Title: UserController.java\n * @Package per.test.controller\n * @Description: 用户请求控制类\n * @author zoro\n * @date 2017年1月22日 下午5:33:01\n * pre: \n * \t@SpringBootApplication继承了 @Configuration、 @EnableAutoConfiguration、 @ComponentScan\n */\n@SpringBootApplication\npublic class AppTest {\n\t\n    public static void main(String[] args) {\n    \tSpringApplication.run(AppTest.class);\n\t}\n    \n}\n```","source":"_posts/Spring boot的入门使用.md","raw":"---\ntitle: Spring boot的入门使用\ndate: 2017-01-24 16:25:49\ncategories: [Java]\ntags: [Java,Srping boot]\n---\npom.xml的配置\n```XML\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>test</groupId>\n  <artifactId>test</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>war</packaging>\n\n  <name>test</name>\n  <url>http://maven.apache.org</url>\n  \n  \t<!-- 若已经有父项目依赖，则在父项目中添加如下代码 -->\n  \t<!-- <dependencyManagement>\n\t<dependencies>\n\t   <dependency>\n\t       Import dependency management from Spring Boot\n\t            <groupId>org.springframework.boot</groupId>\n\t            <artifactId>spring-boot-dependencies</artifactId>\n\t            <version>1.2.3.RELEASE</version>\n\t            <type>pom</type>\n\t            <scope>import</scope>\n\t        </dependency>\n\t    </dependencies>\n\t</dependencyManagement> -->\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>1.3.0.RELEASE</version>\n\t</parent>\n\n\t<properties>\n\t    <!-- 项目编码配置 start -->\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<!-- 项目编码配置 end -->\n\t\t\n\t\t<!-- 依赖的jar的版本号控制 start -->\n\t\t\n\t\t<!-- 依赖的jar的版本号控制 end -->\n\t</properties>\n\n\t<dependencies>\n  \n\t    <!-- 核心模块，包括自动配置支持、日志和YAML -->\n\t    <dependency>\n\t\t    <groupId>org.springframework.boot</groupId>\n\t\t    <artifactId>spring-boot-starter</artifactId>\n\t\t</dependency>\n\t\t\n\t    <!-- 测试模块，包括JUnit、Hamcrest、Mockito -->\n\t\t<dependency>\n\t\t    <groupId>org.springframework.boot</groupId>\n\t\t    <artifactId>spring-boot-starter-test</artifactId>\n\t\t    <scope>test</scope>\n\t\t</dependency>\n\t\t\n\t\t<!-- Web模块 -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n    \n\t</dependencies>\n  \n\t<build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.springframework</groupId>\n                        <artifactId>springloaded</artifactId>\n                        <version>1.2.5.RELEASE</version>\n                    </dependency>\n                </dependencies>\n                <configuration>\n                \t<!-- 热部署配置 -->\n\t\t            <jvmArguments>\n\t\t            \t-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\n\t\t            </jvmArguments>\n\t\t\t\t\t<!-- spring-boot 默认使用1.6，若使用其它版本，需要指定好相应版本 -->\n\t                <source>1.7</source>\n\t                <target>1.7</target>\n\t            </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n\n```\nmodel类\n```Java\npackage per.test.mdoel;\n\n/**\n * @Title: User.java\n * @Package per.test.mdoel\n * @Description: 用户实体类\n * @author zoro\n * @date 2017年1月22日 下午5:09:58\n */\npublic class User {\n\n\tprivate Long id;\n\n\tprivate String name;\n\n\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\tresult = prime * result + ((name == null) ? 0 : name.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tUser other = (User) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\tif (name == null) {\n\t\t\tif (other.name != null)\n\t\t\t\treturn false;\n\t\t} else if (!name.equals(other.name))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"User [id=\" + id + \", name=\" + name + \"]\";\n\t}\n\n}\n```\nController类\n```Java\npackage per.test.controller;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport per.test.mdoel.User;\n\n/**  \n * @Title: UserController.java\n * @Package per.test.controller\n * @Description: 用户请求控制类\n * @author zoro\n * @date 2017年1月22日 下午5:31:52\n * pre: \n * \t@Controller + @EnableAutoConfiguration = @RestController\n */\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\t\n\t@RequestMapping(\"/{id}\")\n\tpublic User view(@PathVariable(\"id\") Long id) {\n\t\tUser user = new User();\n        user.setId(id);\n        user.setName(\"zhang\");\n        return user;\n\t}\n\t\n}\n```\n运行\n```Java\npackage per.test;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n/**  \n * @Title: UserController.java\n * @Package per.test.controller\n * @Description: 用户请求控制类\n * @author zoro\n * @date 2017年1月22日 下午5:33:01\n * pre: \n * \t@SpringBootApplication继承了 @Configuration、 @EnableAutoConfiguration、 @ComponentScan\n */\n@SpringBootApplication\npublic class AppTest {\n\t\n    public static void main(String[] args) {\n    \tSpringApplication.run(AppTest.class);\n\t}\n    \n}\n```","slug":"Spring boot的入门使用","published":1,"updated":"2017-01-24T08:35:11.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4e000vpo2yamsz7bxg","content":"<p>pom.xml的配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></div><div class=\"line\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.apache.org<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  \t<span class=\"comment\">&lt;!-- 若已经有父项目依赖，则在父项目中添加如下代码 --&gt;</span></div><div class=\"line\">  \t<span class=\"comment\">&lt;!-- &lt;dependencyManagement&gt;</span></div><div class=\"line\">\t&lt;dependencies&gt;</div><div class=\"line\">\t   &lt;dependency&gt;</div><div class=\"line\">\t       Import dependency management from Spring Boot</div><div class=\"line\">\t            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">\t            &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;</div><div class=\"line\">\t            &lt;version&gt;1.2.3.RELEASE&lt;/version&gt;</div><div class=\"line\">\t            &lt;type&gt;pom&lt;/type&gt;</div><div class=\"line\">\t            &lt;scope&gt;import&lt;/scope&gt;</div><div class=\"line\">\t        &lt;/dependency&gt;</div><div class=\"line\">\t    &lt;/dependencies&gt;</div><div class=\"line\">\t&lt;/dependencyManagement&gt; --&gt;</div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.0.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">\t    <span class=\"comment\">&lt;!-- 项目编码配置 start --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 项目编码配置 end --&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 依赖的jar的版本号控制 start --&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 依赖的jar的版本号控制 end --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">\t    <span class=\"comment\">&lt;!-- 核心模块，包括自动配置支持、日志和YAML --&gt;</span></div><div class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t    <span class=\"comment\">&lt;!-- 测试模块，包括JUnit、Hamcrest、Mockito --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- Web模块 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springloaded<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">                \t<span class=\"comment\">&lt;!-- 热部署配置 --&gt;</span></div><div class=\"line\">\t\t            <span class=\"tag\">&lt;<span class=\"name\">jvmArguments</span>&gt;</span></div><div class=\"line\">\t\t            \t-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005</div><div class=\"line\">\t\t            <span class=\"tag\">&lt;/<span class=\"name\">jvmArguments</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">&lt;!-- spring-boot 默认使用1.6，若使用其它版本，需要指定好相应版本 --&gt;</span></div><div class=\"line\">\t                <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></div><div class=\"line\">\t                <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></div><div class=\"line\">\t            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>model类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> per.test.mdoel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: User.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> per.test.mdoel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 用户实体类</div><div class=\"line\"> * <span class=\"doctag\">@author</span> zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2017年1月22日 下午5:09:58</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> Long id;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> String name;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Long <span class=\"title\">getId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(Long id)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> name;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> prime = <span class=\"number\">31</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> result = <span class=\"number\">1</span>;</div><div class=\"line\">\t\tresult = prime * result + ((id == <span class=\"keyword\">null</span>) ? <span class=\"number\">0</span> : id.hashCode());</div><div class=\"line\">\t\tresult = prime * result + ((name == <span class=\"keyword\">null</span>) ? <span class=\"number\">0</span> : name.hashCode());</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object obj)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == obj)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (obj == <span class=\"keyword\">null</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (getClass() != obj.getClass())</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tUser other = (User) obj;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (id == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (other.id != <span class=\"keyword\">null</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!id.equals(other.id))</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (name == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (other.name != <span class=\"keyword\">null</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!name.equals(other.name))</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"User [id=\"</span> + id + <span class=\"string\">\", name=\"</span> + name + <span class=\"string\">\"]\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Controller类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> per.test.controller;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> per.test.mdoel.User;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: UserController.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> per.test.controller</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 用户请求控制类</div><div class=\"line\"> * <span class=\"doctag\">@author</span> zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2017年1月22日 下午5:31:52</div><div class=\"line\"> * pre: </div><div class=\"line\"> * \t<span class=\"doctag\">@Controller</span> + <span class=\"doctag\">@EnableAutoConfiguration</span> = <span class=\"doctag\">@RestController</span></div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@RestController</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/&#123;id&#125;\"</span>)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">view</span><span class=\"params\">(@PathVariable(<span class=\"string\">\"id\"</span>)</span> Long id) </span>&#123;</div><div class=\"line\">\t\tUser user = <span class=\"keyword\">new</span> User();</div><div class=\"line\">        user.setId(id);</div><div class=\"line\">        user.setName(<span class=\"string\">\"zhang\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> user;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>运行<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> per.test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </span></div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: UserController.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> per.test.controller</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 用户请求控制类</div><div class=\"line\"> * <span class=\"doctag\">@author</span> zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2017年1月22日 下午5:33:01</div><div class=\"line\"> * pre: </div><div class=\"line\"> * \t<span class=\"doctag\">@SpringBootApplication</span>继承了 <span class=\"doctag\">@Configuration</span>、 <span class=\"doctag\">@EnableAutoConfiguration</span>、 <span class=\"doctag\">@ComponentScan</span></div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@SpringBootApplication</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppTest</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    \tSpringApplication.run(AppTest.class);</div><div class=\"line\">\t&#125;</div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>pom.xml的配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.apache.org<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  \t<span class=\"comment\">&lt;!-- 若已经有父项目依赖，则在父项目中添加如下代码 --&gt;</span></div><div class=\"line\">  \t<span class=\"comment\">&lt;!-- &lt;dependencyManagement&gt;</div><div class=\"line\">\t&lt;dependencies&gt;</div><div class=\"line\">\t   &lt;dependency&gt;</div><div class=\"line\">\t       Import dependency management from Spring Boot</div><div class=\"line\">\t            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">\t            &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;</div><div class=\"line\">\t            &lt;version&gt;1.2.3.RELEASE&lt;/version&gt;</div><div class=\"line\">\t            &lt;type&gt;pom&lt;/type&gt;</div><div class=\"line\">\t            &lt;scope&gt;import&lt;/scope&gt;</div><div class=\"line\">\t        &lt;/dependency&gt;</div><div class=\"line\">\t    &lt;/dependencies&gt;</div><div class=\"line\">\t&lt;/dependencyManagement&gt; --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.0.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">\t    <span class=\"comment\">&lt;!-- 项目编码配置 start --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 项目编码配置 end --&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 依赖的jar的版本号控制 start --&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 依赖的jar的版本号控制 end --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">\t    <span class=\"comment\">&lt;!-- 核心模块，包括自动配置支持、日志和YAML --&gt;</span></div><div class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t    <span class=\"comment\">&lt;!-- 测试模块，包括JUnit、Hamcrest、Mockito --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- Web模块 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">    </div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springloaded<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">                \t<span class=\"comment\">&lt;!-- 热部署配置 --&gt;</span></div><div class=\"line\">\t\t            <span class=\"tag\">&lt;<span class=\"name\">jvmArguments</span>&gt;</span></div><div class=\"line\">\t\t            \t-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005</div><div class=\"line\">\t\t            <span class=\"tag\">&lt;/<span class=\"name\">jvmArguments</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">&lt;!-- spring-boot 默认使用1.6，若使用其它版本，需要指定好相应版本 --&gt;</span></div><div class=\"line\">\t                <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></div><div class=\"line\">\t                <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></div><div class=\"line\">\t            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>model类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> per.test.mdoel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: User.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> per.test.mdoel</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 用户实体类</div><div class=\"line\"> * <span class=\"doctag\">@author</span> zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2017年1月22日 下午5:09:58</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> Long id;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> String name;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Long <span class=\"title\">getId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(Long id)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> name;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> prime = <span class=\"number\">31</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> result = <span class=\"number\">1</span>;</div><div class=\"line\">\t\tresult = prime * result + ((id == <span class=\"keyword\">null</span>) ? <span class=\"number\">0</span> : id.hashCode());</div><div class=\"line\">\t\tresult = prime * result + ((name == <span class=\"keyword\">null</span>) ? <span class=\"number\">0</span> : name.hashCode());</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object obj)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == obj)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (obj == <span class=\"keyword\">null</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (getClass() != obj.getClass())</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\tUser other = (User) obj;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (id == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (other.id != <span class=\"keyword\">null</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!id.equals(other.id))</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (name == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (other.name != <span class=\"keyword\">null</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!name.equals(other.name))</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"User [id=\"</span> + id + <span class=\"string\">\", name=\"</span> + name + <span class=\"string\">\"]\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Controller类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> per.test.controller;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> per.test.mdoel.User;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: UserController.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> per.test.controller</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 用户请求控制类</div><div class=\"line\"> * <span class=\"doctag\">@author</span> zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2017年1月22日 下午5:31:52</div><div class=\"line\"> * pre: </div><div class=\"line\"> * \t<span class=\"doctag\">@Controller</span> + <span class=\"doctag\">@EnableAutoConfiguration</span> = <span class=\"doctag\">@RestController</span></div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@RestController</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/&#123;id&#125;\"</span>)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">view</span><span class=\"params\">(@PathVariable(<span class=\"string\">\"id\"</span>)</span> Long id) </span>&#123;</div><div class=\"line\">\t\tUser user = <span class=\"keyword\">new</span> User();</div><div class=\"line\">        user.setId(id);</div><div class=\"line\">        user.setName(<span class=\"string\">\"zhang\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> user;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>运行<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> per.test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**  </div><div class=\"line\"> * <span class=\"doctag\">@Title</span>: UserController.java</div><div class=\"line\"> * <span class=\"doctag\">@Package</span> per.test.controller</div><div class=\"line\"> * <span class=\"doctag\">@Description</span>: 用户请求控制类</div><div class=\"line\"> * <span class=\"doctag\">@author</span> zoro</div><div class=\"line\"> * <span class=\"doctag\">@date</span> 2017年1月22日 下午5:33:01</div><div class=\"line\"> * pre: </div><div class=\"line\"> * \t<span class=\"doctag\">@SpringBootApplication</span>继承了 <span class=\"doctag\">@Configuration</span>、 <span class=\"doctag\">@EnableAutoConfiguration</span>、 <span class=\"doctag\">@ComponentScan</span></div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@SpringBootApplication</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppTest</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    \tSpringApplication.run(AppTest.class);</div><div class=\"line\">\t&#125;</div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"SpringMvc接收参数","date":"2016-07-17T06:27:48.000Z","_content":"#### SpringMvc接收对象的方式\n##### 1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application/json之类的类型就没有用了，需要读取request的流再解析出参数\nrequest.getParameter(name);\n　\n##### 2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数\n**1）@PathVariable **\n当使用@RequestMapping URI template 样式映射时， 即 someUrl/{paramId}, 这时的paramId可通过 @Pathvariable注解绑定它传过来的值到方法的参数上。\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user/{operation}\")\npublic class UserController {\n  \n\t@RequestMapping(\"/{userId}\")\n\tpublic void findPet(@PathVariable String operation, @PathVariable String userId, Model model) {\n\t  // TODO \n\t}\n}\n```\n**2）@RequestHeader **\n@RequestHeader 注解，可以把Request请求header部分的值绑定到方法的参数上。\n常见的header：\n```Plain\nAccept:\t\t\t\t\timage/webp,image/*,*/*;q=0.8\nAccept-Encoding:\t\tgzip, deflate, sdch\nAccept-Language:\t\tzh-CN,zh;q=0.8\nHost:\t\t\t\t\tlocalhost:8080\nAccept-Charset          ISO-8859-1,utf-8;q=0.7,*;q=0.7\nKeep-Alive              300\n```\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/getlist\")  \n\tpublic void findPet(\n\t\t@RequestHeader(\"Accept-Encoding\") String encoding, \n\t\t@RequestHeader(\"Keep-Alive\") long keepAlive) {\n\t  // TODO \n\t}\n}\n```\n**3）@CookieValue **\n@CookieValue 可以把Request header中关于cookie的值绑定到方法的参数上。\n例如有如下Cookie值：\n```Plain\nJSESSIONID=070c17a0028d1dcc66eba40e7781d177\n```\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\")  \n\tpublic void findPet(@CookieValue(\"JSESSIONID\") String cookie) {\n\t  // TODO \n\t}\n}\n```\n**4）@RequestParam**\n@RequestParam等同于request.getParameter();\n@RequestParam用来处理Content-Type: 为 application/x-www-form-urlencoded编码的内容，提交方式为GET、POST；\n@RequestParam有两个属性：\n　value：用来指定要传入值的name\n　required：用来指定参数是否必须\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\", method = RequestMethod.GET)\n\tpublic void findPet(@RequestParam(\"userId\") String userId) {\n\t  // TODO \n\t}\n}\n```\n**5）@RequestBody**\n像ajax原生的请求就是application/json类型，此时用@RequestBody就十分合适\n@RequestBody常用来处理Content-Type: 不是application/x-www-form-urlencoded编码的内容，例如application/json, application/xml等；\n**但是注意springmvc4.2版本才能直接转对象，4.2之前只能接收String**\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t// 4.2之前接收String\n\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\tpublic void findPet(@RequestBody String body) {\n\t\tUser user = (User) JSON.parse(body);\n\t}\n\t\n\t// 4.2之后接收bean\n\t\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\t\tpublic void findPet(@RequestBody User user) {\n\t\t\treturn user.getName(); \n\t\t}\n\t}\n```\n**6）@SessionAttributes**\n@SessionAttribute用来绑定HttpSession中的attribute对象的值，便于在方法中的参数里使用。\n示例代码：\n```Java\n@Controller  \n@RequestMapping(\"/user\")\n@SessionAttributes(\"userId\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\tpublic void findPet() {\n\t  // TODO \n\t}\n}\n```\n**7）@ModelAttribute**\n@ModelAttribute可以用在方法上也可以用在参数上，@ModelAttribute只能获取键值对，即接收的Content-Type是from-data或者application/x-www-form等类型\n首先是用在方法上时，相当于为request对象的model里put(\"account\", Account);\n如此在使用@RequestParam时就不需要带上参数名了\n示例代码：\n```Java\n@Controller  \n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\t@ModelAttribute\n\tpublic void findPet(@RequestParam String userId) {\n\t  return accountManager.findAccount(userId);\n\t}\n}\n```\n如果是在参数上时，一般来说，我们需要的是request中的参数，所以这里说明一下，@ModelAttribute绑定参数的来源\n　A） 首先是 @SessionAttributes 上绑定的attribute 对象\n　B） 没有就查询@ModelAttribute 用于方法上时指定的model对象\n　C） 当两种情况都没有时，new一个需要绑定的bean对象，然后把request中按名称对应的方式把值绑定到bean中。\n示例代码：\n```Java\n@Controller  \n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\tpublic void findPet(@ModelAttribute User user) {\n\t  // TODO \n\t}\n}\n```","source":"_posts/SpringMvc接收参数.md","raw":"---\ntitle: SpringMvc接收参数\ndate: 2016-07-17 14:27:48\ncategories: [Java]\ntags: [Java,SpringMvc]\n---\n#### SpringMvc接收对象的方式\n##### 1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application/json之类的类型就没有用了，需要读取request的流再解析出参数\nrequest.getParameter(name);\n　\n##### 2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数\n**1）@PathVariable **\n当使用@RequestMapping URI template 样式映射时， 即 someUrl/{paramId}, 这时的paramId可通过 @Pathvariable注解绑定它传过来的值到方法的参数上。\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user/{operation}\")\npublic class UserController {\n  \n\t@RequestMapping(\"/{userId}\")\n\tpublic void findPet(@PathVariable String operation, @PathVariable String userId, Model model) {\n\t  // TODO \n\t}\n}\n```\n**2）@RequestHeader **\n@RequestHeader 注解，可以把Request请求header部分的值绑定到方法的参数上。\n常见的header：\n```Plain\nAccept:\t\t\t\t\timage/webp,image/*,*/*;q=0.8\nAccept-Encoding:\t\tgzip, deflate, sdch\nAccept-Language:\t\tzh-CN,zh;q=0.8\nHost:\t\t\t\t\tlocalhost:8080\nAccept-Charset          ISO-8859-1,utf-8;q=0.7,*;q=0.7\nKeep-Alive              300\n```\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/getlist\")  \n\tpublic void findPet(\n\t\t@RequestHeader(\"Accept-Encoding\") String encoding, \n\t\t@RequestHeader(\"Keep-Alive\") long keepAlive) {\n\t  // TODO \n\t}\n}\n```\n**3）@CookieValue **\n@CookieValue 可以把Request header中关于cookie的值绑定到方法的参数上。\n例如有如下Cookie值：\n```Plain\nJSESSIONID=070c17a0028d1dcc66eba40e7781d177\n```\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\")  \n\tpublic void findPet(@CookieValue(\"JSESSIONID\") String cookie) {\n\t  // TODO \n\t}\n}\n```\n**4）@RequestParam**\n@RequestParam等同于request.getParameter();\n@RequestParam用来处理Content-Type: 为 application/x-www-form-urlencoded编码的内容，提交方式为GET、POST；\n@RequestParam有两个属性：\n　value：用来指定要传入值的name\n　required：用来指定参数是否必须\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\", method = RequestMethod.GET)\n\tpublic void findPet(@RequestParam(\"userId\") String userId) {\n\t  // TODO \n\t}\n}\n```\n**5）@RequestBody**\n像ajax原生的请求就是application/json类型，此时用@RequestBody就十分合适\n@RequestBody常用来处理Content-Type: 不是application/x-www-form-urlencoded编码的内容，例如application/json, application/xml等；\n**但是注意springmvc4.2版本才能直接转对象，4.2之前只能接收String**\n示例代码：\n```Java\n@Controller\n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t// 4.2之前接收String\n\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\tpublic void findPet(@RequestBody String body) {\n\t\tUser user = (User) JSON.parse(body);\n\t}\n\t\n\t// 4.2之后接收bean\n\t\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\t\tpublic void findPet(@RequestBody User user) {\n\t\t\treturn user.getName(); \n\t\t}\n\t}\n```\n**6）@SessionAttributes**\n@SessionAttribute用来绑定HttpSession中的attribute对象的值，便于在方法中的参数里使用。\n示例代码：\n```Java\n@Controller  \n@RequestMapping(\"/user\")\n@SessionAttributes(\"userId\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\tpublic void findPet() {\n\t  // TODO \n\t}\n}\n```\n**7）@ModelAttribute**\n@ModelAttribute可以用在方法上也可以用在参数上，@ModelAttribute只能获取键值对，即接收的Content-Type是from-data或者application/x-www-form等类型\n首先是用在方法上时，相当于为request对象的model里put(\"account\", Account);\n如此在使用@RequestParam时就不需要带上参数名了\n示例代码：\n```Java\n@Controller  \n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\t@ModelAttribute\n\tpublic void findPet(@RequestParam String userId) {\n\t  return accountManager.findAccount(userId);\n\t}\n}\n```\n如果是在参数上时，一般来说，我们需要的是request中的参数，所以这里说明一下，@ModelAttribute绑定参数的来源\n　A） 首先是 @SessionAttributes 上绑定的attribute 对象\n　B） 没有就查询@ModelAttribute 用于方法上时指定的model对象\n　C） 当两种情况都没有时，new一个需要绑定的bean对象，然后把request中按名称对应的方式把值绑定到bean中。\n示例代码：\n```Java\n@Controller  \n@RequestMapping(\"/user\")\npublic class UserController {\n  \n\t@RequestMapping(\"/login\", method = RequestMethod.POST)\n\tpublic void findPet(@ModelAttribute User user) {\n\t  // TODO \n\t}\n}\n```","slug":"SpringMvc接收参数","published":1,"updated":"2017-01-16T07:28:04.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4g000ypo2ym425dobf","content":"<h4 id=\"SpringMvc接收对象的方式\"><a href=\"#SpringMvc接收对象的方式\" class=\"headerlink\" title=\"SpringMvc接收对象的方式\"></a>SpringMvc接收对象的方式</h4><h5 id=\"1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application-json之类的类型就没有用了，需要读取request的流再解析出参数\"><a href=\"#1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application-json之类的类型就没有用了，需要读取request的流再解析出参数\" class=\"headerlink\" title=\"1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application/json之类的类型就没有用了，需要读取request的流再解析出参数\"></a>1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application/json之类的类型就没有用了，需要读取request的流再解析出参数</h5><p>request.getParameter(name);\n　</p>\n<h5 id=\"2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数\"><a href=\"#2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数\" class=\"headerlink\" title=\"2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数\"></a>2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数</h5><p><strong>1）@PathVariable </strong><br>当使用@RequestMapping URI template 样式映射时， 即 someUrl/{paramId}, 这时的paramId可通过 @Pathvariable注解绑定它传过来的值到方法的参数上。<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user/&#123;operation&#125;\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/&#123;userId&#125;\"</span>)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@PathVariable String operation, @PathVariable String userId, Model model)</span> </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>2）@RequestHeader </strong><br>@RequestHeader 注解，可以把Request请求header部分的值绑定到方法的参数上。<br>常见的header：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Accept:\t\t\t\t\timage/webp,image/*,*/*;q=0.8</div><div class=\"line\">Accept-Encoding:\t\tgzip, deflate, sdch</div><div class=\"line\">Accept-Language:\t\tzh-CN,zh;q=0.8</div><div class=\"line\">Host:\t\t\t\t\tlocalhost:8080</div><div class=\"line\">Accept-Charset          ISO-8859-1,utf-8;q=0.7,*;q=0.7</div><div class=\"line\">Keep-Alive              300</div></pre></td></tr></table></figure></p>\n<p>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/getlist\"</span>)  </div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(</span></span></div><div class=\"line\">\t\t@RequestHeader(<span class=\"string\">\"Accept-Encoding\"</span>) String encoding, </div><div class=\"line\">\t\t@<span class=\"title\">RequestHeader</span><span class=\"params\">(<span class=\"string\">\"Keep-Alive\"</span>)</span> <span class=\"keyword\">long</span> keepAlive) &#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>3）@CookieValue </strong><br>@CookieValue 可以把Request header中关于cookie的值绑定到方法的参数上。<br>例如有如下Cookie值：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">JSESSIONID=070c17a0028d1dcc66eba40e7781d177</div></pre></td></tr></table></figure></p>\n<p>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>)  </div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@CookieValue(<span class=\"string\">\"JSESSIONID\"</span>)</span> String cookie) </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>4）@RequestParam</strong><br>@RequestParam等同于request.getParameter();<br>@RequestParam用来处理Content-Type: 为 application/x-www-form-urlencoded编码的内容，提交方式为GET、POST；<br>@RequestParam有两个属性：<br>　value：用来指定要传入值的name<br>　required：用来指定参数是否必须<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.GET)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"userId\"</span>)</span> String userId) </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>5）@RequestBody</strong><br>像ajax原生的请求就是application/json类型，此时用@RequestBody就十分合适<br>@RequestBody常用来处理Content-Type: 不是application/x-www-form-urlencoded编码的内容，例如application/json, application/xml等；<br><strong>但是注意springmvc4.2版本才能直接转对象，4.2之前只能接收String</strong><br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"comment\">// 4.2之前接收String</span></div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@RequestBody String body)</span> </span>&#123;</div><div class=\"line\">\t\tUser user = (User) JSON.parse(body);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">// 4.2之后接收bean</span></div><div class=\"line\">\t\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@RequestBody User user)</span> </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> user.getName(); </div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>6）@SessionAttributes</strong><br>@SessionAttribute用来绑定HttpSession中的attribute对象的值，便于在方法中的参数里使用。<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span>  </div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"meta\">@SessionAttributes</span>(<span class=\"string\">\"userId\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>7）@ModelAttribute</strong><br>@ModelAttribute可以用在方法上也可以用在参数上，@ModelAttribute只能获取键值对，即接收的Content-Type是from-data或者application/x-www-form等类型<br>首先是用在方法上时，相当于为request对象的model里put(“account”, Account);<br>如此在使用@RequestParam时就不需要带上参数名了<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span>  </div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t<span class=\"meta\">@ModelAttribute</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@RequestParam String userId)</span> </span>&#123;</div><div class=\"line\">\t  <span class=\"keyword\">return</span> accountManager.findAccount(userId);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如果是在参数上时，一般来说，我们需要的是request中的参数，所以这里说明一下，@ModelAttribute绑定参数的来源<br>　A） 首先是 @SessionAttributes 上绑定的attribute 对象<br>　B） 没有就查询@ModelAttribute 用于方法上时指定的model对象<br>　C） 当两种情况都没有时，new一个需要绑定的bean对象，然后把request中按名称对应的方式把值绑定到bean中。<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span>  </div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@ModelAttribute User user)</span> </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h4 id=\"SpringMvc接收对象的方式\"><a href=\"#SpringMvc接收对象的方式\" class=\"headerlink\" title=\"SpringMvc接收对象的方式\"></a>SpringMvc接收对象的方式</h4><h5 id=\"1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application-json之类的类型就没有用了，需要读取request的流再解析出参数\"><a href=\"#1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application-json之类的类型就没有用了，需要读取request的流再解析出参数\" class=\"headerlink\" title=\"1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application/json之类的类型就没有用了，需要读取request的流再解析出参数\"></a>1、最普通的我们可以用HttpServletRequest对象来接收，但下面的方式我们只能用来接收键值对，对application/json之类的类型就没有用了，需要读取request的流再解析出参数</h5><p>request.getParameter(name);\n　</p>\n<h5 id=\"2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数\"><a href=\"#2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数\" class=\"headerlink\" title=\"2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数\"></a>2、但既然用了SpringMvc我们可以用注解的方式来获取各种参数</h5><p><strong>1）@PathVariable </strong><br>当使用@RequestMapping URI template 样式映射时， 即 someUrl/{paramId}, 这时的paramId可通过 @Pathvariable注解绑定它传过来的值到方法的参数上。<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user/&#123;operation&#125;\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/&#123;userId&#125;\"</span>)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@PathVariable String operation, @PathVariable String userId, Model model)</span> </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>2）@RequestHeader </strong><br>@RequestHeader 注解，可以把Request请求header部分的值绑定到方法的参数上。<br>常见的header：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Accept:\t\t\t\t\timage/webp,image/*,*/*;q=0.8</div><div class=\"line\">Accept-Encoding:\t\tgzip, deflate, sdch</div><div class=\"line\">Accept-Language:\t\tzh-CN,zh;q=0.8</div><div class=\"line\">Host:\t\t\t\t\tlocalhost:8080</div><div class=\"line\">Accept-Charset          ISO-8859-1,utf-8;q=0.7,*;q=0.7</div><div class=\"line\">Keep-Alive              300</div></pre></td></tr></table></figure></p>\n<p>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/getlist\"</span>)  </div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(</div><div class=\"line\">\t\t@RequestHeader(<span class=\"string\">\"Accept-Encoding\"</span>)</span> String encoding, </div><div class=\"line\">\t\t@<span class=\"title\">RequestHeader</span><span class=\"params\">(<span class=\"string\">\"Keep-Alive\"</span>)</span> <span class=\"keyword\">long</span> keepAlive) </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>3）@CookieValue </strong><br>@CookieValue 可以把Request header中关于cookie的值绑定到方法的参数上。<br>例如有如下Cookie值：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">JSESSIONID=070c17a0028d1dcc66eba40e7781d177</div></pre></td></tr></table></figure></p>\n<p>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>)  </div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@CookieValue(<span class=\"string\">\"JSESSIONID\"</span>)</span> String cookie) </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>4）@RequestParam</strong><br>@RequestParam等同于request.getParameter();<br>@RequestParam用来处理Content-Type: 为 application/x-www-form-urlencoded编码的内容，提交方式为GET、POST；<br>@RequestParam有两个属性：<br>　value：用来指定要传入值的name<br>　required：用来指定参数是否必须<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.GET)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"userId\"</span>)</span> String userId) </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>5）@RequestBody</strong><br>像ajax原生的请求就是application/json类型，此时用@RequestBody就十分合适<br>@RequestBody常用来处理Content-Type: 不是application/x-www-form-urlencoded编码的内容，例如application/json, application/xml等；<br><strong>但是注意springmvc4.2版本才能直接转对象，4.2之前只能接收String</strong><br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"comment\">// 4.2之前接收String</span></div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@RequestBody String body)</span> </span>&#123;</div><div class=\"line\">\t\tUser user = (User) JSON.parse(body);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">// 4.2之后接收bean</span></div><div class=\"line\">\t\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@RequestBody User user)</span> </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> user.getName(); </div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>6）@SessionAttributes</strong><br>@SessionAttribute用来绑定HttpSession中的attribute对象的值，便于在方法中的参数里使用。<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span>  </div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"meta\">@SessionAttributes</span>(<span class=\"string\">\"userId\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>7）@ModelAttribute</strong><br>@ModelAttribute可以用在方法上也可以用在参数上，@ModelAttribute只能获取键值对，即接收的Content-Type是from-data或者application/x-www-form等类型<br>首先是用在方法上时，相当于为request对象的model里put(“account”, Account);<br>如此在使用@RequestParam时就不需要带上参数名了<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span>  </div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t<span class=\"meta\">@ModelAttribute</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@RequestParam String userId)</span> </span>&#123;</div><div class=\"line\">\t  <span class=\"keyword\">return</span> accountManager.findAccount(userId);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如果是在参数上时，一般来说，我们需要的是request中的参数，所以这里说明一下，@ModelAttribute绑定参数的来源<br>　A） 首先是 @SessionAttributes 上绑定的attribute 对象<br>　B） 没有就查询@ModelAttribute 用于方法上时指定的model对象<br>　C） 当两种情况都没有时，new一个需要绑定的bean对象，然后把request中按名称对应的方式把值绑定到bean中。<br>示例代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Controller</span>  </div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>, method = RequestMethod.POST)</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">findPet</span><span class=\"params\">(@ModelAttribute User user)</span> </span>&#123;</div><div class=\"line\">\t  <span class=\"comment\">// TODO </span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"SpringMvc整合Swagger UI","date":"2017-01-14T01:48:05.000Z","_content":"首先，导入主要的jar包\n```XML\n<!-- swagger-springmvc start -->\n<dependency>\n\t<groupId>com.mangofactory</groupId>\n\t<artifactId>swagger-springmvc</artifactId>\n\t<version>1.0.2</version>\n</dependency>\n<dependency>\n\t<groupId>com.mangofactory</groupId>\n\t<artifactId>swagger-models</artifactId>\n\t<version>1.0.2</version>\n</dependency>\n<dependency>\n\t<groupId>com.wordnik</groupId>\n\t<artifactId>swagger-annotations</artifactId>\n\t<version>1.3.11</version>\n</dependency>\n<!-- swagger-springmvc end -->\n```\n定义一个config类来实现swagger的配置\n```Java\npackage test.util;\n\nimport java.util.List;\n\nimport javax.inject.Inject;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;\n\nimport com.mangofactory.swagger.configuration.SpringSwaggerConfig;\nimport com.mangofactory.swagger.models.dto.ApiInfo;\nimport com.mangofactory.swagger.plugin.EnableSwagger;\nimport com.mangofactory.swagger.plugin.SwaggerSpringMvcPlugin;\n\n@Configuration\n@EnableWebMvc\n@EnableSwagger\npublic class SwaggerConfig {\n\t\n\tprivate SpringSwaggerConfig springSwaggerConfig;\n\t\n\tpublic SpringSwaggerConfig getSpringSwaggerConfig() {\n\t\treturn springSwaggerConfig;\n\t}\n\t\n\t@Inject\n\tpublic void setSpringSwaggerConfig(SpringSwaggerConfig springSwaggerConfig) {\n\t\tthis.springSwaggerConfig = springSwaggerConfig;\n\t}\n\t\n\t@Bean\n\tpublic SwaggerSpringMvcPlugin customImplementation() {\n\t\treturn new SwaggerSpringMvcPlugin\n\t\t\t\t(this.springSwaggerConfig)\n\t\t\t\t.apiInfo(apiInfo())\n\t\t\t\t.includePatterns(\".*?\");\n\t}\n\t\n\tprivate ApiInfo apiInfo() {\n\t\tApiInfo apiInfo = new ApiInfo(\n                \"系统管理平台API\",\n                \"\",\n                \"\", \n                \"\",\n                \"\",\n                \"\");\n        return apiInfo;\n\t}\n\n}\n```\n在网上可能会看到@WebAppConfiguration配置，那是测试时候用的，发布的时候需要用@Configuration代替，@Configuration等价于xml里的beans标签，@EnableWebMvc注解驱动，将@RequestMapping的传入请求映射到一定的方法@Controller -annotated类的支持，@EnableSwagger自动注入SpringSwaggerConfig\n\n上面的代码写完后springSwaggerConfig可能是null，因为还没有注入，有可能是@EnableSwagger没被扫到，也有可能是无效，加上以下配置\n```XML\n<bean class=\"com.mangofactory.swagger.configuration.SpringSwaggerConfig\" />\n```\n也有可能没有报错，就是启动的时候并没有把Controller中的url管理起来，原因是需要在启动时注入我们自己写的配置，加入以下代码\n```XML\n<!-- swaggerUI 开始 -->\n<mvc:annotation-driven/>\n<bean class=\"test.SwaggerConfig\"></bean>\n<!-- swaggerUI 结束 -->\n```\n有如下的几种使用方式\n```Java\n@Api(value = \"/user\", description = \"用户操作接口\", position = 1) \n@ApiOperation(value = \"/user/getdetail\", httpMethod = \"POST\", notes = \"获取用户详细信息\", response = DetailResponseVo.class)\n@ApiResponses(value = {  \n\t@ApiResponse(code = 200, message = \"操作成功！\", response = DetailResponseVo.class),  \n\t@ApiResponse(code = 404, message = \"找不到页面\"),  \n\t@ApiResponse(code = 500, message = \"内部报错\")}\n)\n@ApiModel(value = \"用户信息\")\n@ApiModelProperty(value = \"用户id\")\n```\n说明\n```\n@Api表示一个开放的API，简要描述该API的功能。\n在一个@API下，可有多个@ApiOperation，表示针对该API的CRUD操作。在ApiOperation Annotation中可以通过value，notes描述该操作的作用，response描述正常情况下该请求的返回对象类型。\n在一个ApiOperation下，可以通过ApiResponses描述该API操作可能出现的情况。\n@ApiParam用于描述该API操作接受的参数类型\n@ApiModel用在类上\n@ApiModelProperty用在类中的属性上\n```\n展示　[Swagger-UI下载地址](https://github.com/swagger-api/swagger-ui \"https://github.com/swagger-api/swagger-ui\")\n```\n从github下载Swagger-UI, 解压后把该项目dist目录下的内容拷贝到自己的项目中，\n最好在webapp下建一个swagger目录来存放，编辑swagger/index.html文件，\n找到url = \"http://petstore.swagger.io/v2/swagger.json\";这一句，\n修改为url = \"/projectName/api-docs\";\nprojectName是指自己的项目名字；\n也可以写成http://{ip}:{port}/{projectName}/api-docs这个格式\n```\n因为springMvc会拦截静态资源，所以还需加上下面的过滤配置\n```XML\n<mvc:resources mapping=\"/swagger/**\" location=\"/swagger/\"/>\n```\n打开浏览器直接访问swagger目录下的index.html文件即可，如\n```\nhttp://localhost:8080/projectName/swagger/index.html\n```","source":"_posts/SpringMvc整合Swagger UI.md","raw":"---\ntitle: SpringMvc整合Swagger UI\ndate: 2017-01-14 09:48:05\ncategories: [Java]\ntags: [Java,SpringMvc,api]\n---\n首先，导入主要的jar包\n```XML\n<!-- swagger-springmvc start -->\n<dependency>\n\t<groupId>com.mangofactory</groupId>\n\t<artifactId>swagger-springmvc</artifactId>\n\t<version>1.0.2</version>\n</dependency>\n<dependency>\n\t<groupId>com.mangofactory</groupId>\n\t<artifactId>swagger-models</artifactId>\n\t<version>1.0.2</version>\n</dependency>\n<dependency>\n\t<groupId>com.wordnik</groupId>\n\t<artifactId>swagger-annotations</artifactId>\n\t<version>1.3.11</version>\n</dependency>\n<!-- swagger-springmvc end -->\n```\n定义一个config类来实现swagger的配置\n```Java\npackage test.util;\n\nimport java.util.List;\n\nimport javax.inject.Inject;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;\n\nimport com.mangofactory.swagger.configuration.SpringSwaggerConfig;\nimport com.mangofactory.swagger.models.dto.ApiInfo;\nimport com.mangofactory.swagger.plugin.EnableSwagger;\nimport com.mangofactory.swagger.plugin.SwaggerSpringMvcPlugin;\n\n@Configuration\n@EnableWebMvc\n@EnableSwagger\npublic class SwaggerConfig {\n\t\n\tprivate SpringSwaggerConfig springSwaggerConfig;\n\t\n\tpublic SpringSwaggerConfig getSpringSwaggerConfig() {\n\t\treturn springSwaggerConfig;\n\t}\n\t\n\t@Inject\n\tpublic void setSpringSwaggerConfig(SpringSwaggerConfig springSwaggerConfig) {\n\t\tthis.springSwaggerConfig = springSwaggerConfig;\n\t}\n\t\n\t@Bean\n\tpublic SwaggerSpringMvcPlugin customImplementation() {\n\t\treturn new SwaggerSpringMvcPlugin\n\t\t\t\t(this.springSwaggerConfig)\n\t\t\t\t.apiInfo(apiInfo())\n\t\t\t\t.includePatterns(\".*?\");\n\t}\n\t\n\tprivate ApiInfo apiInfo() {\n\t\tApiInfo apiInfo = new ApiInfo(\n                \"系统管理平台API\",\n                \"\",\n                \"\", \n                \"\",\n                \"\",\n                \"\");\n        return apiInfo;\n\t}\n\n}\n```\n在网上可能会看到@WebAppConfiguration配置，那是测试时候用的，发布的时候需要用@Configuration代替，@Configuration等价于xml里的beans标签，@EnableWebMvc注解驱动，将@RequestMapping的传入请求映射到一定的方法@Controller -annotated类的支持，@EnableSwagger自动注入SpringSwaggerConfig\n\n上面的代码写完后springSwaggerConfig可能是null，因为还没有注入，有可能是@EnableSwagger没被扫到，也有可能是无效，加上以下配置\n```XML\n<bean class=\"com.mangofactory.swagger.configuration.SpringSwaggerConfig\" />\n```\n也有可能没有报错，就是启动的时候并没有把Controller中的url管理起来，原因是需要在启动时注入我们自己写的配置，加入以下代码\n```XML\n<!-- swaggerUI 开始 -->\n<mvc:annotation-driven/>\n<bean class=\"test.SwaggerConfig\"></bean>\n<!-- swaggerUI 结束 -->\n```\n有如下的几种使用方式\n```Java\n@Api(value = \"/user\", description = \"用户操作接口\", position = 1) \n@ApiOperation(value = \"/user/getdetail\", httpMethod = \"POST\", notes = \"获取用户详细信息\", response = DetailResponseVo.class)\n@ApiResponses(value = {  \n\t@ApiResponse(code = 200, message = \"操作成功！\", response = DetailResponseVo.class),  \n\t@ApiResponse(code = 404, message = \"找不到页面\"),  \n\t@ApiResponse(code = 500, message = \"内部报错\")}\n)\n@ApiModel(value = \"用户信息\")\n@ApiModelProperty(value = \"用户id\")\n```\n说明\n```\n@Api表示一个开放的API，简要描述该API的功能。\n在一个@API下，可有多个@ApiOperation，表示针对该API的CRUD操作。在ApiOperation Annotation中可以通过value，notes描述该操作的作用，response描述正常情况下该请求的返回对象类型。\n在一个ApiOperation下，可以通过ApiResponses描述该API操作可能出现的情况。\n@ApiParam用于描述该API操作接受的参数类型\n@ApiModel用在类上\n@ApiModelProperty用在类中的属性上\n```\n展示　[Swagger-UI下载地址](https://github.com/swagger-api/swagger-ui \"https://github.com/swagger-api/swagger-ui\")\n```\n从github下载Swagger-UI, 解压后把该项目dist目录下的内容拷贝到自己的项目中，\n最好在webapp下建一个swagger目录来存放，编辑swagger/index.html文件，\n找到url = \"http://petstore.swagger.io/v2/swagger.json\";这一句，\n修改为url = \"/projectName/api-docs\";\nprojectName是指自己的项目名字；\n也可以写成http://{ip}:{port}/{projectName}/api-docs这个格式\n```\n因为springMvc会拦截静态资源，所以还需加上下面的过滤配置\n```XML\n<mvc:resources mapping=\"/swagger/**\" location=\"/swagger/\"/>\n```\n打开浏览器直接访问swagger目录下的index.html文件即可，如\n```\nhttp://localhost:8080/projectName/swagger/index.html\n```","slug":"SpringMvc整合Swagger UI","published":1,"updated":"2017-01-17T07:05:12.007Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4n0012po2yjujn7g37","content":"<p>首先，导入主要的jar包<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- swagger-springmvc start --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.mangofactory<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>swagger-springmvc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.mangofactory<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>swagger-models<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.wordnik<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>swagger-annotations<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.11<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- swagger-springmvc end --&gt;</span></div></pre></td></tr></table></figure></p>\n<p>定义一个config类来实现swagger的配置<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test.util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.inject.Inject;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.mangofactory.swagger.configuration.SpringSwaggerConfig;</div><div class=\"line\"><span class=\"keyword\">import</span> com.mangofactory.swagger.models.dto.ApiInfo;</div><div class=\"line\"><span class=\"keyword\">import</span> com.mangofactory.swagger.plugin.EnableSwagger;</div><div class=\"line\"><span class=\"keyword\">import</span> com.mangofactory.swagger.plugin.SwaggerSpringMvcPlugin;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Configuration</span></div><div class=\"line\"><span class=\"meta\">@EnableWebMvc</span></div><div class=\"line\"><span class=\"meta\">@EnableSwagger</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SwaggerConfig</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> SpringSwaggerConfig springSwaggerConfig;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> SpringSwaggerConfig <span class=\"title\">getSpringSwaggerConfig</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> springSwaggerConfig;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Inject</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSpringSwaggerConfig</span><span class=\"params\">(SpringSwaggerConfig springSwaggerConfig)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.springSwaggerConfig = springSwaggerConfig;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> SwaggerSpringMvcPlugin <span class=\"title\">customImplementation</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> SwaggerSpringMvcPlugin</div><div class=\"line\">\t\t\t\t(<span class=\"keyword\">this</span>.springSwaggerConfig)</div><div class=\"line\">\t\t\t\t.apiInfo(apiInfo())</div><div class=\"line\">\t\t\t\t.includePatterns(<span class=\"string\">\".*?\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> ApiInfo <span class=\"title\">apiInfo</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tApiInfo apiInfo = <span class=\"keyword\">new</span> ApiInfo(</div><div class=\"line\">                <span class=\"string\">\"系统管理平台API\"</span>,</div><div class=\"line\">                <span class=\"string\">\"\"</span>,</div><div class=\"line\">                <span class=\"string\">\"\"</span>, </div><div class=\"line\">                <span class=\"string\">\"\"</span>,</div><div class=\"line\">                <span class=\"string\">\"\"</span>,</div><div class=\"line\">                <span class=\"string\">\"\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> apiInfo;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在网上可能会看到@WebAppConfiguration配置，那是测试时候用的，发布的时候需要用@Configuration代替，@Configuration等价于xml里的beans标签，@EnableWebMvc注解驱动，将@RequestMapping的传入请求映射到一定的方法@Controller -annotated类的支持，@EnableSwagger自动注入SpringSwaggerConfig</p>\n<p>上面的代码写完后springSwaggerConfig可能是null，因为还没有注入，有可能是@EnableSwagger没被扫到，也有可能是无效，加上以下配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mangofactory.swagger.configuration.SpringSwaggerConfig\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>也有可能没有报错，就是启动的时候并没有把Controller中的url管理起来，原因是需要在启动时注入我们自己写的配置，加入以下代码<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- swaggerUI 开始 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mvc:annotation-driven</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test.SwaggerConfig\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- swaggerUI 结束 --&gt;</span></div></pre></td></tr></table></figure></p>\n<p>有如下的几种使用方式<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Api</span>(value = <span class=\"string\">\"/user\"</span>, description = <span class=\"string\">\"用户操作接口\"</span>, position = <span class=\"number\">1</span>) </div><div class=\"line\"><span class=\"meta\">@ApiOperation</span>(value = <span class=\"string\">\"/user/getdetail\"</span>, httpMethod = <span class=\"string\">\"POST\"</span>, notes = <span class=\"string\">\"获取用户详细信息\"</span>, response = DetailResponseVo.class)</div><div class=\"line\"><span class=\"meta\">@ApiResponses</span>(value = &#123;  </div><div class=\"line\">\t<span class=\"meta\">@ApiResponse</span>(code = <span class=\"number\">200</span>, message = <span class=\"string\">\"操作成功！\"</span>, response = DetailResponseVo.class),  </div><div class=\"line\">\t<span class=\"meta\">@ApiResponse</span>(code = <span class=\"number\">404</span>, message = <span class=\"string\">\"找不到页面\"</span>),  </div><div class=\"line\">\t<span class=\"meta\">@ApiResponse</span>(code = <span class=\"number\">500</span>, message = <span class=\"string\">\"内部报错\"</span>)&#125;</div><div class=\"line\">)</div><div class=\"line\"><span class=\"meta\">@ApiModel</span>(value = <span class=\"string\">\"用户信息\"</span>)</div><div class=\"line\"><span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">\"用户id\"</span>)</div></pre></td></tr></table></figure></p>\n<p>说明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Api表示一个开放的API，简要描述该API的功能。</div><div class=\"line\">在一个@API下，可有多个@ApiOperation，表示针对该API的CRUD操作。在ApiOperation Annotation中可以通过value，notes描述该操作的作用，response描述正常情况下该请求的返回对象类型。</div><div class=\"line\">在一个ApiOperation下，可以通过ApiResponses描述该API操作可能出现的情况。</div><div class=\"line\">@ApiParam用于描述该API操作接受的参数类型</div><div class=\"line\">@ApiModel用在类上</div><div class=\"line\">@ApiModelProperty用在类中的属性上</div></pre></td></tr></table></figure></p>\n<p>展示　<a href=\"https://github.com/swagger-api/swagger-ui\" title=\"https://github.com/swagger-api/swagger-ui\" target=\"_blank\" rel=\"external\">Swagger-UI下载地址</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">从github下载Swagger-UI, 解压后把该项目dist目录下的内容拷贝到自己的项目中，</div><div class=\"line\">最好在webapp下建一个swagger目录来存放，编辑swagger/index.html文件，</div><div class=\"line\">找到url = &quot;http://petstore.swagger.io/v2/swagger.json&quot;;这一句，</div><div class=\"line\">修改为url = &quot;/projectName/api-docs&quot;;</div><div class=\"line\">projectName是指自己的项目名字；</div><div class=\"line\">也可以写成http://&#123;ip&#125;:&#123;port&#125;/&#123;projectName&#125;/api-docs这个格式</div></pre></td></tr></table></figure></p>\n<p>因为springMvc会拦截静态资源，所以还需加上下面的过滤配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mvc:resources</span> <span class=\"attr\">mapping</span>=<span class=\"string\">\"/swagger/**\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"/swagger/\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n<p>打开浏览器直接访问swagger目录下的index.html文件即可，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://localhost:8080/projectName/swagger/index.html</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>首先，导入主要的jar包<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- swagger-springmvc start --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.mangofactory<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>swagger-springmvc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.mangofactory<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>swagger-models<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.wordnik<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>swagger-annotations<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.11<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- swagger-springmvc end --&gt;</span></div></pre></td></tr></table></figure></p>\n<p>定义一个config类来实现swagger的配置<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test.util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.inject.Inject;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.mangofactory.swagger.configuration.SpringSwaggerConfig;</div><div class=\"line\"><span class=\"keyword\">import</span> com.mangofactory.swagger.models.dto.ApiInfo;</div><div class=\"line\"><span class=\"keyword\">import</span> com.mangofactory.swagger.plugin.EnableSwagger;</div><div class=\"line\"><span class=\"keyword\">import</span> com.mangofactory.swagger.plugin.SwaggerSpringMvcPlugin;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Configuration</span></div><div class=\"line\"><span class=\"meta\">@EnableWebMvc</span></div><div class=\"line\"><span class=\"meta\">@EnableSwagger</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SwaggerConfig</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> SpringSwaggerConfig springSwaggerConfig;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> SpringSwaggerConfig <span class=\"title\">getSpringSwaggerConfig</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> springSwaggerConfig;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Inject</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSpringSwaggerConfig</span><span class=\"params\">(SpringSwaggerConfig springSwaggerConfig)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.springSwaggerConfig = springSwaggerConfig;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> SwaggerSpringMvcPlugin <span class=\"title\">customImplementation</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> SwaggerSpringMvcPlugin</div><div class=\"line\">\t\t\t\t(<span class=\"keyword\">this</span>.springSwaggerConfig)</div><div class=\"line\">\t\t\t\t.apiInfo(apiInfo())</div><div class=\"line\">\t\t\t\t.includePatterns(<span class=\"string\">\".*?\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> ApiInfo <span class=\"title\">apiInfo</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tApiInfo apiInfo = <span class=\"keyword\">new</span> ApiInfo(</div><div class=\"line\">                <span class=\"string\">\"系统管理平台API\"</span>,</div><div class=\"line\">                <span class=\"string\">\"\"</span>,</div><div class=\"line\">                <span class=\"string\">\"\"</span>, </div><div class=\"line\">                <span class=\"string\">\"\"</span>,</div><div class=\"line\">                <span class=\"string\">\"\"</span>,</div><div class=\"line\">                <span class=\"string\">\"\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> apiInfo;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在网上可能会看到@WebAppConfiguration配置，那是测试时候用的，发布的时候需要用@Configuration代替，@Configuration等价于xml里的beans标签，@EnableWebMvc注解驱动，将@RequestMapping的传入请求映射到一定的方法@Controller -annotated类的支持，@EnableSwagger自动注入SpringSwaggerConfig</p>\n<p>上面的代码写完后springSwaggerConfig可能是null，因为还没有注入，有可能是@EnableSwagger没被扫到，也有可能是无效，加上以下配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.mangofactory.swagger.configuration.SpringSwaggerConfig\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>也有可能没有报错，就是启动的时候并没有把Controller中的url管理起来，原因是需要在启动时注入我们自己写的配置，加入以下代码<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- swaggerUI 开始 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mvc:annotation-driven</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test.SwaggerConfig\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- swaggerUI 结束 --&gt;</span></div></pre></td></tr></table></figure></p>\n<p>有如下的几种使用方式<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Api</span>(value = <span class=\"string\">\"/user\"</span>, description = <span class=\"string\">\"用户操作接口\"</span>, position = <span class=\"number\">1</span>) </div><div class=\"line\"><span class=\"meta\">@ApiOperation</span>(value = <span class=\"string\">\"/user/getdetail\"</span>, httpMethod = <span class=\"string\">\"POST\"</span>, notes = <span class=\"string\">\"获取用户详细信息\"</span>, response = DetailResponseVo.class)</div><div class=\"line\"><span class=\"meta\">@ApiResponses</span>(value = &#123;  </div><div class=\"line\">\t<span class=\"meta\">@ApiResponse</span>(code = <span class=\"number\">200</span>, message = <span class=\"string\">\"操作成功！\"</span>, response = DetailResponseVo.class),  </div><div class=\"line\">\t<span class=\"meta\">@ApiResponse</span>(code = <span class=\"number\">404</span>, message = <span class=\"string\">\"找不到页面\"</span>),  </div><div class=\"line\">\t<span class=\"meta\">@ApiResponse</span>(code = <span class=\"number\">500</span>, message = <span class=\"string\">\"内部报错\"</span>)&#125;</div><div class=\"line\">)</div><div class=\"line\"><span class=\"meta\">@ApiModel</span>(value = <span class=\"string\">\"用户信息\"</span>)</div><div class=\"line\"><span class=\"meta\">@ApiModelProperty</span>(value = <span class=\"string\">\"用户id\"</span>)</div></pre></td></tr></table></figure></p>\n<p>说明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Api表示一个开放的API，简要描述该API的功能。</div><div class=\"line\">在一个@API下，可有多个@ApiOperation，表示针对该API的CRUD操作。在ApiOperation Annotation中可以通过value，notes描述该操作的作用，response描述正常情况下该请求的返回对象类型。</div><div class=\"line\">在一个ApiOperation下，可以通过ApiResponses描述该API操作可能出现的情况。</div><div class=\"line\">@ApiParam用于描述该API操作接受的参数类型</div><div class=\"line\">@ApiModel用在类上</div><div class=\"line\">@ApiModelProperty用在类中的属性上</div></pre></td></tr></table></figure></p>\n<p>展示　<a href=\"https://github.com/swagger-api/swagger-ui\" title=\"https://github.com/swagger-api/swagger-ui\">Swagger-UI下载地址</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">从github下载Swagger-UI, 解压后把该项目dist目录下的内容拷贝到自己的项目中，</div><div class=\"line\">最好在webapp下建一个swagger目录来存放，编辑swagger/index.html文件，</div><div class=\"line\">找到url = &quot;http://petstore.swagger.io/v2/swagger.json&quot;;这一句，</div><div class=\"line\">修改为url = &quot;/projectName/api-docs&quot;;</div><div class=\"line\">projectName是指自己的项目名字；</div><div class=\"line\">也可以写成http://&#123;ip&#125;:&#123;port&#125;/&#123;projectName&#125;/api-docs这个格式</div></pre></td></tr></table></figure></p>\n<p>因为springMvc会拦截静态资源，所以还需加上下面的过滤配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mvc:resources</span> <span class=\"attr\">mapping</span>=<span class=\"string\">\"/swagger/**\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"/swagger/\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n<p>打开浏览器直接访问swagger目录下的index.html文件即可，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://localhost:8080/projectName/swagger/index.html</div></pre></td></tr></table></figure></p>\n"},{"title":"StaleStateException","date":"2016-06-11T01:25:31.000Z","_content":"**org.hibernate.StaleStateException**\norg.hibernate.StaleStateException: Batch update returned unexpected row count from update: 0 actual row count: 0 expected: 1\n这个错误的原因是当你更新的时候id不对应了，查看hibernate的sql输出，要么就是id原本是自增的，而在新增的时候自己给id赋值了。\n我遇到的问题是新增的时候忘了调用save()方法，然后就去update()，这时update不到对象，结果就报错了","source":"_posts/StaleStateException.md","raw":"---\ntitle: StaleStateException\ndate: 2016-06-11 09:25:31\ncategories: [Java]\ntags: [Java,hibernate]\n---\n**org.hibernate.StaleStateException**\norg.hibernate.StaleStateException: Batch update returned unexpected row count from update: 0 actual row count: 0 expected: 1\n这个错误的原因是当你更新的时候id不对应了，查看hibernate的sql输出，要么就是id原本是自增的，而在新增的时候自己给id赋值了。\n我遇到的问题是新增的时候忘了调用save()方法，然后就去update()，这时update不到对象，结果就报错了","slug":"StaleStateException","published":1,"updated":"2017-01-16T03:43:31.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4o0015po2ypvdxcekl","content":"<p><strong>org.hibernate.StaleStateException</strong><br>org.hibernate.StaleStateException: Batch update returned unexpected row count from update: 0 actual row count: 0 expected: 1<br>这个错误的原因是当你更新的时候id不对应了，查看hibernate的sql输出，要么就是id原本是自增的，而在新增的时候自己给id赋值了。<br>我遇到的问题是新增的时候忘了调用save()方法，然后就去update()，这时update不到对象，结果就报错了</p>\n","excerpt":"","more":"<p><strong>org.hibernate.StaleStateException</strong><br>org.hibernate.StaleStateException: Batch update returned unexpected row count from update: 0 actual row count: 0 expected: 1<br>这个错误的原因是当你更新的时候id不对应了，查看hibernate的sql输出，要么就是id原本是自增的，而在新增的时候自己给id赋值了。<br>我遇到的问题是新增的时候忘了调用save()方法，然后就去update()，这时update不到对象，结果就报错了</p>\n"},{"title":"URL下载资源","date":"2016-03-16T14:53:18.000Z","_content":"#### url资源下载，有一个很实用的工具类FileUtils\n```Java\ntry {  \n\tURL httpUrl = new URL(\"http://xxx\");\n\tFile f = new File(\"存储路径+文件名+后缀\");  \n\tFileUtils.copyURLToFile(httpUrl, f);  \n} catch (Exception e) {  \n\te.printStackTrace();\n}\n```","source":"_posts/URL下载资源.md","raw":"---\ntitle: URL下载资源\ndate: 2016-03-16 22:53:18\ncategories: [Java]\ntags: [Java]\n---\n#### url资源下载，有一个很实用的工具类FileUtils\n```Java\ntry {  \n\tURL httpUrl = new URL(\"http://xxx\");\n\tFile f = new File(\"存储路径+文件名+后缀\");  \n\tFileUtils.copyURLToFile(httpUrl, f);  \n} catch (Exception e) {  \n\te.printStackTrace();\n}\n```","slug":"URL下载资源","published":1,"updated":"2016-12-30T00:59:40.699Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4r0019po2ytszxhmsh","content":"<h4 id=\"url资源下载，有一个很实用的工具类FileUtils\"><a href=\"#url资源下载，有一个很实用的工具类FileUtils\" class=\"headerlink\" title=\"url资源下载，有一个很实用的工具类FileUtils\"></a>url资源下载，有一个很实用的工具类FileUtils</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">\tURL httpUrl = <span class=\"keyword\">new</span> URL(<span class=\"string\">\"http://xxx\"</span>);</div><div class=\"line\">\tFile f = <span class=\"keyword\">new</span> File(<span class=\"string\">\"存储路径+文件名+后缀\"</span>);  </div><div class=\"line\">\tFileUtils.copyURLToFile(httpUrl, f);  </div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;  </div><div class=\"line\">\te.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<h4 id=\"url资源下载，有一个很实用的工具类FileUtils\"><a href=\"#url资源下载，有一个很实用的工具类FileUtils\" class=\"headerlink\" title=\"url资源下载，有一个很实用的工具类FileUtils\"></a>url资源下载，有一个很实用的工具类FileUtils</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">\tURL httpUrl = <span class=\"keyword\">new</span> URL(<span class=\"string\">\"http://xxx\"</span>);</div><div class=\"line\">\tFile f = <span class=\"keyword\">new</span> File(<span class=\"string\">\"存储路径+文件名+后缀\"</span>);  </div><div class=\"line\">\tFileUtils.copyURLToFile(httpUrl, f);  </div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;  </div><div class=\"line\">\te.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"eclipse从svn检出项目报错","date":"2016-03-13T05:21:23.000Z","_content":"##### 从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：\n```Java\nDescription\tResource\tPath\tLocation\tType\nTarget runtime com.genuitec.embedded.tomcat.runtime.v70 is not defined.\tXXX\t\t\nUnknown\tFaceted Project Problem\n```\n##### 解决方法：找到项目目录下的.settings/org.eclipse.wst.common.project.facet.core.xml文件\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<faceted-project>\n  <!-- 将这一句删除后刷新一下项目即可 -->\n  <runtime name=\"com.genuitec.embedded.tomcat.runtime.v70\"/>\n  <fixed facet=\"jst.web\"/>\n  <fixed facet=\"wst.jsdt.web\"/>\n  <fixed facet=\"java\"/>\n  <installed facet=\"java\" version=\"1.7\"/>\n  <installed facet=\"jst.web\" version=\"3.0\"/>\n  <installed facet=\"wst.jsdt.web\" version=\"1.0\"/>\n</faceted-project>\n```\n原因：新导入的工程出错的可能性非常高，但大多数都是缺少jar包导致的。还有一种缺少或者是错误的类库（比如JDK、Tomcat等等）。这里是因为跟项目原先导出时所使用的Tomcat冲突了。","source":"_posts/eclipse从svn检出项目报错.md","raw":"---\ntitle: eclipse从svn检出项目报错\ndate: 2016-03-13 13:21:23\ncategories: [Java]\ntags: [Java,svn,eclipse]\n---\n##### 从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：\n```Java\nDescription\tResource\tPath\tLocation\tType\nTarget runtime com.genuitec.embedded.tomcat.runtime.v70 is not defined.\tXXX\t\t\nUnknown\tFaceted Project Problem\n```\n##### 解决方法：找到项目目录下的.settings/org.eclipse.wst.common.project.facet.core.xml文件\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<faceted-project>\n  <!-- 将这一句删除后刷新一下项目即可 -->\n  <runtime name=\"com.genuitec.embedded.tomcat.runtime.v70\"/>\n  <fixed facet=\"jst.web\"/>\n  <fixed facet=\"wst.jsdt.web\"/>\n  <fixed facet=\"java\"/>\n  <installed facet=\"java\" version=\"1.7\"/>\n  <installed facet=\"jst.web\" version=\"3.0\"/>\n  <installed facet=\"wst.jsdt.web\" version=\"1.0\"/>\n</faceted-project>\n```\n原因：新导入的工程出错的可能性非常高，但大多数都是缺少jar包导致的。还有一种缺少或者是错误的类库（比如JDK、Tomcat等等）。这里是因为跟项目原先导出时所使用的Tomcat冲突了。","slug":"eclipse从svn检出项目报错","published":1,"updated":"2017-01-03T01:22:57.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4t001cpo2yxbyf9ml2","content":"<h5 id=\"从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：\"><a href=\"#从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：\" class=\"headerlink\" title=\"从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：\"></a>从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Description\tResource\tPath\tLocation\tType</div><div class=\"line\">Target runtime com.genuitec.embedded.tomcat.runtime.v70 is not defined.\tXXX\t\t</div><div class=\"line\">Unknown\tFaceted Project Problem</div></pre></td></tr></table></figure>\n<h5 id=\"解决方法：找到项目目录下的-settings-org-eclipse-wst-common-project-facet-core-xml文件\"><a href=\"#解决方法：找到项目目录下的-settings-org-eclipse-wst-common-project-facet-core-xml文件\" class=\"headerlink\" title=\"解决方法：找到项目目录下的.settings/org.eclipse.wst.common.project.facet.core.xml文件\"></a>解决方法：找到项目目录下的.settings/org.eclipse.wst.common.project.facet.core.xml文件</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">faceted-project</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 将这一句删除后刷新一下项目即可 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">runtime</span> <span class=\"attr\">name</span>=<span class=\"string\">\"com.genuitec.embedded.tomcat.runtime.v70\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">fixed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"jst.web\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">fixed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"wst.jsdt.web\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">fixed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"java\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">installed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"java\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.7\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">installed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"jst.web\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">installed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"wst.jsdt.web\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">faceted-project</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>原因：新导入的工程出错的可能性非常高，但大多数都是缺少jar包导致的。还有一种缺少或者是错误的类库（比如JDK、Tomcat等等）。这里是因为跟项目原先导出时所使用的Tomcat冲突了。</p>\n","excerpt":"","more":"<h5 id=\"从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：\"><a href=\"#从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：\" class=\"headerlink\" title=\"从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：\"></a>从svn把项目导入到eclipse后出现错误，运行又没有问题，提示如下：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Description\tResource\tPath\tLocation\tType</div><div class=\"line\">Target runtime com.genuitec.embedded.tomcat.runtime.v70 is not defined.\tXXX\t\t</div><div class=\"line\">Unknown\tFaceted Project Problem</div></pre></td></tr></table></figure>\n<h5 id=\"解决方法：找到项目目录下的-settings-org-eclipse-wst-common-project-facet-core-xml文件\"><a href=\"#解决方法：找到项目目录下的-settings-org-eclipse-wst-common-project-facet-core-xml文件\" class=\"headerlink\" title=\"解决方法：找到项目目录下的.settings/org.eclipse.wst.common.project.facet.core.xml文件\"></a>解决方法：找到项目目录下的.settings/org.eclipse.wst.common.project.facet.core.xml文件</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">faceted-project</span>&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 将这一句删除后刷新一下项目即可 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">runtime</span> <span class=\"attr\">name</span>=<span class=\"string\">\"com.genuitec.embedded.tomcat.runtime.v70\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">fixed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"jst.web\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">fixed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"wst.jsdt.web\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">fixed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"java\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">installed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"java\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.7\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">installed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"jst.web\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">installed</span> <span class=\"attr\">facet</span>=<span class=\"string\">\"wst.jsdt.web\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">faceted-project</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>原因：新导入的工程出错的可能性非常高，但大多数都是缺少jar包导致的。还有一种缺少或者是错误的类库（比如JDK、Tomcat等等）。这里是因为跟项目原先导出时所使用的Tomcat冲突了。</p>\n"},{"title":"eclipse安装svn","date":"2016-08-21T04:59:58.000Z","_content":"**在线安装：**\n　　打开Eclipse\n　　Help->Software Updates->find and install(如果没有这个就用help->Software Updates->Add/Remove Software即可)\n\n　　选择search for new features to install, Next\n　　\n　　点击new remote site（有以下版本可供选择）\n　　输入\n　　Name: Subclipse 1.6.x (Eclipse 3.2+)\n　　URL:  http://subclipse.tigris.org/update_1.6.x\n　　或\n　　Name: Subclipse 1.4.x (Eclipse 3.2+)\n　　URL:http://subclipse.tigris.org/update_1.4.x\n　　或\n　　Name: Subclipse 1.2.x (Eclipse 3.2+)\n　　URL:  http://subclipse.tigris.org/update_1.2.x\n　　或\n　　Name: Subclipse 1.0.x (Eclipse 3.0/3.1)\n\n　　选中subclipse，点击finish，一路NEXT。\n　　\n　　**注意：**有些时候会出现 Subclipse Integration for Mylyn 3.x (Optional) (3.0.0) requires plug-in \"org.eclipse.mylyn.tasks.core (3.0.0)\", or compatible.错误，这个不要紧，在弹出框中选择subclipse，把Subclipse Integration for Mylyn 3.x选项去掉即可Next一路安装完成！","source":"_posts/eclipse安装svn.md","raw":"---\ntitle: eclipse安装svn\ndate: 2016-08-21 12:59:58\ncategories: [Java]\ntags: [Java,eclipse]\n---\n**在线安装：**\n　　打开Eclipse\n　　Help->Software Updates->find and install(如果没有这个就用help->Software Updates->Add/Remove Software即可)\n\n　　选择search for new features to install, Next\n　　\n　　点击new remote site（有以下版本可供选择）\n　　输入\n　　Name: Subclipse 1.6.x (Eclipse 3.2+)\n　　URL:  http://subclipse.tigris.org/update_1.6.x\n　　或\n　　Name: Subclipse 1.4.x (Eclipse 3.2+)\n　　URL:http://subclipse.tigris.org/update_1.4.x\n　　或\n　　Name: Subclipse 1.2.x (Eclipse 3.2+)\n　　URL:  http://subclipse.tigris.org/update_1.2.x\n　　或\n　　Name: Subclipse 1.0.x (Eclipse 3.0/3.1)\n\n　　选中subclipse，点击finish，一路NEXT。\n　　\n　　**注意：**有些时候会出现 Subclipse Integration for Mylyn 3.x (Optional) (3.0.0) requires plug-in \"org.eclipse.mylyn.tasks.core (3.0.0)\", or compatible.错误，这个不要紧，在弹出框中选择subclipse，把Subclipse Integration for Mylyn 3.x选项去掉即可Next一路安装完成！","slug":"eclipse安装svn","published":1,"updated":"2017-01-17T02:26:48.366Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4w001gpo2yk2pyyu30","content":"<p><strong>在线安装：</strong><br>　　打开Eclipse<br>　　Help-&gt;Software Updates-&gt;find and install(如果没有这个就用help-&gt;Software Updates-&gt;Add/Remove Software即可)</p>\n<p>　　选择search for new features to install, Next<br>　　<br>　　点击new remote site（有以下版本可供选择）<br>　　输入<br>　　Name: Subclipse 1.6.x (Eclipse 3.2+)<br>　　URL:  <a href=\"http://subclipse.tigris.org/update_1.6.x\" target=\"_blank\" rel=\"external\">http://subclipse.tigris.org/update_1.6.x</a><br>　　或<br>　　Name: Subclipse 1.4.x (Eclipse 3.2+)<br>　　URL:<a href=\"http://subclipse.tigris.org/update_1.4.x\" target=\"_blank\" rel=\"external\">http://subclipse.tigris.org/update_1.4.x</a><br>　　或<br>　　Name: Subclipse 1.2.x (Eclipse 3.2+)<br>　　URL:  <a href=\"http://subclipse.tigris.org/update_1.2.x\" target=\"_blank\" rel=\"external\">http://subclipse.tigris.org/update_1.2.x</a><br>　　或<br>　　Name: Subclipse 1.0.x (Eclipse 3.0/3.1)</p>\n<p>　　选中subclipse，点击finish，一路NEXT。<br>　　<br>　　<strong>注意：</strong>有些时候会出现 Subclipse Integration for Mylyn 3.x (Optional) (3.0.0) requires plug-in “org.eclipse.mylyn.tasks.core (3.0.0)”, or compatible.错误，这个不要紧，在弹出框中选择subclipse，把Subclipse Integration for Mylyn 3.x选项去掉即可Next一路安装完成！</p>\n","excerpt":"","more":"<p><strong>在线安装：</strong><br>　　打开Eclipse<br>　　Help-&gt;Software Updates-&gt;find and install(如果没有这个就用help-&gt;Software Updates-&gt;Add/Remove Software即可)</p>\n<p>　　选择search for new features to install, Next<br>　　<br>　　点击new remote site（有以下版本可供选择）<br>　　输入<br>　　Name: Subclipse 1.6.x (Eclipse 3.2+)<br>　　URL:  <a href=\"http://subclipse.tigris.org/update_1.6.x\">http://subclipse.tigris.org/update_1.6.x</a><br>　　或<br>　　Name: Subclipse 1.4.x (Eclipse 3.2+)<br>　　URL:<a href=\"http://subclipse.tigris.org/update_1.4.x\">http://subclipse.tigris.org/update_1.4.x</a><br>　　或<br>　　Name: Subclipse 1.2.x (Eclipse 3.2+)<br>　　URL:  <a href=\"http://subclipse.tigris.org/update_1.2.x\">http://subclipse.tigris.org/update_1.2.x</a><br>　　或<br>　　Name: Subclipse 1.0.x (Eclipse 3.0/3.1)</p>\n<p>　　选中subclipse，点击finish，一路NEXT。<br>　　<br>　　<strong>注意：</strong>有些时候会出现 Subclipse Integration for Mylyn 3.x (Optional) (3.0.0) requires plug-in “org.eclipse.mylyn.tasks.core (3.0.0)”, or compatible.错误，这个不要紧，在弹出框中选择subclipse，把Subclipse Integration for Mylyn 3.x选项去掉即可Next一路安装完成！</p>\n"},{"title":"使用fatjar打包项目","date":"2016-07-28T03:29:07.000Z","_content":"```\n直接用eclipse打包项目，如果项目有依赖的jar包，则运行时需要将生成的jar文件和存放引用包的lib文件夹\n放在同一个目录下，但是这种方式十分不美观，在非maven项目中，推荐使用fatjar打包项目，\nfatjar工具可以把引用包也引入到生成的jar文件中，使用方法不做解释，下面为使用失败的记录。\n```\n##### 因为fatjar只有0.0.31版本，而0.0.31版本在eclipse 3.4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案\n**一、下载eclipse兼容版本插件**\n　　使用eclipse的Help>Install new software>Work with后面的Add按钮，分别填入\n　　The Eclipse Project Updates\n　　和\n　　http://download.eclipse.org/eclipse/updates/x.x（x.x是你目前eclipse的版本，我是4.4）\n\n　　选中Eclipse Tests,Examples,and Extras下的Eclipse 2.0 Style Plugin Support，安装，安装完会提示重启，重启。\n　　\n　　这个时候eclipse就兼容了2.0插件，这时可使用以下两种方式安装fatjar插件:\n　　\n　　　**1.直接下载**\n　　　fat-jar它是sourceforge.net下的一个开源工具，从\n　　　[http://sourceforge.net/projects/fjep/files/](http://sourceforge.net/projects/fjep/files/)地址可以下载该工具，下载完成后是一个zip压缩包，将包中的net.sf.fjep.fatjar_0.0.31.jar放到eclipse安装目录的plugins下，重启eclipse即可（虽简单粗暴，但不推荐）\n　　　如果下载不了，可以到我的csdn下载：[下载地址](http://download.csdn.net/detail/zhangfs_sl/9727387)\n　　　**2.在线安装**\n　　　Help>Install new software>Add-Name:Fat Jar;Location:http://kurucz-grafika.de/fatjar>OK>一直next，不管安装什么，Contact all update sites during install to find required softaware一般都不勾选，不然等更新要等很久\n\n**二、下载更高版本的fastjar工具--net.sf.fjep.fatjar_0.0.32.jar(大神改过的)放到eclipse安装目录的plugins下，重启eclipse即可**\n　　附fatjar0.0.32: [下载地址](http://download.csdn.net/detail/zhangfs_sl/9727391 \"http://download.csdn.net/detail/zhangfs_sl/9727391\")\n\n**实在不行的话，就把第一种方法中的fatjar版本改成小一点的试试，如果还不行，就用maven打包吧**","source":"_posts/fatjar打包项目.md","raw":"---\ntitle: 使用fatjar打包项目\ndate: 2016-07-28 11:29:07\ncategories: [Java]\ntags: [Java,eclipse]\n---\n```\n直接用eclipse打包项目，如果项目有依赖的jar包，则运行时需要将生成的jar文件和存放引用包的lib文件夹\n放在同一个目录下，但是这种方式十分不美观，在非maven项目中，推荐使用fatjar打包项目，\nfatjar工具可以把引用包也引入到生成的jar文件中，使用方法不做解释，下面为使用失败的记录。\n```\n##### 因为fatjar只有0.0.31版本，而0.0.31版本在eclipse 3.4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案\n**一、下载eclipse兼容版本插件**\n　　使用eclipse的Help>Install new software>Work with后面的Add按钮，分别填入\n　　The Eclipse Project Updates\n　　和\n　　http://download.eclipse.org/eclipse/updates/x.x（x.x是你目前eclipse的版本，我是4.4）\n\n　　选中Eclipse Tests,Examples,and Extras下的Eclipse 2.0 Style Plugin Support，安装，安装完会提示重启，重启。\n　　\n　　这个时候eclipse就兼容了2.0插件，这时可使用以下两种方式安装fatjar插件:\n　　\n　　　**1.直接下载**\n　　　fat-jar它是sourceforge.net下的一个开源工具，从\n　　　[http://sourceforge.net/projects/fjep/files/](http://sourceforge.net/projects/fjep/files/)地址可以下载该工具，下载完成后是一个zip压缩包，将包中的net.sf.fjep.fatjar_0.0.31.jar放到eclipse安装目录的plugins下，重启eclipse即可（虽简单粗暴，但不推荐）\n　　　如果下载不了，可以到我的csdn下载：[下载地址](http://download.csdn.net/detail/zhangfs_sl/9727387)\n　　　**2.在线安装**\n　　　Help>Install new software>Add-Name:Fat Jar;Location:http://kurucz-grafika.de/fatjar>OK>一直next，不管安装什么，Contact all update sites during install to find required softaware一般都不勾选，不然等更新要等很久\n\n**二、下载更高版本的fastjar工具--net.sf.fjep.fatjar_0.0.32.jar(大神改过的)放到eclipse安装目录的plugins下，重启eclipse即可**\n　　附fatjar0.0.32: [下载地址](http://download.csdn.net/detail/zhangfs_sl/9727391 \"http://download.csdn.net/detail/zhangfs_sl/9727391\")\n\n**实在不行的话，就把第一种方法中的fatjar版本改成小一点的试试，如果还不行，就用maven打包吧**","slug":"fatjar打包项目","published":1,"updated":"2017-01-17T02:47:34.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou4y001jpo2ympbvljuu","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">直接用eclipse打包项目，如果项目有依赖的jar包，则运行时需要将生成的jar文件和存放引用包的lib文件夹</div><div class=\"line\">放在同一个目录下，但是这种方式十分不美观，在非maven项目中，推荐使用fatjar打包项目，</div><div class=\"line\">fatjar工具可以把引用包也引入到生成的jar文件中，使用方法不做解释，下面为使用失败的记录。</div></pre></td></tr></table></figure>\n<h5 id=\"因为fatjar只有0-0-31版本，而0-0-31版本在eclipse-3-4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案\"><a href=\"#因为fatjar只有0-0-31版本，而0-0-31版本在eclipse-3-4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案\" class=\"headerlink\" title=\"因为fatjar只有0.0.31版本，而0.0.31版本在eclipse 3.4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案\"></a>因为fatjar只有0.0.31版本，而0.0.31版本在eclipse 3.4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案</h5><p><strong>一、下载eclipse兼容版本插件</strong><br>　　使用eclipse的Help&gt;Install new software&gt;Work with后面的Add按钮，分别填入<br>　　The Eclipse Project Updates<br>　　和<br>　　<a href=\"http://download.eclipse.org/eclipse/updates/x.x（x.x是你目前eclipse的版本，我是4.4）\" target=\"_blank\" rel=\"external\">http://download.eclipse.org/eclipse/updates/x.x（x.x是你目前eclipse的版本，我是4.4）</a></p>\n<p>　　选中Eclipse Tests,Examples,and Extras下的Eclipse 2.0 Style Plugin Support，安装，安装完会提示重启，重启。<br>　　<br>　　这个时候eclipse就兼容了2.0插件，这时可使用以下两种方式安装fatjar插件:<br>　　<br>　　　<strong>1.直接下载</strong><br>　　　fat-jar它是sourceforge.net下的一个开源工具，从<br>　　　<a href=\"http://sourceforge.net/projects/fjep/files/\" target=\"_blank\" rel=\"external\">http://sourceforge.net/projects/fjep/files/</a>地址可以下载该工具，下载完成后是一个zip压缩包，将包中的net.sf.fjep.fatjar_0.0.31.jar放到eclipse安装目录的plugins下，重启eclipse即可（虽简单粗暴，但不推荐）<br>　　　如果下载不了，可以到我的csdn下载：<a href=\"http://download.csdn.net/detail/zhangfs_sl/9727387\" target=\"_blank\" rel=\"external\">下载地址</a><br>　　　<strong>2.在线安装</strong><br>　　　Help&gt;Install new software&gt;Add-Name:Fat Jar;Location:<a href=\"http://kurucz-grafika.de/fatjar&gt;OK&gt;一直next，不管安装什么，Contact\" target=\"_blank\" rel=\"external\">http://kurucz-grafika.de/fatjar&gt;OK&gt;一直next，不管安装什么，Contact</a> all update sites during install to find required softaware一般都不勾选，不然等更新要等很久</p>\n<p><strong>二、下载更高版本的fastjar工具–net.sf.fjep.fatjar_0.0.32.jar(大神改过的)放到eclipse安装目录的plugins下，重启eclipse即可</strong><br>　　附fatjar0.0.32: <a href=\"http://download.csdn.net/detail/zhangfs_sl/9727391\" title=\"http://download.csdn.net/detail/zhangfs_sl/9727391\" target=\"_blank\" rel=\"external\">下载地址</a></p>\n<p><strong>实在不行的话，就把第一种方法中的fatjar版本改成小一点的试试，如果还不行，就用maven打包吧</strong></p>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">直接用eclipse打包项目，如果项目有依赖的jar包，则运行时需要将生成的jar文件和存放引用包的lib文件夹</div><div class=\"line\">放在同一个目录下，但是这种方式十分不美观，在非maven项目中，推荐使用fatjar打包项目，</div><div class=\"line\">fatjar工具可以把引用包也引入到生成的jar文件中，使用方法不做解释，下面为使用失败的记录。</div></pre></td></tr></table></figure>\n<h5 id=\"因为fatjar只有0-0-31版本，而0-0-31版本在eclipse-3-4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案\"><a href=\"#因为fatjar只有0-0-31版本，而0-0-31版本在eclipse-3-4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案\" class=\"headerlink\" title=\"因为fatjar只有0.0.31版本，而0.0.31版本在eclipse 3.4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案\"></a>因为fatjar只有0.0.31版本，而0.0.31版本在eclipse 3.4之后就再没有更新过了，导致新版本的eclipse无法使用，有以下几种解决方案</h5><p><strong>一、下载eclipse兼容版本插件</strong><br>　　使用eclipse的Help&gt;Install new software&gt;Work with后面的Add按钮，分别填入<br>　　The Eclipse Project Updates<br>　　和<br>　　<a href=\"http://download.eclipse.org/eclipse/updates/x.x（x.x是你目前eclipse的版本，我是4.4）\">http://download.eclipse.org/eclipse/updates/x.x（x.x是你目前eclipse的版本，我是4.4）</a></p>\n<p>　　选中Eclipse Tests,Examples,and Extras下的Eclipse 2.0 Style Plugin Support，安装，安装完会提示重启，重启。<br>　　<br>　　这个时候eclipse就兼容了2.0插件，这时可使用以下两种方式安装fatjar插件:<br>　　<br>　　　<strong>1.直接下载</strong><br>　　　fat-jar它是sourceforge.net下的一个开源工具，从<br>　　　<a href=\"http://sourceforge.net/projects/fjep/files/\">http://sourceforge.net/projects/fjep/files/</a>地址可以下载该工具，下载完成后是一个zip压缩包，将包中的net.sf.fjep.fatjar_0.0.31.jar放到eclipse安装目录的plugins下，重启eclipse即可（虽简单粗暴，但不推荐）<br>　　　如果下载不了，可以到我的csdn下载：<a href=\"http://download.csdn.net/detail/zhangfs_sl/9727387\">下载地址</a><br>　　　<strong>2.在线安装</strong><br>　　　Help&gt;Install new software&gt;Add-Name:Fat Jar;Location:<a href=\"http://kurucz-grafika.de/fatjar&gt;OK&gt;一直next，不管安装什么，Contact\">http://kurucz-grafika.de/fatjar&gt;OK&gt;一直next，不管安装什么，Contact</a> all update sites during install to find required softaware一般都不勾选，不然等更新要等很久</p>\n<p><strong>二、下载更高版本的fastjar工具–net.sf.fjep.fatjar_0.0.32.jar(大神改过的)放到eclipse安装目录的plugins下，重启eclipse即可</strong><br>　　附fatjar0.0.32: <a href=\"http://download.csdn.net/detail/zhangfs_sl/9727391\" title=\"http://download.csdn.net/detail/zhangfs_sl/9727391\">下载地址</a></p>\n<p><strong>实在不行的话，就把第一种方法中的fatjar版本改成小一点的试试，如果还不行，就用maven打包吧</strong></p>\n"},{"title":"Log4j发邮件配置","date":"2016-04-08T01:12:09.000Z","_content":"引入log4j.jar包，这里解释一下三个包的关系：\n**slf4j-api** 本质就是一个接口定义\n**slf4j-log4j12** 是链接slf4j-api和log4j中间的适配器。它实现了slf4j-api中StaticLoggerBinder接口，从而使得在编译时绑定的是slf4j-log4j12的getSingleton()方法\n**log4j** 是具体的日志系统。通过slf4j-log4j12初始化Log4j，达到最终日志的输出。\n\nslf4j和log4j经常存在冲突的现在，需要在网上下载对应的版本，以下为无冲突的版本实例\n```XML\n<dependency>\n\t<groupId>log4j</groupId>\n\t<artifactId>log4j</artifactId>\n\t<version>1.2.16</version>\n</dependency>\n\n<dependency>\n\t<groupId>org.slf4j</groupId>\n\t<artifactId>slf4j-api</artifactId>\n\t<version>1.7.5</version>\n</dependency>\n\n<dependency>\n\t<groupId>org.slf4j</groupId>\n\t<artifactId>slf4j-log4j12</artifactId>\n\t<version>1.7.5</version>\n</dependency>\n```\nlog4j.properties文件配置\n```Java\nlog4j.rootLogger=INFO,stdout,R\n\n#输出到控制台\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d %5p [%F:%L] : %m%n\n\n#输出到日志文件\nlog4j.appender.R=org.apache.log4j.DailyRollingFileAppender\n#日志文件只输出WARN级别以上的日志\nlog4j.appender.R.Threshold=ERROR\n#日志文件输出路径\nlog4j.appender.R.File=/usr/local/tomcat7/logs/web/xxx.log\n#日志输出格式\nlog4j.appender.R.DatePattern='.'yyyy-MM-dd\nlog4j.appender.R.Append=true\nlog4j.appender.R.layout=org.apache.log4j.PatternLayout\nlog4j.appender.R.layout.ConversionPattern=[%-5p][%d{yyyyMMdd HH:mm:ss,SSS}][%C{1}:%L] %m%n\n```\n如果需要利用日志发送邮件，添加activation.jar、mail.jar两个包\n```XML\n<dependency>\n\t<groupId>javax.activation</groupId>\n\t<artifactId>activation</artifactId>\n\t<version>1.1.1</version>\n</dependency>\n\n<dependency>\n\t<groupId>javax.mail</groupId>\n\t<artifactId>mail</artifactId>\n\t<version>1.4.1</version>\n</dependency>\n```\n然后配置文件中加入\n```Java\n#log4j的邮件发送appender\nlog4j.appender.MAIL=org.apache.log4j.net.SMTPAppender\n#发送邮件的门槛，仅当等于或高于ERROR（比如FATAL）时，邮件才被发送\nlog4j.appender.MAIL.Threshold=ERROR\n#缓存文件大小，日志达到1000k时发送Email，但如果是ERROR或FATAL则立即发送  \nlog4j.appender.MAIL.BufferSize=1024KB\n#此处发送邮件的邮箱帐号\nlog4j.appender.MAIL.From=发送者的邮箱地址，比如xxxemail@163.com\n#SMTP邮件发送服务器地址（这里以网易邮箱举例，比如谷歌就会是smtp.gmail.com）\nlog4j.appender.MAIL.SMTPHost=smtp.163.com\n#SMTP发送认证的帐号名，邮箱的名称（不包含@163.com后面的信息）\nlog4j.appender.MAIL.SMTPUsername=xxxemail\n#SMTP发送认证帐号的密码，邮箱的密码\nlog4j.appender.MAIL.SMTPPassword=发送者的邮箱密码，比如123456789\n#是否打印调试信息，如果选true，则会输出和SMTP之间的握手等详细信息\nlog4j.appender.MAIL.SMTPDebug=true\n#邮件主题\nlog4j.appender.MAIL.Subject=xxx项目错误日志\n#发送到什么邮箱，如果要发送给多个邮箱，则用逗号分隔； \nlog4j.appender.MAIL.To=xxx1@qq.com,xxx2@163.com,xxx3@gmail.com\n#日志格式\nlog4j.appender.MAIL.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MAIL.layout.ConversionPattern=[framework]%d - %c -%-4r[%t]%-5p %c %x -%m%n\n```\n如果顺利的话可以正常的发送，但可能会有特殊情况，比如标题乱码（也可能是版本低了），则可以重写 SMTPAppender \n\n**看到配置中log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender这一句，这里就是 log4j 输出的控制类，如果有其它个性化的定制，比如认证信息的处理等，都是通过重写SMTPAppender来实现。**\n\n```Java\n// 邮件标题乱码问题\nimport java.io.UnsupportedEncodingException;\nimport org.apache.log4j.net.SMTPAppender;\n\npublic class EncodingSMTPAppender extends SMTPAppender {\n\t@Override\n\tpublic void setSubject(String subject) {\n\t\ttry {\n\t\t\tsubject = new String(subject.getBytes(\"iso8859-1\"), \"utf-8\");\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tsuper.setSubject(subject);\n\t}\t\n}\n```\n还有一个最常见的错误，配置完后发现若发送邮件失败 log4j: ERROR Error occured while sending e-mail notification.则是发送的邮箱没有开启stmp服务\n\n**像网易邮箱默认是没有开启smtp服务的，进入 邮箱-设置-POP3/SMTP/IMAP 中，把POP3/SMTP服务和IMAP/SMTP服务都勾选上**","source":"_posts/log4j发邮件配置.md","raw":"---\ntitle: Log4j发邮件配置\ndate: 2016-04-08 09:12:09\ncategories: [Java]\ntags: [Java]\n---\n引入log4j.jar包，这里解释一下三个包的关系：\n**slf4j-api** 本质就是一个接口定义\n**slf4j-log4j12** 是链接slf4j-api和log4j中间的适配器。它实现了slf4j-api中StaticLoggerBinder接口，从而使得在编译时绑定的是slf4j-log4j12的getSingleton()方法\n**log4j** 是具体的日志系统。通过slf4j-log4j12初始化Log4j，达到最终日志的输出。\n\nslf4j和log4j经常存在冲突的现在，需要在网上下载对应的版本，以下为无冲突的版本实例\n```XML\n<dependency>\n\t<groupId>log4j</groupId>\n\t<artifactId>log4j</artifactId>\n\t<version>1.2.16</version>\n</dependency>\n\n<dependency>\n\t<groupId>org.slf4j</groupId>\n\t<artifactId>slf4j-api</artifactId>\n\t<version>1.7.5</version>\n</dependency>\n\n<dependency>\n\t<groupId>org.slf4j</groupId>\n\t<artifactId>slf4j-log4j12</artifactId>\n\t<version>1.7.5</version>\n</dependency>\n```\nlog4j.properties文件配置\n```Java\nlog4j.rootLogger=INFO,stdout,R\n\n#输出到控制台\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d %5p [%F:%L] : %m%n\n\n#输出到日志文件\nlog4j.appender.R=org.apache.log4j.DailyRollingFileAppender\n#日志文件只输出WARN级别以上的日志\nlog4j.appender.R.Threshold=ERROR\n#日志文件输出路径\nlog4j.appender.R.File=/usr/local/tomcat7/logs/web/xxx.log\n#日志输出格式\nlog4j.appender.R.DatePattern='.'yyyy-MM-dd\nlog4j.appender.R.Append=true\nlog4j.appender.R.layout=org.apache.log4j.PatternLayout\nlog4j.appender.R.layout.ConversionPattern=[%-5p][%d{yyyyMMdd HH:mm:ss,SSS}][%C{1}:%L] %m%n\n```\n如果需要利用日志发送邮件，添加activation.jar、mail.jar两个包\n```XML\n<dependency>\n\t<groupId>javax.activation</groupId>\n\t<artifactId>activation</artifactId>\n\t<version>1.1.1</version>\n</dependency>\n\n<dependency>\n\t<groupId>javax.mail</groupId>\n\t<artifactId>mail</artifactId>\n\t<version>1.4.1</version>\n</dependency>\n```\n然后配置文件中加入\n```Java\n#log4j的邮件发送appender\nlog4j.appender.MAIL=org.apache.log4j.net.SMTPAppender\n#发送邮件的门槛，仅当等于或高于ERROR（比如FATAL）时，邮件才被发送\nlog4j.appender.MAIL.Threshold=ERROR\n#缓存文件大小，日志达到1000k时发送Email，但如果是ERROR或FATAL则立即发送  \nlog4j.appender.MAIL.BufferSize=1024KB\n#此处发送邮件的邮箱帐号\nlog4j.appender.MAIL.From=发送者的邮箱地址，比如xxxemail@163.com\n#SMTP邮件发送服务器地址（这里以网易邮箱举例，比如谷歌就会是smtp.gmail.com）\nlog4j.appender.MAIL.SMTPHost=smtp.163.com\n#SMTP发送认证的帐号名，邮箱的名称（不包含@163.com后面的信息）\nlog4j.appender.MAIL.SMTPUsername=xxxemail\n#SMTP发送认证帐号的密码，邮箱的密码\nlog4j.appender.MAIL.SMTPPassword=发送者的邮箱密码，比如123456789\n#是否打印调试信息，如果选true，则会输出和SMTP之间的握手等详细信息\nlog4j.appender.MAIL.SMTPDebug=true\n#邮件主题\nlog4j.appender.MAIL.Subject=xxx项目错误日志\n#发送到什么邮箱，如果要发送给多个邮箱，则用逗号分隔； \nlog4j.appender.MAIL.To=xxx1@qq.com,xxx2@163.com,xxx3@gmail.com\n#日志格式\nlog4j.appender.MAIL.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MAIL.layout.ConversionPattern=[framework]%d - %c -%-4r[%t]%-5p %c %x -%m%n\n```\n如果顺利的话可以正常的发送，但可能会有特殊情况，比如标题乱码（也可能是版本低了），则可以重写 SMTPAppender \n\n**看到配置中log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender这一句，这里就是 log4j 输出的控制类，如果有其它个性化的定制，比如认证信息的处理等，都是通过重写SMTPAppender来实现。**\n\n```Java\n// 邮件标题乱码问题\nimport java.io.UnsupportedEncodingException;\nimport org.apache.log4j.net.SMTPAppender;\n\npublic class EncodingSMTPAppender extends SMTPAppender {\n\t@Override\n\tpublic void setSubject(String subject) {\n\t\ttry {\n\t\t\tsubject = new String(subject.getBytes(\"iso8859-1\"), \"utf-8\");\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tsuper.setSubject(subject);\n\t}\t\n}\n```\n还有一个最常见的错误，配置完后发现若发送邮件失败 log4j: ERROR Error occured while sending e-mail notification.则是发送的邮箱没有开启stmp服务\n\n**像网易邮箱默认是没有开启smtp服务的，进入 邮箱-设置-POP3/SMTP/IMAP 中，把POP3/SMTP服务和IMAP/SMTP服务都勾选上**","slug":"log4j发邮件配置","published":1,"updated":"2017-01-17T02:53:21.176Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou51001mpo2y040ea28i","content":"<p>引入log4j.jar包，这里解释一下三个包的关系：<br><strong>slf4j-api</strong> 本质就是一个接口定义<br><strong>slf4j-log4j12</strong> 是链接slf4j-api和log4j中间的适配器。它实现了slf4j-api中StaticLoggerBinder接口，从而使得在编译时绑定的是slf4j-log4j12的getSingleton()方法<br><strong>log4j</strong> 是具体的日志系统。通过slf4j-log4j12初始化Log4j，达到最终日志的输出。</p>\n<p>slf4j和log4j经常存在冲突的现在，需要在网上下载对应的版本，以下为无冲突的版本实例<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.16<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.7.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.7.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>log4j.properties文件配置<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">log4j.rootLogger=INFO,stdout,R</div><div class=\"line\"></div><div class=\"line\">#输出到控制台</div><div class=\"line\">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class=\"line\">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.stdout.layout.ConversionPattern=%d %5p [%F:%L] : %m%n</div><div class=\"line\"></div><div class=\"line\">#输出到日志文件</div><div class=\"line\">log4j.appender.R=org.apache.log4j.DailyRollingFileAppender</div><div class=\"line\">#日志文件只输出WARN级别以上的日志</div><div class=\"line\">log4j.appender.R.Threshold=ERROR</div><div class=\"line\">#日志文件输出路径</div><div class=\"line\">log4j.appender.R.File=/usr/local/tomcat7/logs/web/xxx.log</div><div class=\"line\">#日志输出格式</div><div class=\"line\">log4j.appender.R.DatePattern='.'yyyy-MM-dd</div><div class=\"line\">log4j.appender.R.Append=true</div><div class=\"line\">log4j.appender.R.layout=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.R.layout.ConversionPattern=[%-5p][%d&#123;yyyyMMdd HH:mm:ss,SSS&#125;][%C&#123;1&#125;:%L] %m%n</div></pre></td></tr></table></figure></p>\n<p>如果需要利用日志发送邮件，添加activation.jar、mail.jar两个包<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.activation<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activation<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.mail<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mail<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.4.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>然后配置文件中加入<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">#log4j的邮件发送appender</div><div class=\"line\">log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender</div><div class=\"line\">#发送邮件的门槛，仅当等于或高于ERROR（比如FATAL）时，邮件才被发送</div><div class=\"line\">log4j.appender.MAIL.Threshold=ERROR</div><div class=\"line\">#缓存文件大小，日志达到1000k时发送Email，但如果是ERROR或FATAL则立即发送  </div><div class=\"line\">log4j.appender.MAIL.BufferSize=1024KB</div><div class=\"line\">#此处发送邮件的邮箱帐号</div><div class=\"line\">log4j.appender.MAIL.From=发送者的邮箱地址，比如xxxemail@163.com</div><div class=\"line\">#SMTP邮件发送服务器地址（这里以网易邮箱举例，比如谷歌就会是smtp.gmail.com）</div><div class=\"line\">log4j.appender.MAIL.SMTPHost=smtp.163.com</div><div class=\"line\">#SMTP发送认证的帐号名，邮箱的名称（不包含@163.com后面的信息）</div><div class=\"line\">log4j.appender.MAIL.SMTPUsername=xxxemail</div><div class=\"line\">#SMTP发送认证帐号的密码，邮箱的密码</div><div class=\"line\">log4j.appender.MAIL.SMTPPassword=发送者的邮箱密码，比如123456789</div><div class=\"line\">#是否打印调试信息，如果选true，则会输出和SMTP之间的握手等详细信息</div><div class=\"line\">log4j.appender.MAIL.SMTPDebug=true</div><div class=\"line\">#邮件主题</div><div class=\"line\">log4j.appender.MAIL.Subject=xxx项目错误日志</div><div class=\"line\">#发送到什么邮箱，如果要发送给多个邮箱，则用逗号分隔； </div><div class=\"line\">log4j.appender.MAIL.To=xxx1@qq.com,xxx2@163.com,xxx3@gmail.com</div><div class=\"line\">#日志格式</div><div class=\"line\">log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.MAIL.layout.ConversionPattern=[framework]%d - %c -%-4r[%t]%-5p %c %x -%m%n</div></pre></td></tr></table></figure></p>\n<p>如果顺利的话可以正常的发送，但可能会有特殊情况，比如标题乱码（也可能是版本低了），则可以重写 SMTPAppender </p>\n<p><strong>看到配置中log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender这一句，这里就是 log4j 输出的控制类，如果有其它个性化的定制，比如认证信息的处理等，都是通过重写SMTPAppender来实现。</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 邮件标题乱码问题</span></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.log4j.net.SMTPAppender;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EncodingSMTPAppender</span> <span class=\"keyword\">extends</span> <span class=\"title\">SMTPAppender</span> </span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSubject</span><span class=\"params\">(String subject)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tsubject = <span class=\"keyword\">new</span> String(subject.getBytes(<span class=\"string\">\"iso8859-1\"</span>), <span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>.setSubject(subject);</div><div class=\"line\">\t&#125;\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>还有一个最常见的错误，配置完后发现若发送邮件失败 log4j: ERROR Error occured while sending e-mail notification.则是发送的邮箱没有开启stmp服务</p>\n<p><strong>像网易邮箱默认是没有开启smtp服务的，进入 邮箱-设置-POP3/SMTP/IMAP 中，把POP3/SMTP服务和IMAP/SMTP服务都勾选上</strong></p>\n","excerpt":"","more":"<p>引入log4j.jar包，这里解释一下三个包的关系：<br><strong>slf4j-api</strong> 本质就是一个接口定义<br><strong>slf4j-log4j12</strong> 是链接slf4j-api和log4j中间的适配器。它实现了slf4j-api中StaticLoggerBinder接口，从而使得在编译时绑定的是slf4j-log4j12的getSingleton()方法<br><strong>log4j</strong> 是具体的日志系统。通过slf4j-log4j12初始化Log4j，达到最终日志的输出。</p>\n<p>slf4j和log4j经常存在冲突的现在，需要在网上下载对应的版本，以下为无冲突的版本实例<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.16<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.7.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.7.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>log4j.properties文件配置<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">log4j.rootLogger=INFO,stdout,R</div><div class=\"line\"></div><div class=\"line\">#输出到控制台</div><div class=\"line\">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class=\"line\">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.stdout.layout.ConversionPattern=%d %5p [%F:%L] : %m%n</div><div class=\"line\"></div><div class=\"line\">#输出到日志文件</div><div class=\"line\">log4j.appender.R=org.apache.log4j.DailyRollingFileAppender</div><div class=\"line\">#日志文件只输出WARN级别以上的日志</div><div class=\"line\">log4j.appender.R.Threshold=ERROR</div><div class=\"line\">#日志文件输出路径</div><div class=\"line\">log4j.appender.R.File=/usr/local/tomcat7/logs/web/xxx.log</div><div class=\"line\">#日志输出格式</div><div class=\"line\">log4j.appender.R.DatePattern='.'yyyy-MM-dd</div><div class=\"line\">log4j.appender.R.Append=true</div><div class=\"line\">log4j.appender.R.layout=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.R.layout.ConversionPattern=[%-5p][%d&#123;yyyyMMdd HH:mm:ss,SSS&#125;][%C&#123;1&#125;:%L] %m%n</div></pre></td></tr></table></figure></p>\n<p>如果需要利用日志发送邮件，添加activation.jar、mail.jar两个包<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.activation<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activation<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.mail<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mail<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.4.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>然后配置文件中加入<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">#log4j的邮件发送appender</div><div class=\"line\">log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender</div><div class=\"line\">#发送邮件的门槛，仅当等于或高于ERROR（比如FATAL）时，邮件才被发送</div><div class=\"line\">log4j.appender.MAIL.Threshold=ERROR</div><div class=\"line\">#缓存文件大小，日志达到1000k时发送Email，但如果是ERROR或FATAL则立即发送  </div><div class=\"line\">log4j.appender.MAIL.BufferSize=1024KB</div><div class=\"line\">#此处发送邮件的邮箱帐号</div><div class=\"line\">log4j.appender.MAIL.From=发送者的邮箱地址，比如xxxemail@163.com</div><div class=\"line\">#SMTP邮件发送服务器地址（这里以网易邮箱举例，比如谷歌就会是smtp.gmail.com）</div><div class=\"line\">log4j.appender.MAIL.SMTPHost=smtp.163.com</div><div class=\"line\">#SMTP发送认证的帐号名，邮箱的名称（不包含@163.com后面的信息）</div><div class=\"line\">log4j.appender.MAIL.SMTPUsername=xxxemail</div><div class=\"line\">#SMTP发送认证帐号的密码，邮箱的密码</div><div class=\"line\">log4j.appender.MAIL.SMTPPassword=发送者的邮箱密码，比如123456789</div><div class=\"line\">#是否打印调试信息，如果选true，则会输出和SMTP之间的握手等详细信息</div><div class=\"line\">log4j.appender.MAIL.SMTPDebug=true</div><div class=\"line\">#邮件主题</div><div class=\"line\">log4j.appender.MAIL.Subject=xxx项目错误日志</div><div class=\"line\">#发送到什么邮箱，如果要发送给多个邮箱，则用逗号分隔； </div><div class=\"line\">log4j.appender.MAIL.To=xxx1@qq.com,xxx2@163.com,xxx3@gmail.com</div><div class=\"line\">#日志格式</div><div class=\"line\">log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout</div><div class=\"line\">log4j.appender.MAIL.layout.ConversionPattern=[framework]%d - %c -%-4r[%t]%-5p %c %x -%m%n</div></pre></td></tr></table></figure></p>\n<p>如果顺利的话可以正常的发送，但可能会有特殊情况，比如标题乱码（也可能是版本低了），则可以重写 SMTPAppender </p>\n<p><strong>看到配置中log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender这一句，这里就是 log4j 输出的控制类，如果有其它个性化的定制，比如认证信息的处理等，都是通过重写SMTPAppender来实现。</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 邮件标题乱码问题</span></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.log4j.net.SMTPAppender;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EncodingSMTPAppender</span> <span class=\"keyword\">extends</span> <span class=\"title\">SMTPAppender</span> </span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSubject</span><span class=\"params\">(String subject)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tsubject = <span class=\"keyword\">new</span> String(subject.getBytes(<span class=\"string\">\"iso8859-1\"</span>), <span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>.setSubject(subject);</div><div class=\"line\">\t&#125;\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>还有一个最常见的错误，配置完后发现若发送邮件失败 log4j: ERROR Error occured while sending e-mail notification.则是发送的邮箱没有开启stmp服务</p>\n<p><strong>像网易邮箱默认是没有开启smtp服务的，进入 邮箱-设置-POP3/SMTP/IMAP 中，把POP3/SMTP服务和IMAP/SMTP服务都勾选上</strong></p>\n"},{"title":"maven引用外部jar包","date":"2017-01-17T07:20:15.000Z","_content":"从路径读取jar的方式，比较好的做法是在项目中建一个lib目录来存放jar包\n```XML\n<dependency>\n\t<groupId>postmsg-ump</groupId>\n\t<artifactId>postmsg-ump</artifactId>\n\t<scope>system</scope>\n\t<!-- 版本随便，为了好管理从1.0开始写，我这里已经迭代很多了 -->\n\t<version>2.4</version>\n\t<!-- basedir表示根目录，如果不在项目中则写绝对路径，如d:\\\\postmsg-ump-2.4.jar -->\n\t<systemPath>${basedir}\\src\\lib\\postmsg-ump-2.4.jar</systemPath>\n</dependency>\n```\n也可以用命令的方式将jar包导入本地仓库\n```\nmvn install:install-file -DgroupId=postmsg-ump -DartifactId=postmsg-ump -Dversion=2.4 -Dpackaging=jar -Dfile=d:\\postmsg-ump-2.4.jar \n```\n-Dfile表示要加入仓库的jar包路径，执行命令后，在pom.xml中则不需要system和systemPath这两项了，但是不推荐使用这种方式，因为实际开发的过程中常需要协同开发，当把项目提交到代码库，从另一个地方把项目check out的之后，发现少了包\n\n**最好的方法也是推荐的方法是建立一个共享私库，比如nexus**","source":"_posts/maven引用外部jar包.md","raw":"---\ntitle: maven引用外部jar包\ndate: 2017-01-17 15:20:15\ncategories: [Java]\ntags: [Java,maven]\n---\n从路径读取jar的方式，比较好的做法是在项目中建一个lib目录来存放jar包\n```XML\n<dependency>\n\t<groupId>postmsg-ump</groupId>\n\t<artifactId>postmsg-ump</artifactId>\n\t<scope>system</scope>\n\t<!-- 版本随便，为了好管理从1.0开始写，我这里已经迭代很多了 -->\n\t<version>2.4</version>\n\t<!-- basedir表示根目录，如果不在项目中则写绝对路径，如d:\\\\postmsg-ump-2.4.jar -->\n\t<systemPath>${basedir}\\src\\lib\\postmsg-ump-2.4.jar</systemPath>\n</dependency>\n```\n也可以用命令的方式将jar包导入本地仓库\n```\nmvn install:install-file -DgroupId=postmsg-ump -DartifactId=postmsg-ump -Dversion=2.4 -Dpackaging=jar -Dfile=d:\\postmsg-ump-2.4.jar \n```\n-Dfile表示要加入仓库的jar包路径，执行命令后，在pom.xml中则不需要system和systemPath这两项了，但是不推荐使用这种方式，因为实际开发的过程中常需要协同开发，当把项目提交到代码库，从另一个地方把项目check out的之后，发现少了包\n\n**最好的方法也是推荐的方法是建立一个共享私库，比如nexus**","slug":"maven引用外部jar包","published":1,"updated":"2017-01-22T07:32:09.226Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou53001opo2y72jq5zeu","content":"<p>从路径读取jar的方式，比较好的做法是在项目中建一个lib目录来存放jar包<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>postmsg-ump<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>postmsg-ump<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>system<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 版本随便，为了好管理从1.0开始写，我这里已经迭代很多了 --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- basedir表示根目录，如果不在项目中则写绝对路径，如d:\\\\postmsg-ump-2.4.jar --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">systemPath</span>&gt;</span>$&#123;basedir&#125;\\src\\lib\\postmsg-ump-2.4.jar<span class=\"tag\">&lt;/<span class=\"name\">systemPath</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>也可以用命令的方式将jar包导入本地仓库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn install:install-file -DgroupId=postmsg-ump -DartifactId=postmsg-ump -Dversion=2.4 -Dpackaging=jar -Dfile=d:\\postmsg-ump-2.4.jar</div></pre></td></tr></table></figure></p>\n<p>-Dfile表示要加入仓库的jar包路径，执行命令后，在pom.xml中则不需要system和systemPath这两项了，但是不推荐使用这种方式，因为实际开发的过程中常需要协同开发，当把项目提交到代码库，从另一个地方把项目check out的之后，发现少了包</p>\n<p><strong>最好的方法也是推荐的方法是建立一个共享私库，比如nexus</strong></p>\n","excerpt":"","more":"<p>从路径读取jar的方式，比较好的做法是在项目中建一个lib目录来存放jar包<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>postmsg-ump<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>postmsg-ump<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>system<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 版本随便，为了好管理从1.0开始写，我这里已经迭代很多了 --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- basedir表示根目录，如果不在项目中则写绝对路径，如d:\\\\postmsg-ump-2.4.jar --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">systemPath</span>&gt;</span>$&#123;basedir&#125;\\src\\lib\\postmsg-ump-2.4.jar<span class=\"tag\">&lt;/<span class=\"name\">systemPath</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>也可以用命令的方式将jar包导入本地仓库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn install:install-file -DgroupId=postmsg-ump -DartifactId=postmsg-ump -Dversion=2.4 -Dpackaging=jar -Dfile=d:\\postmsg-ump-2.4.jar</div></pre></td></tr></table></figure></p>\n<p>-Dfile表示要加入仓库的jar包路径，执行命令后，在pom.xml中则不需要system和systemPath这两项了，但是不推荐使用这种方式，因为实际开发的过程中常需要协同开发，当把项目提交到代码库，从另一个地方把项目check out的之后，发现少了包</p>\n<p><strong>最好的方法也是推荐的方法是建立一个共享私库，比如nexus</strong></p>\n"},{"title":"maven打包可执行项目","date":"2017-01-17T07:25:49.000Z","_content":"pom.xml配置\n```XML\n<build>\n\t<plugins>\n\t\t<plugin>\n\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t<artifactId>maven-assembly-plugin</artifactId>\n\t\t\t<version>2.3</version>\n\t\t\t<configuration>\n\t\t\t\t<archive>\n\t\t\t\t\t<manifest>\n\t\t\t\t\t\t<!-- 项目主清单（main）入口类 -->\n\t\t\t\t\t\t<mainClass>com.test.TestMain</mainClass>\n\t\t\t\t\t</manifest>\n\t\t\t\t</archive>\n\t\t\t\t<descriptors>\n\t\t\t\t\t<!-- 因为不是web程序，所以需要另外增加assmbly.xml文件 -->\n\t\t\t\t\t<descriptor>assembly.xml</descriptor>\n\t\t\t\t</descriptors>\n\t\t\t</configuration>\n\t\t\t<executions>\n\t\t\t\t<execution>\n\t\t\t\t\t<id>make-assembly</id>\n\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t<goals>\n\t\t\t\t\t\t<goal>single</goal>\n\t\t\t\t\t</goals>\n\t\t\t\t</execution>\n\t\t\t</executions>\n\t\t</plugin>\n\t</plugins>\n</build>\n```\nassmbly.xml（放在pom.xml同目录下）文件配置如下：\n```XML\n<assembly xmlns=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd\">\n\t<id>uberjar</id>\n\t<formats>\n\t\t<format>jar</format>\n\t</formats>\n\t<includeBaseDirectory>false</includeBaseDirectory>\n\t<dependencySets>\n\t\t<dependencySet>\n\t\t\t<!-- 引用的第三方jar包是否解压，如果为true，则解压第三方jar包为单独的文件目录；如果为false，则是将第三方jar包打进工程jar包下 -->\n\t\t\t<unpack>true</unpack>\n\t\t\t<scope>runtime</scope>\n\t\t</dependencySet>\n\t</dependencySets>\n\t<fileSets>\n\t\t<fileSet>\n\t\t\t<directory>${project.build.outputDirectory}</directory>\n\t\t\t<outputDirectory>/</outputDirectory>\n\t\t</fileSet>\n\t</fileSets>\n</assembly>\n```","source":"_posts/maven打包可执行项目.md","raw":"---\ntitle: maven打包可执行项目\ndate: 2017-01-17 15:25:49\ncategories: [Java]\ntags: [Java,maven]\n---\npom.xml配置\n```XML\n<build>\n\t<plugins>\n\t\t<plugin>\n\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t<artifactId>maven-assembly-plugin</artifactId>\n\t\t\t<version>2.3</version>\n\t\t\t<configuration>\n\t\t\t\t<archive>\n\t\t\t\t\t<manifest>\n\t\t\t\t\t\t<!-- 项目主清单（main）入口类 -->\n\t\t\t\t\t\t<mainClass>com.test.TestMain</mainClass>\n\t\t\t\t\t</manifest>\n\t\t\t\t</archive>\n\t\t\t\t<descriptors>\n\t\t\t\t\t<!-- 因为不是web程序，所以需要另外增加assmbly.xml文件 -->\n\t\t\t\t\t<descriptor>assembly.xml</descriptor>\n\t\t\t\t</descriptors>\n\t\t\t</configuration>\n\t\t\t<executions>\n\t\t\t\t<execution>\n\t\t\t\t\t<id>make-assembly</id>\n\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t<goals>\n\t\t\t\t\t\t<goal>single</goal>\n\t\t\t\t\t</goals>\n\t\t\t\t</execution>\n\t\t\t</executions>\n\t\t</plugin>\n\t</plugins>\n</build>\n```\nassmbly.xml（放在pom.xml同目录下）文件配置如下：\n```XML\n<assembly xmlns=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd\">\n\t<id>uberjar</id>\n\t<formats>\n\t\t<format>jar</format>\n\t</formats>\n\t<includeBaseDirectory>false</includeBaseDirectory>\n\t<dependencySets>\n\t\t<dependencySet>\n\t\t\t<!-- 引用的第三方jar包是否解压，如果为true，则解压第三方jar包为单独的文件目录；如果为false，则是将第三方jar包打进工程jar包下 -->\n\t\t\t<unpack>true</unpack>\n\t\t\t<scope>runtime</scope>\n\t\t</dependencySet>\n\t</dependencySets>\n\t<fileSets>\n\t\t<fileSet>\n\t\t\t<directory>${project.build.outputDirectory}</directory>\n\t\t\t<outputDirectory>/</outputDirectory>\n\t\t</fileSet>\n\t</fileSets>\n</assembly>\n```","slug":"maven打包可执行项目","published":1,"updated":"2017-01-17T07:39:11.923Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou55001spo2ycexewyem","content":"<p>pom.xml配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-assembly-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">archive</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">manifest</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\">&lt;!-- 项目主清单（main）入口类 --&gt;</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.test.TestMain<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">manifest</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">archive</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">descriptors</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">&lt;!-- 因为不是web程序，所以需要另外增加assmbly.xml文件 --&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">descriptor</span>&gt;</span>assembly.xml<span class=\"tag\">&lt;/<span class=\"name\">descriptor</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">descriptors</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>make-assembly<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>single<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>assmbly.xml（放在pom.xml同目录下）文件配置如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">assembly</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>uberjar<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">formats</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">format</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">format</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">formats</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">includeBaseDirectory</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">includeBaseDirectory</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencySets</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependencySet</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 引用的第三方jar包是否解压，如果为true，则解压第三方jar包为单独的文件目录；如果为false，则是将第三方jar包打进工程jar包下 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">unpack</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">unpack</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>runtime<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependencySet</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencySets</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">fileSets</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">fileSet</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>$&#123;project.build.outputDirectory&#125;<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">outputDirectory</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">fileSet</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">fileSets</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">assembly</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>pom.xml配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-assembly-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">archive</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">manifest</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\">&lt;!-- 项目主清单（main）入口类 --&gt;</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">mainClass</span>&gt;</span>com.test.TestMain<span class=\"tag\">&lt;/<span class=\"name\">mainClass</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">manifest</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">archive</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">descriptors</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">&lt;!-- 因为不是web程序，所以需要另外增加assmbly.xml文件 --&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">descriptor</span>&gt;</span>assembly.xml<span class=\"tag\">&lt;/<span class=\"name\">descriptor</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">descriptors</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>make-assembly<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>single<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>assmbly.xml（放在pom.xml同目录下）文件配置如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">assembly</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>uberjar<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">formats</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">format</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">format</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">formats</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">includeBaseDirectory</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">includeBaseDirectory</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencySets</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependencySet</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 引用的第三方jar包是否解压，如果为true，则解压第三方jar包为单独的文件目录；如果为false，则是将第三方jar包打进工程jar包下 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">unpack</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">unpack</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>runtime<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependencySet</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencySets</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">fileSets</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">fileSet</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>$&#123;project.build.outputDirectory&#125;<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">outputDirectory</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">fileSet</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">fileSets</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">assembly</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"mysql 1044 错误","date":"2016-05-01T15:11:43.000Z","_content":"不小心把 mysql 的 'root@localhost' 权限都删了，处理过程记录\n```xml\n【报错】#1044 - Access denied for user 'root'@'localhost' to database 'mysql'\n 根据报错的内容在网上搜索出处理方法，在my.ini中的[mysqld]中添加\n #skip-grant-tables --授权表，可以在忘记密码的时候使用\n skip-external-locking --是跳过外部锁定\n skip-name-resolve --禁止DNS解析\n```\n```xml\n【报错】 #1130 - Host '127.0.0.1' is not allowed to connect to this MySQL server\n 注释掉 skip-name-resolve 后不报错了，\n 但是又是之前的问题，\n 于是打开 skip-grant-tables \n 解决，可以打开数据库了，重新为用户加上权限，保存\n```\n```xml\n【报错】#1290 -the mysql server is running with the --skip-grant-tables option so it cannot execute this statement\n字面意思是说skip-grant-tables这个开着的时候就不可更改\n网上查找答案，先执行flush privileges后再次授权，\n\nflush privileges 命令本质上的作用是将当前user和privilige表中的用户信息/权限设置从mysql库(MySQL数据库的内置库)中提取到内存里。MySQL用户数据和权限有修改后，希望在\"不重启MySQL服务\"的情况下直接生效，那么就需要执行这个命令。通常是在修改ROOT帐号的设置后，怕重启后无法再登录进来，那么直接flush之后就可以看权限设置是否生效。而不必冒太大风险。\n\n继续报原来1044的错误\n```\n```xml\n【另寻思路】关掉mysql服务，到其他安装了Mysql的服务器（前提是要知道该服务器上Mysql的root用户密码），打开[Mysql的安装目录/var/mysql]，将其中的user.frm、user.MYD、user.MYI三个文件拷贝到出问题服务器的[Mysql的安装目录/var/mysql]目录中。然后重启服务。\n\n仍然不行\n\n直接将mysql数据库中的user表中的所有N改为Y，注释掉skip-grant-tables重启服务，搞定。\n```\n```xml\n【总结】首先，所有更改配置文件的操作都需要关服务修改后重启服务才能保证配置生效。\n关闭mysql服务，在my.ini的[mysqld]中添加skip-grant-tables，打开服务，然后保证能看到用户下所有数据库后，\n根据#1044 - Access denied for user 'root'@'localhost' to database 'mysql' 这句信息的字面意思，修改'mysql'数据库中的user表，将其中为N权限的全部手动改为Y，关服务，把skip-grant-tables注释掉，重启服务。\n```\n遇到的其它错误情况\n```xml\n【报错】The user specified as a definer ('root'@'%') does not exist\n 出现该问题的原因是('root'@'%')没有找到，查看数据库，发现当前登录的是('root'@'localhost')。\n \n 报错原因：\n 数据库中的视图跟存储过程，之前是在另一个数据库使用('root'@'%')登录的时候创建的，且安全性是definer，\n 备份到新的数据库的时候，当前的('root'@'localhost')没有足够的权限去操作，所以只需把视图和存储过程高级设置中的的安全性选项改为invoker即可。\n\n DEFINER的作用是用于指明存储过程是由哪个用户定义的;\n INVOKER用于指定哪些用户有调用存储过程的权限;\n```","source":"_posts/mysql 1044 错误.md","raw":"---\ntitle: mysql 1044 错误\ndate: 2016-05-01 23:11:43\ncategories: [mysql]\ntags: [mysql]\n---\n不小心把 mysql 的 'root@localhost' 权限都删了，处理过程记录\n```xml\n【报错】#1044 - Access denied for user 'root'@'localhost' to database 'mysql'\n 根据报错的内容在网上搜索出处理方法，在my.ini中的[mysqld]中添加\n #skip-grant-tables --授权表，可以在忘记密码的时候使用\n skip-external-locking --是跳过外部锁定\n skip-name-resolve --禁止DNS解析\n```\n```xml\n【报错】 #1130 - Host '127.0.0.1' is not allowed to connect to this MySQL server\n 注释掉 skip-name-resolve 后不报错了，\n 但是又是之前的问题，\n 于是打开 skip-grant-tables \n 解决，可以打开数据库了，重新为用户加上权限，保存\n```\n```xml\n【报错】#1290 -the mysql server is running with the --skip-grant-tables option so it cannot execute this statement\n字面意思是说skip-grant-tables这个开着的时候就不可更改\n网上查找答案，先执行flush privileges后再次授权，\n\nflush privileges 命令本质上的作用是将当前user和privilige表中的用户信息/权限设置从mysql库(MySQL数据库的内置库)中提取到内存里。MySQL用户数据和权限有修改后，希望在\"不重启MySQL服务\"的情况下直接生效，那么就需要执行这个命令。通常是在修改ROOT帐号的设置后，怕重启后无法再登录进来，那么直接flush之后就可以看权限设置是否生效。而不必冒太大风险。\n\n继续报原来1044的错误\n```\n```xml\n【另寻思路】关掉mysql服务，到其他安装了Mysql的服务器（前提是要知道该服务器上Mysql的root用户密码），打开[Mysql的安装目录/var/mysql]，将其中的user.frm、user.MYD、user.MYI三个文件拷贝到出问题服务器的[Mysql的安装目录/var/mysql]目录中。然后重启服务。\n\n仍然不行\n\n直接将mysql数据库中的user表中的所有N改为Y，注释掉skip-grant-tables重启服务，搞定。\n```\n```xml\n【总结】首先，所有更改配置文件的操作都需要关服务修改后重启服务才能保证配置生效。\n关闭mysql服务，在my.ini的[mysqld]中添加skip-grant-tables，打开服务，然后保证能看到用户下所有数据库后，\n根据#1044 - Access denied for user 'root'@'localhost' to database 'mysql' 这句信息的字面意思，修改'mysql'数据库中的user表，将其中为N权限的全部手动改为Y，关服务，把skip-grant-tables注释掉，重启服务。\n```\n遇到的其它错误情况\n```xml\n【报错】The user specified as a definer ('root'@'%') does not exist\n 出现该问题的原因是('root'@'%')没有找到，查看数据库，发现当前登录的是('root'@'localhost')。\n \n 报错原因：\n 数据库中的视图跟存储过程，之前是在另一个数据库使用('root'@'%')登录的时候创建的，且安全性是definer，\n 备份到新的数据库的时候，当前的('root'@'localhost')没有足够的权限去操作，所以只需把视图和存储过程高级设置中的的安全性选项改为invoker即可。\n\n DEFINER的作用是用于指明存储过程是由哪个用户定义的;\n INVOKER用于指定哪些用户有调用存储过程的权限;\n```","slug":"mysql 1044 错误","published":1,"updated":"2016-12-29T09:14:01.123Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou58001vpo2y0t202g46","content":"<p>不小心把 mysql 的 ‘root@localhost’ 权限都删了，处理过程记录<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">【报错】#1044 - Access denied for user 'root'@'localhost' to database 'mysql'</div><div class=\"line\"> 根据报错的内容在网上搜索出处理方法，在my.ini中的[mysqld]中添加</div><div class=\"line\"> #skip-grant-tables --授权表，可以在忘记密码的时候使用</div><div class=\"line\"> skip-external-locking --是跳过外部锁定</div><div class=\"line\"> skip-name-resolve --禁止DNS解析</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">【报错】 #1130 - Host '127.0.0.1' is not allowed to connect to this MySQL server</div><div class=\"line\"> 注释掉 skip-name-resolve 后不报错了，</div><div class=\"line\"> 但是又是之前的问题，</div><div class=\"line\"> 于是打开 skip-grant-tables </div><div class=\"line\"> 解决，可以打开数据库了，重新为用户加上权限，保存</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">【报错】#1290 -the mysql server is running with the --skip-grant-tables option so it cannot execute this statement</div><div class=\"line\">字面意思是说skip-grant-tables这个开着的时候就不可更改</div><div class=\"line\">网上查找答案，先执行flush privileges后再次授权，</div><div class=\"line\"></div><div class=\"line\">flush privileges 命令本质上的作用是将当前user和privilige表中的用户信息/权限设置从mysql库(MySQL数据库的内置库)中提取到内存里。MySQL用户数据和权限有修改后，希望在\"不重启MySQL服务\"的情况下直接生效，那么就需要执行这个命令。通常是在修改ROOT帐号的设置后，怕重启后无法再登录进来，那么直接flush之后就可以看权限设置是否生效。而不必冒太大风险。</div><div class=\"line\"></div><div class=\"line\">继续报原来1044的错误</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">【另寻思路】关掉mysql服务，到其他安装了Mysql的服务器（前提是要知道该服务器上Mysql的root用户密码），打开[Mysql的安装目录/var/mysql]，将其中的user.frm、user.MYD、user.MYI三个文件拷贝到出问题服务器的[Mysql的安装目录/var/mysql]目录中。然后重启服务。</div><div class=\"line\"></div><div class=\"line\">仍然不行</div><div class=\"line\"></div><div class=\"line\">直接将mysql数据库中的user表中的所有N改为Y，注释掉skip-grant-tables重启服务，搞定。</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">【总结】首先，所有更改配置文件的操作都需要关服务修改后重启服务才能保证配置生效。</div><div class=\"line\">关闭mysql服务，在my.ini的[mysqld]中添加skip-grant-tables，打开服务，然后保证能看到用户下所有数据库后，</div><div class=\"line\">根据#1044 - Access denied for user 'root'@'localhost' to database 'mysql' 这句信息的字面意思，修改'mysql'数据库中的user表，将其中为N权限的全部手动改为Y，关服务，把skip-grant-tables注释掉，重启服务。</div></pre></td></tr></table></figure>\n<p>遇到的其它错误情况<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">【报错】The user specified as a definer ('root'@'%') does not exist</div><div class=\"line\"> 出现该问题的原因是('root'@'%')没有找到，查看数据库，发现当前登录的是('root'@'localhost')。</div><div class=\"line\"> </div><div class=\"line\"> 报错原因：</div><div class=\"line\"> 数据库中的视图跟存储过程，之前是在另一个数据库使用('root'@'%')登录的时候创建的，且安全性是definer，</div><div class=\"line\"> 备份到新的数据库的时候，当前的('root'@'localhost')没有足够的权限去操作，所以只需把视图和存储过程高级设置中的的安全性选项改为invoker即可。</div><div class=\"line\"></div><div class=\"line\"> DEFINER的作用是用于指明存储过程是由哪个用户定义的;</div><div class=\"line\"> INVOKER用于指定哪些用户有调用存储过程的权限;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>不小心把 mysql 的 ‘root@localhost’ 权限都删了，处理过程记录<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">【报错】#1044 - Access denied for user 'root'@'localhost' to database 'mysql'</div><div class=\"line\"> 根据报错的内容在网上搜索出处理方法，在my.ini中的[mysqld]中添加</div><div class=\"line\"> #skip-grant-tables --授权表，可以在忘记密码的时候使用</div><div class=\"line\"> skip-external-locking --是跳过外部锁定</div><div class=\"line\"> skip-name-resolve --禁止DNS解析</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">【报错】 #1130 - Host '127.0.0.1' is not allowed to connect to this MySQL server</div><div class=\"line\"> 注释掉 skip-name-resolve 后不报错了，</div><div class=\"line\"> 但是又是之前的问题，</div><div class=\"line\"> 于是打开 skip-grant-tables </div><div class=\"line\"> 解决，可以打开数据库了，重新为用户加上权限，保存</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">【报错】#1290 -the mysql server is running with the --skip-grant-tables option so it cannot execute this statement</div><div class=\"line\">字面意思是说skip-grant-tables这个开着的时候就不可更改</div><div class=\"line\">网上查找答案，先执行flush privileges后再次授权，</div><div class=\"line\"></div><div class=\"line\">flush privileges 命令本质上的作用是将当前user和privilige表中的用户信息/权限设置从mysql库(MySQL数据库的内置库)中提取到内存里。MySQL用户数据和权限有修改后，希望在\"不重启MySQL服务\"的情况下直接生效，那么就需要执行这个命令。通常是在修改ROOT帐号的设置后，怕重启后无法再登录进来，那么直接flush之后就可以看权限设置是否生效。而不必冒太大风险。</div><div class=\"line\"></div><div class=\"line\">继续报原来1044的错误</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">【另寻思路】关掉mysql服务，到其他安装了Mysql的服务器（前提是要知道该服务器上Mysql的root用户密码），打开[Mysql的安装目录/var/mysql]，将其中的user.frm、user.MYD、user.MYI三个文件拷贝到出问题服务器的[Mysql的安装目录/var/mysql]目录中。然后重启服务。</div><div class=\"line\"></div><div class=\"line\">仍然不行</div><div class=\"line\"></div><div class=\"line\">直接将mysql数据库中的user表中的所有N改为Y，注释掉skip-grant-tables重启服务，搞定。</div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">【总结】首先，所有更改配置文件的操作都需要关服务修改后重启服务才能保证配置生效。</div><div class=\"line\">关闭mysql服务，在my.ini的[mysqld]中添加skip-grant-tables，打开服务，然后保证能看到用户下所有数据库后，</div><div class=\"line\">根据#1044 - Access denied for user 'root'@'localhost' to database 'mysql' 这句信息的字面意思，修改'mysql'数据库中的user表，将其中为N权限的全部手动改为Y，关服务，把skip-grant-tables注释掉，重启服务。</div></pre></td></tr></table></figure>\n<p>遇到的其它错误情况<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">【报错】The user specified as a definer ('root'@'%') does not exist</div><div class=\"line\"> 出现该问题的原因是('root'@'%')没有找到，查看数据库，发现当前登录的是('root'@'localhost')。</div><div class=\"line\"> </div><div class=\"line\"> 报错原因：</div><div class=\"line\"> 数据库中的视图跟存储过程，之前是在另一个数据库使用('root'@'%')登录的时候创建的，且安全性是definer，</div><div class=\"line\"> 备份到新的数据库的时候，当前的('root'@'localhost')没有足够的权限去操作，所以只需把视图和存储过程高级设置中的的安全性选项改为invoker即可。</div><div class=\"line\"></div><div class=\"line\"> DEFINER的作用是用于指明存储过程是由哪个用户定义的;</div><div class=\"line\"> INVOKER用于指定哪些用户有调用存储过程的权限;</div></pre></td></tr></table></figure></p>\n"},{"title":"open implementation异常退出","date":"2016-07-17T06:27:48.000Z","_content":"eclipse使用Ctrl+鼠标点击open implementation和open super implementation时会出现eclipse异常退出的现象，后来发现是谷歌输入法导致的冲突，卸载换个输入法就好了","source":"_posts/open implementation异常退出.md","raw":"---\ntitle: open implementation异常退出\ndate: 2016-07-17 14:27:48\ncategories: [eclipse]\ntags: [eclipse]\n---\neclipse使用Ctrl+鼠标点击open implementation和open super implementation时会出现eclipse异常退出的现象，后来发现是谷歌输入法导致的冲突，卸载换个输入法就好了","slug":"open implementation异常退出","published":1,"updated":"2017-01-16T06:30:35.019Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou5a001ypo2y993uokh4","content":"<p>eclipse使用Ctrl+鼠标点击open implementation和open super implementation时会出现eclipse异常退出的现象，后来发现是谷歌输入法导致的冲突，卸载换个输入法就好了</p>\n","excerpt":"","more":"<p>eclipse使用Ctrl+鼠标点击open implementation和open super implementation时会出现eclipse异常退出的现象，后来发现是谷歌输入法导致的冲突，卸载换个输入法就好了</p>\n"},{"title":"tomcat配置https单/双向验证","date":"2016-06-12T02:51:28.000Z","_content":"#### **tomcat配置https双向验证**\n\n**以windows为例，进入cmd终端，用命令切换进入%JAVA_HOME%/bin目录**\n\n**1.为服务器生成证书**\n```\nkeytool -genkey -v -alias tomcat -keyalg RSA -keystore D:\\home\\tomcat.keystore -validity 36500\n```\n**参数简要说明：**\n```\n“D:\\home\\tomcat.keystore” 表示证书文件的保存路径\ntomcat.keystore 表示证书文件名称\n“-validity 36500” 表示证书有效期，36500表示100年，默认值是90天 “tomcat”为自定义证书名称\n```\n**输入keystore密码（必填项）**\n　　此处需要输入大于6个字符的字符串\n**您的名字与姓氏是什么？（必填项）**\n　　必须是TOMCAT部署主机的域名或者IP[如：baidu.com 或者 119.75.217.109]（就是你将来要在浏览器中输入的访问地址）\n**后面的那些都可以不填，直接敲回车，最后的主密码建议与之前keystore的密码一致）事例如下：**\n```\nC:\\Windows\\system32>keytool -genkey -v -alias tomcat -keyalg RSA -keystore D:\\home\\tomcat.keystore -validity 36500\n输入keystore密码：123456\n再次输入新密码：123456\n您的名字与姓氏是什么？\n  [Unknown]：  baidu.com\n您的组织单位名称是什么？\n  [Unknown]：  \n您的组织名称是什么？\n  [Unknown]：  \n您所在的城市或区域名称是什么？\n  [Unknown]：  \n您所在的州或省份名称是什么？\n  [Unknown]：  \n该单位的两字母国家代码是什么\n  [Unknown]：  CN\nCN=baidu.com, OU=, O=, L=, ST=, C=CN 正确吗？  [否]：  y\n正在为以下对象生成 1,024 位 RSA 密钥对和自签名证书 (SHA1withRSA)（有效期为 36,500 天）:\n         CN=baidu.com, OU=, O=, L=, ST=, C=CN\n输入<tomcat>的主密码\n        （如果和 keystore 密码相同，按回车）：\n[正在存储 D:\\home\\tomcat.keystore]\nC:\\Windows\\system32>\n```\n **2.为客户端生成证书（需要PKCS12格式）**\n```\nkeytool -genkey -v -alias mykey -keyalg RSA -storetype PKCS12 -keystore D:\\home\\client.key.p12\n```\n```\nC:\\Windows\\system32>keytool -genkey -v -alias mykey -keyalg RSA -storetype PKCS12 -keystore D:\\home\\client.key.p12\n输入keystore密码：123456\n再次输入新密码：123456\n您的名字与姓氏是什么？\n  [Unknown]：  baidu.com\n您的组织单位名称是什么？\n  [Unknown]：  \n您的组织名称是什么？\n  [Unknown]：  \n您所在的城市或区域名称是什么？\n  [Unknown]：  \n您所在的州或省份名称是什么？\n  [Unknown]：  \n该单位的两字母国家代码是什么\n  [Unknown]：  CN\nCN=baidu.com, OU=, O=, L=, ST=, C=CN 正确吗？  [否]：  y\n正在为以下对象生成 1,024 位 RSA 密钥对和自签名证书 (SHA1withRSA)（有效期为 90 天）:\n         CN=baidu.com, OU=, O=, L=, ST=, C=CN\n[正在存储 D:\\home\\client.key.p12]\nC:\\Windows\\system32>\n```\n之后，在D:\\home\\路径下，便能看到两个文件\n```\ntomcat.keystore\nclient.key.p12\n```\n**3.双击client.key.p12安装**\n　　安装需要密码，就是刚才设置的\"123456\"\n　　安装过程选择“将所有的证书放入下列存储”--“个人”，下一步直至导入完成\n　　\n**4.让服务器信任客户端证书**\n先导出客户端证书为cer格式，然后再添加到keystore中，此过程需要密码，步骤如下：\n```\n1）keytool -export -alias mykey -keystore D:\\home\\client.key.p12 -storetype PKCS12 -storepass password -rfc -file D:\\home\\client.cer\n2）keytool -import -v -file D:\\home\\client.cer -keystore D:\\home\\tomcat.keystore\n```\n**5.查看服务器的证书库**\n此时list命令查看服务器的证书库，可以看到两个证书，一个是服务器证书，一个是受信任的客户端证书\n　keytool -list -keystore D:\\home\\tomcat.keystore\n　\n**6.导出服务端证书为cer格式**\n　keytool -keystore D:\\home\\tomcat.keystore -export -alias tomcat -file D:\\home\\tomcat.cer\n\n**7.安装服务端证书**\n双击，安装到“将所有的证书放入下列存储”--“受信任的根证书颁发机构”\n\n**8.配置Tomcat服务器**\n打开Tomcat根目录下的/conf/server.xml，找到Connector port=\"8443\"配置段，修改为如下：\n```XML\n<Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n\tSSLEnabled=\"true\" maxThreads=\"150\" scheme=\"https\"\n\tsecure=\"true\" clientAuth=\"true\" sslProtocol=\"TLS\"\n\tkeystoreFile=\"D:\\\\home\\\\tomcat.keystore\" keystorePass=\"123456\"\n\ttruststoreFile=\"D:\\\\home\\\\tomcat.keystore\" truststorePass=\"123456\" />\n```\n**属性说明：**\n　clientAuth:设置是否双向验证，默认为false，设置为true代表双向验证\n　keystoreFile:服务器证书文件路径\n　keystorePass:服务器证书密码\n　truststoreFile:用来验证客户端证书的根证书，此例中就是服务器证书\n　truststorePass:根证书密码\n\n**9.最后在项目的web.xml中 </web-app> 前加入，之后就可以用8443端口访问https请求了**\n```XML\n<security-constraint>\n\t<web-resource-collection>\n\t\t<web-resource-name>Protected Context</web-resource-name>\n\t\t<url-pattern>/*</url-pattern>\n\t</web-resource-collection>\n\t<user-data-constraint>\n\t\t<transport-guarantee>CONFIDENTIAL</transport-guarantee>\n\t</user-data-constraint>\n</security-constraint>\n```\n\n#### **省去上方的2、3、4、5步骤即为单项配置**","source":"_posts/tomcat配置https单-双向验证.md","raw":"---\ntitle: tomcat配置https单/双向验证\ndate: 2016-06-12 10:51:28\ncategories: [Java]\ntags: [Java,Tomcat]\n---\n#### **tomcat配置https双向验证**\n\n**以windows为例，进入cmd终端，用命令切换进入%JAVA_HOME%/bin目录**\n\n**1.为服务器生成证书**\n```\nkeytool -genkey -v -alias tomcat -keyalg RSA -keystore D:\\home\\tomcat.keystore -validity 36500\n```\n**参数简要说明：**\n```\n“D:\\home\\tomcat.keystore” 表示证书文件的保存路径\ntomcat.keystore 表示证书文件名称\n“-validity 36500” 表示证书有效期，36500表示100年，默认值是90天 “tomcat”为自定义证书名称\n```\n**输入keystore密码（必填项）**\n　　此处需要输入大于6个字符的字符串\n**您的名字与姓氏是什么？（必填项）**\n　　必须是TOMCAT部署主机的域名或者IP[如：baidu.com 或者 119.75.217.109]（就是你将来要在浏览器中输入的访问地址）\n**后面的那些都可以不填，直接敲回车，最后的主密码建议与之前keystore的密码一致）事例如下：**\n```\nC:\\Windows\\system32>keytool -genkey -v -alias tomcat -keyalg RSA -keystore D:\\home\\tomcat.keystore -validity 36500\n输入keystore密码：123456\n再次输入新密码：123456\n您的名字与姓氏是什么？\n  [Unknown]：  baidu.com\n您的组织单位名称是什么？\n  [Unknown]：  \n您的组织名称是什么？\n  [Unknown]：  \n您所在的城市或区域名称是什么？\n  [Unknown]：  \n您所在的州或省份名称是什么？\n  [Unknown]：  \n该单位的两字母国家代码是什么\n  [Unknown]：  CN\nCN=baidu.com, OU=, O=, L=, ST=, C=CN 正确吗？  [否]：  y\n正在为以下对象生成 1,024 位 RSA 密钥对和自签名证书 (SHA1withRSA)（有效期为 36,500 天）:\n         CN=baidu.com, OU=, O=, L=, ST=, C=CN\n输入<tomcat>的主密码\n        （如果和 keystore 密码相同，按回车）：\n[正在存储 D:\\home\\tomcat.keystore]\nC:\\Windows\\system32>\n```\n **2.为客户端生成证书（需要PKCS12格式）**\n```\nkeytool -genkey -v -alias mykey -keyalg RSA -storetype PKCS12 -keystore D:\\home\\client.key.p12\n```\n```\nC:\\Windows\\system32>keytool -genkey -v -alias mykey -keyalg RSA -storetype PKCS12 -keystore D:\\home\\client.key.p12\n输入keystore密码：123456\n再次输入新密码：123456\n您的名字与姓氏是什么？\n  [Unknown]：  baidu.com\n您的组织单位名称是什么？\n  [Unknown]：  \n您的组织名称是什么？\n  [Unknown]：  \n您所在的城市或区域名称是什么？\n  [Unknown]：  \n您所在的州或省份名称是什么？\n  [Unknown]：  \n该单位的两字母国家代码是什么\n  [Unknown]：  CN\nCN=baidu.com, OU=, O=, L=, ST=, C=CN 正确吗？  [否]：  y\n正在为以下对象生成 1,024 位 RSA 密钥对和自签名证书 (SHA1withRSA)（有效期为 90 天）:\n         CN=baidu.com, OU=, O=, L=, ST=, C=CN\n[正在存储 D:\\home\\client.key.p12]\nC:\\Windows\\system32>\n```\n之后，在D:\\home\\路径下，便能看到两个文件\n```\ntomcat.keystore\nclient.key.p12\n```\n**3.双击client.key.p12安装**\n　　安装需要密码，就是刚才设置的\"123456\"\n　　安装过程选择“将所有的证书放入下列存储”--“个人”，下一步直至导入完成\n　　\n**4.让服务器信任客户端证书**\n先导出客户端证书为cer格式，然后再添加到keystore中，此过程需要密码，步骤如下：\n```\n1）keytool -export -alias mykey -keystore D:\\home\\client.key.p12 -storetype PKCS12 -storepass password -rfc -file D:\\home\\client.cer\n2）keytool -import -v -file D:\\home\\client.cer -keystore D:\\home\\tomcat.keystore\n```\n**5.查看服务器的证书库**\n此时list命令查看服务器的证书库，可以看到两个证书，一个是服务器证书，一个是受信任的客户端证书\n　keytool -list -keystore D:\\home\\tomcat.keystore\n　\n**6.导出服务端证书为cer格式**\n　keytool -keystore D:\\home\\tomcat.keystore -export -alias tomcat -file D:\\home\\tomcat.cer\n\n**7.安装服务端证书**\n双击，安装到“将所有的证书放入下列存储”--“受信任的根证书颁发机构”\n\n**8.配置Tomcat服务器**\n打开Tomcat根目录下的/conf/server.xml，找到Connector port=\"8443\"配置段，修改为如下：\n```XML\n<Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n\tSSLEnabled=\"true\" maxThreads=\"150\" scheme=\"https\"\n\tsecure=\"true\" clientAuth=\"true\" sslProtocol=\"TLS\"\n\tkeystoreFile=\"D:\\\\home\\\\tomcat.keystore\" keystorePass=\"123456\"\n\ttruststoreFile=\"D:\\\\home\\\\tomcat.keystore\" truststorePass=\"123456\" />\n```\n**属性说明：**\n　clientAuth:设置是否双向验证，默认为false，设置为true代表双向验证\n　keystoreFile:服务器证书文件路径\n　keystorePass:服务器证书密码\n　truststoreFile:用来验证客户端证书的根证书，此例中就是服务器证书\n　truststorePass:根证书密码\n\n**9.最后在项目的web.xml中 </web-app> 前加入，之后就可以用8443端口访问https请求了**\n```XML\n<security-constraint>\n\t<web-resource-collection>\n\t\t<web-resource-name>Protected Context</web-resource-name>\n\t\t<url-pattern>/*</url-pattern>\n\t</web-resource-collection>\n\t<user-data-constraint>\n\t\t<transport-guarantee>CONFIDENTIAL</transport-guarantee>\n\t</user-data-constraint>\n</security-constraint>\n```\n\n#### **省去上方的2、3、4、5步骤即为单项配置**","slug":"tomcat配置https单-双向验证","published":1,"updated":"2017-01-17T02:30:33.964Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou5c0023po2yyzb49obd","content":"<h4 id=\"tomcat配置https双向验证\"><a href=\"#tomcat配置https双向验证\" class=\"headerlink\" title=\"tomcat配置https双向验证\"></a><strong>tomcat配置https双向验证</strong></h4><p><strong>以windows为例，进入cmd终端，用命令切换进入%JAVA_HOME%/bin目录</strong></p>\n<p><strong>1.为服务器生成证书</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -genkey -v -alias tomcat -keyalg RSA -keystore D:\\home\\tomcat.keystore -validity 36500</div></pre></td></tr></table></figure></p>\n<p><strong>参数简要说明：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">“D:\\home\\tomcat.keystore” 表示证书文件的保存路径</div><div class=\"line\">tomcat.keystore 表示证书文件名称</div><div class=\"line\">“-validity 36500” 表示证书有效期，36500表示100年，默认值是90天 “tomcat”为自定义证书名称</div></pre></td></tr></table></figure></p>\n<p><strong>输入keystore密码（必填项）</strong><br>　　此处需要输入大于6个字符的字符串<br><strong>您的名字与姓氏是什么？（必填项）</strong><br>　　必须是TOMCAT部署主机的域名或者IP[如：baidu.com 或者 119.75.217.109]（就是你将来要在浏览器中输入的访问地址）<br><strong>后面的那些都可以不填，直接敲回车，最后的主密码建议与之前keystore的密码一致）事例如下：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Windows\\system32&gt;keytool -genkey -v -alias tomcat -keyalg RSA -keystore D:\\home\\tomcat.keystore -validity 36500</div><div class=\"line\">输入keystore密码：123456</div><div class=\"line\">再次输入新密码：123456</div><div class=\"line\">您的名字与姓氏是什么？</div><div class=\"line\">  [Unknown]：  baidu.com</div><div class=\"line\">您的组织单位名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您的组织名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您所在的城市或区域名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您所在的州或省份名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">该单位的两字母国家代码是什么</div><div class=\"line\">  [Unknown]：  CN</div><div class=\"line\">CN=baidu.com, OU=, O=, L=, ST=, C=CN 正确吗？  [否]：  y</div><div class=\"line\">正在为以下对象生成 1,024 位 RSA 密钥对和自签名证书 (SHA1withRSA)（有效期为 36,500 天）:</div><div class=\"line\">         CN=baidu.com, OU=, O=, L=, ST=, C=CN</div><div class=\"line\">输入&lt;tomcat&gt;的主密码</div><div class=\"line\">        （如果和 keystore 密码相同，按回车）：</div><div class=\"line\">[正在存储 D:\\home\\tomcat.keystore]</div><div class=\"line\">C:\\Windows\\system32&gt;</div></pre></td></tr></table></figure></p>\n<p> <strong>2.为客户端生成证书（需要PKCS12格式）</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -genkey -v -alias mykey -keyalg RSA -storetype PKCS12 -keystore D:\\home\\client.key.p12</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Windows\\system32&gt;keytool -genkey -v -alias mykey -keyalg RSA -storetype PKCS12 -keystore D:\\home\\client.key.p12</div><div class=\"line\">输入keystore密码：123456</div><div class=\"line\">再次输入新密码：123456</div><div class=\"line\">您的名字与姓氏是什么？</div><div class=\"line\">  [Unknown]：  baidu.com</div><div class=\"line\">您的组织单位名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您的组织名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您所在的城市或区域名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您所在的州或省份名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">该单位的两字母国家代码是什么</div><div class=\"line\">  [Unknown]：  CN</div><div class=\"line\">CN=baidu.com, OU=, O=, L=, ST=, C=CN 正确吗？  [否]：  y</div><div class=\"line\">正在为以下对象生成 1,024 位 RSA 密钥对和自签名证书 (SHA1withRSA)（有效期为 90 天）:</div><div class=\"line\">         CN=baidu.com, OU=, O=, L=, ST=, C=CN</div><div class=\"line\">[正在存储 D:\\home\\client.key.p12]</div><div class=\"line\">C:\\Windows\\system32&gt;</div></pre></td></tr></table></figure>\n<p>之后，在D:\\home\\路径下，便能看到两个文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tomcat.keystore</div><div class=\"line\">client.key.p12</div></pre></td></tr></table></figure></p>\n<p><strong>3.双击client.key.p12安装</strong><br>　　安装需要密码，就是刚才设置的”123456”<br>　　安装过程选择“将所有的证书放入下列存储”–“个人”，下一步直至导入完成<br>　　<br><strong>4.让服务器信任客户端证书</strong><br>先导出客户端证书为cer格式，然后再添加到keystore中，此过程需要密码，步骤如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">1）keytool -export -alias mykey -keystore D:\\home\\client.key.p12 -storetype PKCS12 -storepass password -rfc -file D:\\home\\client.cer</div><div class=\"line\">2）keytool -import -v -file D:\\home\\client.cer -keystore D:\\home\\tomcat.keystore</div></pre></td></tr></table></figure></p>\n<p><strong>5.查看服务器的证书库</strong><br>此时list命令查看服务器的证书库，可以看到两个证书，一个是服务器证书，一个是受信任的客户端证书<br>　keytool -list -keystore D:\\home\\tomcat.keystore<br>　<br><strong>6.导出服务端证书为cer格式</strong><br>　keytool -keystore D:\\home\\tomcat.keystore -export -alias tomcat -file D:\\home\\tomcat.cer</p>\n<p><strong>7.安装服务端证书</strong><br>双击，安装到“将所有的证书放入下列存储”–“受信任的根证书颁发机构”</p>\n<p><strong>8.配置Tomcat服务器</strong><br>打开Tomcat根目录下的/conf/server.xml，找到Connector port=”8443”配置段，修改为如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8443\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span></span></div><div class=\"line\">\t<span class=\"attr\">SSLEnabled</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"150\"</span> <span class=\"attr\">scheme</span>=<span class=\"string\">\"https\"</span></div><div class=\"line\">\t<span class=\"attr\">secure</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">clientAuth</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">sslProtocol</span>=<span class=\"string\">\"TLS\"</span></div><div class=\"line\">\t<span class=\"attr\">keystoreFile</span>=<span class=\"string\">\"D:\\\\home\\\\tomcat.keystore\"</span> <span class=\"attr\">keystorePass</span>=<span class=\"string\">\"123456\"</span></div><div class=\"line\">\t<span class=\"attr\">truststoreFile</span>=<span class=\"string\">\"D:\\\\home\\\\tomcat.keystore\"</span> <span class=\"attr\">truststorePass</span>=<span class=\"string\">\"123456\"</span> /&gt;</div></pre></td></tr></table></figure></p>\n<p><strong>属性说明：</strong><br>　clientAuth:设置是否双向验证，默认为false，设置为true代表双向验证<br>　keystoreFile:服务器证书文件路径<br>　keystorePass:服务器证书密码<br>　truststoreFile:用来验证客户端证书的根证书，此例中就是服务器证书<br>　truststorePass:根证书密码</p>\n<p><strong>9.最后在项目的web.xml中  前加入，之后就可以用8443端口访问https请求了</strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">security-constraint</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">web-resource-collection</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">web-resource-name</span>&gt;</span>Protected Context<span class=\"tag\">&lt;/<span class=\"name\">web-resource-name</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">web-resource-collection</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">user-data-constraint</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">transport-guarantee</span>&gt;</span>CONFIDENTIAL<span class=\"tag\">&lt;/<span class=\"name\">transport-guarantee</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">user-data-constraint</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">security-constraint</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"省去上方的2、3、4、5步骤即为单项配置\"><a href=\"#省去上方的2、3、4、5步骤即为单项配置\" class=\"headerlink\" title=\"省去上方的2、3、4、5步骤即为单项配置\"></a><strong>省去上方的2、3、4、5步骤即为单项配置</strong></h4>","excerpt":"","more":"<h4 id=\"tomcat配置https双向验证\"><a href=\"#tomcat配置https双向验证\" class=\"headerlink\" title=\"tomcat配置https双向验证\"></a><strong>tomcat配置https双向验证</strong></h4><p><strong>以windows为例，进入cmd终端，用命令切换进入%JAVA_HOME%/bin目录</strong></p>\n<p><strong>1.为服务器生成证书</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -genkey -v -alias tomcat -keyalg RSA -keystore D:\\home\\tomcat.keystore -validity 36500</div></pre></td></tr></table></figure></p>\n<p><strong>参数简要说明：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">“D:\\home\\tomcat.keystore” 表示证书文件的保存路径</div><div class=\"line\">tomcat.keystore 表示证书文件名称</div><div class=\"line\">“-validity 36500” 表示证书有效期，36500表示100年，默认值是90天 “tomcat”为自定义证书名称</div></pre></td></tr></table></figure></p>\n<p><strong>输入keystore密码（必填项）</strong><br>　　此处需要输入大于6个字符的字符串<br><strong>您的名字与姓氏是什么？（必填项）</strong><br>　　必须是TOMCAT部署主机的域名或者IP[如：baidu.com 或者 119.75.217.109]（就是你将来要在浏览器中输入的访问地址）<br><strong>后面的那些都可以不填，直接敲回车，最后的主密码建议与之前keystore的密码一致）事例如下：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Windows\\system32&gt;keytool -genkey -v -alias tomcat -keyalg RSA -keystore D:\\home\\tomcat.keystore -validity 36500</div><div class=\"line\">输入keystore密码：123456</div><div class=\"line\">再次输入新密码：123456</div><div class=\"line\">您的名字与姓氏是什么？</div><div class=\"line\">  [Unknown]：  baidu.com</div><div class=\"line\">您的组织单位名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您的组织名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您所在的城市或区域名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您所在的州或省份名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">该单位的两字母国家代码是什么</div><div class=\"line\">  [Unknown]：  CN</div><div class=\"line\">CN=baidu.com, OU=, O=, L=, ST=, C=CN 正确吗？  [否]：  y</div><div class=\"line\">正在为以下对象生成 1,024 位 RSA 密钥对和自签名证书 (SHA1withRSA)（有效期为 36,500 天）:</div><div class=\"line\">         CN=baidu.com, OU=, O=, L=, ST=, C=CN</div><div class=\"line\">输入&lt;tomcat&gt;的主密码</div><div class=\"line\">        （如果和 keystore 密码相同，按回车）：</div><div class=\"line\">[正在存储 D:\\home\\tomcat.keystore]</div><div class=\"line\">C:\\Windows\\system32&gt;</div></pre></td></tr></table></figure></p>\n<p> <strong>2.为客户端生成证书（需要PKCS12格式）</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -genkey -v -alias mykey -keyalg RSA -storetype PKCS12 -keystore D:\\home\\client.key.p12</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Windows\\system32&gt;keytool -genkey -v -alias mykey -keyalg RSA -storetype PKCS12 -keystore D:\\home\\client.key.p12</div><div class=\"line\">输入keystore密码：123456</div><div class=\"line\">再次输入新密码：123456</div><div class=\"line\">您的名字与姓氏是什么？</div><div class=\"line\">  [Unknown]：  baidu.com</div><div class=\"line\">您的组织单位名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您的组织名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您所在的城市或区域名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">您所在的州或省份名称是什么？</div><div class=\"line\">  [Unknown]：  </div><div class=\"line\">该单位的两字母国家代码是什么</div><div class=\"line\">  [Unknown]：  CN</div><div class=\"line\">CN=baidu.com, OU=, O=, L=, ST=, C=CN 正确吗？  [否]：  y</div><div class=\"line\">正在为以下对象生成 1,024 位 RSA 密钥对和自签名证书 (SHA1withRSA)（有效期为 90 天）:</div><div class=\"line\">         CN=baidu.com, OU=, O=, L=, ST=, C=CN</div><div class=\"line\">[正在存储 D:\\home\\client.key.p12]</div><div class=\"line\">C:\\Windows\\system32&gt;</div></pre></td></tr></table></figure>\n<p>之后，在D:\\home\\路径下，便能看到两个文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tomcat.keystore</div><div class=\"line\">client.key.p12</div></pre></td></tr></table></figure></p>\n<p><strong>3.双击client.key.p12安装</strong><br>　　安装需要密码，就是刚才设置的”123456”<br>　　安装过程选择“将所有的证书放入下列存储”–“个人”，下一步直至导入完成<br>　　<br><strong>4.让服务器信任客户端证书</strong><br>先导出客户端证书为cer格式，然后再添加到keystore中，此过程需要密码，步骤如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">1）keytool -export -alias mykey -keystore D:\\home\\client.key.p12 -storetype PKCS12 -storepass password -rfc -file D:\\home\\client.cer</div><div class=\"line\">2）keytool -import -v -file D:\\home\\client.cer -keystore D:\\home\\tomcat.keystore</div></pre></td></tr></table></figure></p>\n<p><strong>5.查看服务器的证书库</strong><br>此时list命令查看服务器的证书库，可以看到两个证书，一个是服务器证书，一个是受信任的客户端证书<br>　keytool -list -keystore D:\\home\\tomcat.keystore<br>　<br><strong>6.导出服务端证书为cer格式</strong><br>　keytool -keystore D:\\home\\tomcat.keystore -export -alias tomcat -file D:\\home\\tomcat.cer</p>\n<p><strong>7.安装服务端证书</strong><br>双击，安装到“将所有的证书放入下列存储”–“受信任的根证书颁发机构”</p>\n<p><strong>8.配置Tomcat服务器</strong><br>打开Tomcat根目录下的/conf/server.xml，找到Connector port=”8443”配置段，修改为如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8443\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span></div><div class=\"line\">\t<span class=\"attr\">SSLEnabled</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"150\"</span> <span class=\"attr\">scheme</span>=<span class=\"string\">\"https\"</span></div><div class=\"line\">\t<span class=\"attr\">secure</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">clientAuth</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">sslProtocol</span>=<span class=\"string\">\"TLS\"</span></div><div class=\"line\">\t<span class=\"attr\">keystoreFile</span>=<span class=\"string\">\"D:\\\\home\\\\tomcat.keystore\"</span> <span class=\"attr\">keystorePass</span>=<span class=\"string\">\"123456\"</span></div><div class=\"line\">\t<span class=\"attr\">truststoreFile</span>=<span class=\"string\">\"D:\\\\home\\\\tomcat.keystore\"</span> <span class=\"attr\">truststorePass</span>=<span class=\"string\">\"123456\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p><strong>属性说明：</strong><br>　clientAuth:设置是否双向验证，默认为false，设置为true代表双向验证<br>　keystoreFile:服务器证书文件路径<br>　keystorePass:服务器证书密码<br>　truststoreFile:用来验证客户端证书的根证书，此例中就是服务器证书<br>　truststorePass:根证书密码</p>\n<p><strong>9.最后在项目的web.xml中 </web-app> 前加入，之后就可以用8443端口访问https请求了</strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">security-constraint</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">web-resource-collection</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">web-resource-name</span>&gt;</span>Protected Context<span class=\"tag\">&lt;/<span class=\"name\">web-resource-name</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">web-resource-collection</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">user-data-constraint</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">transport-guarantee</span>&gt;</span>CONFIDENTIAL<span class=\"tag\">&lt;/<span class=\"name\">transport-guarantee</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">user-data-constraint</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">security-constraint</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"省去上方的2、3、4、5步骤即为单项配置\"><a href=\"#省去上方的2、3、4、5步骤即为单项配置\" class=\"headerlink\" title=\"省去上方的2、3、4、5步骤即为单项配置\"></a><strong>省去上方的2、3、4、5步骤即为单项配置</strong></h4>"},{"title":"使用kong管理api","date":"2017-06-05T06:42:16.000Z","_content":"*摘要：Kong，Mashape开源的API层。是基于Nginx_Lua模块写的。是一个基于openresty的api代理层，数据采用了 Apache Cassandra/PostgreSQL存储，并且提供了一些优秀的插件，比如验证，日志，调用频次限制等。*\n详细资料见官网：https://getkong.org\n环境：ubuntu 16.04\n1、下载kong：https://getkong.org/install/ 在此页面选择你的系统，之后再下载相应的系统版本，因为我是 unbuntu 16.04，则下载https://github.com/Mashape/kong/releases/download/0.10.3/kong-0.10.3.xenial_all.deb\n\n2、安装kong，根据官网提示，执行下面三条命令\n```\n$ sudo apt-get update\n$ sudo apt-get install openssl libpcre3 procps perl\n$ sudo dpkg -i kong-0.10.3.*.deb\n```\n3、kong的使用肯定需要存储一些自己的数据，目前支持PostgreSQL和Cassandra两种数据库，这里以postgresql为例进行安装\n\n3.1 添加postgresql源：\n```\n$ sudo touch /etc/apt/sources.list.d/pgdb.list\n$ sudo vim /etc/apt/sources.list.d/pgdb.list\n```\n3.2 将下文添加到pgdb.list中\n```\ndeb https://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\n```\n3.3 执行如下命令添加postgresql安装包的秘钥：\n```\n$ sudo wget --quiet -O - https://postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\n```\n3.4 安装\n```\nsudo apt-get update\nsudo apt-get install postgresql-9.4\n```\n3.5 验证是否成功\n```\n$ dpkg -l |grep postgresql\n```\n3.6 看到如下信息则为成功\n```\nii  pgdg-keyring                                2017.1                                     all          keyring for apt.postgresql.org\nii  postgresql-9.4                              9.4.12-1.pgdg14.04+1                       amd64        object-relational SQL database, version 9.4 server\nii  postgresql-client-9.4                       9.4.12-1.pgdg14.04+1                       amd64        front-end programs for PostgreSQL 9.4\nii  postgresql-client-common                    182.pgdg14.04+1                            all          manager for multiple PostgreSQL client versions\nii  postgresql-common                           182.pgdg14.04+1                            all          PostgreSQL database-cluster manager\nii  postgresql-contrib-9.4                      9.4.12-1.pgdg14.04+1                       amd64        additional facilities for PostgreSQL\n```\n3.7 postgres是超级管理员，类似mysql的root和sqlserver的sa，一开始是没有密码的，用超级管理员登录\n```\n$ sudo -i -u postgres\n```\n3.8 创建一个数据库\n```\ncreatedb kongdb\n```\n3.8.1 如果出现类似createdb: 无法联接到数据库 template1: 无法联接到服务器: 没有那个文件或目录\n\t服务器是否在本地运行并且在 Unix 域套接字\n\t\"/var/run/postgresql/.s.PGSQL.5432\"上准备接受联接?的错误则切回ubuntu的登录用户，执行下列操作\n```\n$ sudo service postgresql start\n$ sudo systemctl unmask postgresql\n$ sudo systemctl restart postgresql\n$ sudo service postgresql start\n```\n3.9 创建角色（这里我在psql工具中创建一直不成功不知为啥，所以用sql来创建）\n```\ncreate user kong\n```\n3.10 通过postgresql的客户端来实现\n```\npsql\n```\n3.11 为\"kong\"用户设置密码\n```\n\\password 123456\n```\n3.12 把数据库 kongdb的所有者设置为 kong\n```\nalter database kongdb owner to kong\n```\n3.13 介绍一下一些基本的命令\n```\n\\help 查看psql工具的命令\n\\q 退出\n\\du 查看所有用户（刚才创建后用这个查一下）\n\\l 查看所有数据库（同上）\n```\n3.14 用 \\q 命令退出并用kong用户登录kongdb数据库\n```\npsql -d kongdb -U kong -h 127.0.0.1 -W\n```\n3.15 这时会提示输入密码，输入刚才设置的123456即可\n\n4、为kong配置数据源，找到/usr/local/share/lua/5.1/kong/templates/中的kong_defaults.lua，将里面的pg\\_pssword = NONE改为刚才设置的123456，pg\\_database = kong改为刚才创建的kongdb，如果无意外的话，这里可以启动kong了\n```\n$ sudo kong start\n```\n5、查阅官网kong的api操作，不同版本可能参数不同，这里以0.10.x版本为例，详见： https://getkong.org/docs/0.10.x/getting-started/adding-your-api/ \n6、安装curl，如果已经装过git可能会有冲突，我这里就遇到了，记录一下\n```\n$ sudo apt-get install curl\n```\n6.1 报错\n```\ncurl : 依赖: libcurl3-gnutls (= 7.47.0-1ubuntu2) 但是 7.47.0-1ubuntu2.2 正要被安装\n```\n6.2 一开始不清楚原因，执行了$ sudo apt-get update，出现了如下错误\n```\nE: 无法获得锁 /var/lib/apt/lists/lock - open (11: 资源暂时不可用) \nE: 无法对目录 /var/lib/apt/lists/ 加锁\n```\n6.3 解决方法，强制删除\n```\n$ sudo rm /var/cache/apt/archives/lock\n\n$ sudo rm /var/lib/dpkg/lock\n```\n6.4 **6.3、6.4两个操作其实是没必要的，只是作为记录**这里说说6.1的问题，重新安装 sudo apt-get install libcurl3-gnutls是没用的，这里是包冲突，需要指定版本来安装\n```\n$ sudo apt-get install libcurl3-gnutls=7.47.0-1ubuntu2\n```\n6.5 安装完后再执行一下$ sudo apt-get install curl即可\n\n7、将业务侧的api加到kong中\n```\ncurl -i -X POST --url http://localhost:8001/apis/ --data 'name=test' --data 'upstream_url=http://192.168.0.1:8080/' --data 'uris=/'  \n```\n7.1 这里需要说明，根据官网/apis/接口request body参数说明中，hosts、uris、methods需要至少指定一个，不赘述\n7.2 name指的是在kong api中的一个名字标识，具有唯一性，这里创建了test后，不允许再创建同名，若上方命令执行两次会报错\n7.3 可以到/usr/local/kong/logs中查看日志\n\n8、然后就可以用kong来转发请求了，在https://getkong.org/docs/0.10.x/getting-started/adding-your-api/中有这么一句：\n```\nIssue the following cURL request to verify that Kong is properly forwarding requests to your API. Note that by default Kong handles proxy requests on port :8000\n```\n所以这里可以用 http://localhost:8000/ + 资源的方法访问http://192.168.0.1:8080/ 下所有的资源\n\n9、Kong的一个非常诱人的地方就是提供了大量的插件来扩展应用，通过设置不同的插件可以为服务提供各种增强的功能。执行下面命令可以查看kong的所有插件\n```\ncurl -i -X GET --url http://localhost:8001/plugins/enabled\n```\n9.1 用Rate Limiting来控制访问访问次数\n```\ncurl -i -X POST --url http://localhost:8001/apis/test/plugins/ --data \"name=rate-limiting\" --data \"config.minute=5\"  \n```\n接着随访找一个接口连续访问6次，如 http://localhost:8000/test 这个接口，第6次的时候就会提示 {\"message\": \"API rate limit exceeded\"}\n9.2 另外kong集成了Galileo和Datadog，只要有账号就可以监控一些数据，具体到各自官网了解详情，另外Runscope是收费的，没有试过。","source":"_posts/使用kong管理api.md","raw":"---\ntitle: 使用kong管理api\ndate: 2017-06-05 14:42:16\ncategories: [kong]\ntags: [kong]\n---\n*摘要：Kong，Mashape开源的API层。是基于Nginx_Lua模块写的。是一个基于openresty的api代理层，数据采用了 Apache Cassandra/PostgreSQL存储，并且提供了一些优秀的插件，比如验证，日志，调用频次限制等。*\n详细资料见官网：https://getkong.org\n环境：ubuntu 16.04\n1、下载kong：https://getkong.org/install/ 在此页面选择你的系统，之后再下载相应的系统版本，因为我是 unbuntu 16.04，则下载https://github.com/Mashape/kong/releases/download/0.10.3/kong-0.10.3.xenial_all.deb\n\n2、安装kong，根据官网提示，执行下面三条命令\n```\n$ sudo apt-get update\n$ sudo apt-get install openssl libpcre3 procps perl\n$ sudo dpkg -i kong-0.10.3.*.deb\n```\n3、kong的使用肯定需要存储一些自己的数据，目前支持PostgreSQL和Cassandra两种数据库，这里以postgresql为例进行安装\n\n3.1 添加postgresql源：\n```\n$ sudo touch /etc/apt/sources.list.d/pgdb.list\n$ sudo vim /etc/apt/sources.list.d/pgdb.list\n```\n3.2 将下文添加到pgdb.list中\n```\ndeb https://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\n```\n3.3 执行如下命令添加postgresql安装包的秘钥：\n```\n$ sudo wget --quiet -O - https://postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\n```\n3.4 安装\n```\nsudo apt-get update\nsudo apt-get install postgresql-9.4\n```\n3.5 验证是否成功\n```\n$ dpkg -l |grep postgresql\n```\n3.6 看到如下信息则为成功\n```\nii  pgdg-keyring                                2017.1                                     all          keyring for apt.postgresql.org\nii  postgresql-9.4                              9.4.12-1.pgdg14.04+1                       amd64        object-relational SQL database, version 9.4 server\nii  postgresql-client-9.4                       9.4.12-1.pgdg14.04+1                       amd64        front-end programs for PostgreSQL 9.4\nii  postgresql-client-common                    182.pgdg14.04+1                            all          manager for multiple PostgreSQL client versions\nii  postgresql-common                           182.pgdg14.04+1                            all          PostgreSQL database-cluster manager\nii  postgresql-contrib-9.4                      9.4.12-1.pgdg14.04+1                       amd64        additional facilities for PostgreSQL\n```\n3.7 postgres是超级管理员，类似mysql的root和sqlserver的sa，一开始是没有密码的，用超级管理员登录\n```\n$ sudo -i -u postgres\n```\n3.8 创建一个数据库\n```\ncreatedb kongdb\n```\n3.8.1 如果出现类似createdb: 无法联接到数据库 template1: 无法联接到服务器: 没有那个文件或目录\n\t服务器是否在本地运行并且在 Unix 域套接字\n\t\"/var/run/postgresql/.s.PGSQL.5432\"上准备接受联接?的错误则切回ubuntu的登录用户，执行下列操作\n```\n$ sudo service postgresql start\n$ sudo systemctl unmask postgresql\n$ sudo systemctl restart postgresql\n$ sudo service postgresql start\n```\n3.9 创建角色（这里我在psql工具中创建一直不成功不知为啥，所以用sql来创建）\n```\ncreate user kong\n```\n3.10 通过postgresql的客户端来实现\n```\npsql\n```\n3.11 为\"kong\"用户设置密码\n```\n\\password 123456\n```\n3.12 把数据库 kongdb的所有者设置为 kong\n```\nalter database kongdb owner to kong\n```\n3.13 介绍一下一些基本的命令\n```\n\\help 查看psql工具的命令\n\\q 退出\n\\du 查看所有用户（刚才创建后用这个查一下）\n\\l 查看所有数据库（同上）\n```\n3.14 用 \\q 命令退出并用kong用户登录kongdb数据库\n```\npsql -d kongdb -U kong -h 127.0.0.1 -W\n```\n3.15 这时会提示输入密码，输入刚才设置的123456即可\n\n4、为kong配置数据源，找到/usr/local/share/lua/5.1/kong/templates/中的kong_defaults.lua，将里面的pg\\_pssword = NONE改为刚才设置的123456，pg\\_database = kong改为刚才创建的kongdb，如果无意外的话，这里可以启动kong了\n```\n$ sudo kong start\n```\n5、查阅官网kong的api操作，不同版本可能参数不同，这里以0.10.x版本为例，详见： https://getkong.org/docs/0.10.x/getting-started/adding-your-api/ \n6、安装curl，如果已经装过git可能会有冲突，我这里就遇到了，记录一下\n```\n$ sudo apt-get install curl\n```\n6.1 报错\n```\ncurl : 依赖: libcurl3-gnutls (= 7.47.0-1ubuntu2) 但是 7.47.0-1ubuntu2.2 正要被安装\n```\n6.2 一开始不清楚原因，执行了$ sudo apt-get update，出现了如下错误\n```\nE: 无法获得锁 /var/lib/apt/lists/lock - open (11: 资源暂时不可用) \nE: 无法对目录 /var/lib/apt/lists/ 加锁\n```\n6.3 解决方法，强制删除\n```\n$ sudo rm /var/cache/apt/archives/lock\n\n$ sudo rm /var/lib/dpkg/lock\n```\n6.4 **6.3、6.4两个操作其实是没必要的，只是作为记录**这里说说6.1的问题，重新安装 sudo apt-get install libcurl3-gnutls是没用的，这里是包冲突，需要指定版本来安装\n```\n$ sudo apt-get install libcurl3-gnutls=7.47.0-1ubuntu2\n```\n6.5 安装完后再执行一下$ sudo apt-get install curl即可\n\n7、将业务侧的api加到kong中\n```\ncurl -i -X POST --url http://localhost:8001/apis/ --data 'name=test' --data 'upstream_url=http://192.168.0.1:8080/' --data 'uris=/'  \n```\n7.1 这里需要说明，根据官网/apis/接口request body参数说明中，hosts、uris、methods需要至少指定一个，不赘述\n7.2 name指的是在kong api中的一个名字标识，具有唯一性，这里创建了test后，不允许再创建同名，若上方命令执行两次会报错\n7.3 可以到/usr/local/kong/logs中查看日志\n\n8、然后就可以用kong来转发请求了，在https://getkong.org/docs/0.10.x/getting-started/adding-your-api/中有这么一句：\n```\nIssue the following cURL request to verify that Kong is properly forwarding requests to your API. Note that by default Kong handles proxy requests on port :8000\n```\n所以这里可以用 http://localhost:8000/ + 资源的方法访问http://192.168.0.1:8080/ 下所有的资源\n\n9、Kong的一个非常诱人的地方就是提供了大量的插件来扩展应用，通过设置不同的插件可以为服务提供各种增强的功能。执行下面命令可以查看kong的所有插件\n```\ncurl -i -X GET --url http://localhost:8001/plugins/enabled\n```\n9.1 用Rate Limiting来控制访问访问次数\n```\ncurl -i -X POST --url http://localhost:8001/apis/test/plugins/ --data \"name=rate-limiting\" --data \"config.minute=5\"  \n```\n接着随访找一个接口连续访问6次，如 http://localhost:8000/test 这个接口，第6次的时候就会提示 {\"message\": \"API rate limit exceeded\"}\n9.2 另外kong集成了Galileo和Datadog，只要有账号就可以监控一些数据，具体到各自官网了解详情，另外Runscope是收费的，没有试过。","slug":"使用kong管理api","published":1,"updated":"2017-06-13T01:09:57.309Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou5d0026po2y15p7myem","content":"<p><em>摘要：Kong，Mashape开源的API层。是基于Nginx_Lua模块写的。是一个基于openresty的api代理层，数据采用了 Apache Cassandra/PostgreSQL存储，并且提供了一些优秀的插件，比如验证，日志，调用频次限制等。</em><br>详细资料见官网：<a href=\"https://getkong.org\" target=\"_blank\" rel=\"external\">https://getkong.org</a><br>环境：ubuntu 16.04<br>1、下载kong：<a href=\"https://getkong.org/install/\" target=\"_blank\" rel=\"external\">https://getkong.org/install/</a> 在此页面选择你的系统，之后再下载相应的系统版本，因为我是 unbuntu 16.04，则下载<a href=\"https://github.com/Mashape/kong/releases/download/0.10.3/kong-0.10.3.xenial_all.deb\" target=\"_blank\" rel=\"external\">https://github.com/Mashape/kong/releases/download/0.10.3/kong-0.10.3.xenial_all.deb</a></p>\n<p>2、安装kong，根据官网提示，执行下面三条命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get update</div><div class=\"line\">$ sudo apt-get install openssl libpcre3 procps perl</div><div class=\"line\">$ sudo dpkg -i kong-0.10.3.*.deb</div></pre></td></tr></table></figure></p>\n<p>3、kong的使用肯定需要存储一些自己的数据，目前支持PostgreSQL和Cassandra两种数据库，这里以postgresql为例进行安装</p>\n<p>3.1 添加postgresql源：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo touch /etc/apt/sources.list.d/pgdb.list</div><div class=\"line\">$ sudo vim /etc/apt/sources.list.d/pgdb.list</div></pre></td></tr></table></figure></p>\n<p>3.2 将下文添加到pgdb.list中<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">deb https://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main</div></pre></td></tr></table></figure></p>\n<p>3.3 执行如下命令添加postgresql安装包的秘钥：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo wget --quiet -O - https://postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -</div></pre></td></tr></table></figure></p>\n<p>3.4 安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install postgresql-9.4</div></pre></td></tr></table></figure></p>\n<p>3.5 验证是否成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ dpkg -l |grep postgresql</div></pre></td></tr></table></figure></p>\n<p>3.6 看到如下信息则为成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">ii  pgdg-keyring                                2017.1                                     all          keyring for apt.postgresql.org</div><div class=\"line\">ii  postgresql-9.4                              9.4.12-1.pgdg14.04+1                       amd64        object-relational SQL database, version 9.4 server</div><div class=\"line\">ii  postgresql-client-9.4                       9.4.12-1.pgdg14.04+1                       amd64        front-end programs for PostgreSQL 9.4</div><div class=\"line\">ii  postgresql-client-common                    182.pgdg14.04+1                            all          manager for multiple PostgreSQL client versions</div><div class=\"line\">ii  postgresql-common                           182.pgdg14.04+1                            all          PostgreSQL database-cluster manager</div><div class=\"line\">ii  postgresql-contrib-9.4                      9.4.12-1.pgdg14.04+1                       amd64        additional facilities for PostgreSQL</div></pre></td></tr></table></figure></p>\n<p>3.7 postgres是超级管理员，类似mysql的root和sqlserver的sa，一开始是没有密码的，用超级管理员登录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo -i -u postgres</div></pre></td></tr></table></figure></p>\n<p>3.8 创建一个数据库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">createdb kongdb</div></pre></td></tr></table></figure></p>\n<p>3.8.1 如果出现类似createdb: 无法联接到数据库 template1: 无法联接到服务器: 没有那个文件或目录<br>    服务器是否在本地运行并且在 Unix 域套接字<br>    “/var/run/postgresql/.s.PGSQL.5432”上准备接受联接?的错误则切回ubuntu的登录用户，执行下列操作<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo service postgresql start</div><div class=\"line\">$ sudo systemctl unmask postgresql</div><div class=\"line\">$ sudo systemctl restart postgresql</div><div class=\"line\">$ sudo service postgresql start</div></pre></td></tr></table></figure></p>\n<p>3.9 创建角色（这里我在psql工具中创建一直不成功不知为啥，所以用sql来创建）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create user kong</div></pre></td></tr></table></figure></p>\n<p>3.10 通过postgresql的客户端来实现<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">psql</div></pre></td></tr></table></figure></p>\n<p>3.11 为”kong”用户设置密码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\password 123456</div></pre></td></tr></table></figure></p>\n<p>3.12 把数据库 kongdb的所有者设置为 kong<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter database kongdb owner to kong</div></pre></td></tr></table></figure></p>\n<p>3.13 介绍一下一些基本的命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\help 查看psql工具的命令</div><div class=\"line\">\\q 退出</div><div class=\"line\">\\du 查看所有用户（刚才创建后用这个查一下）</div><div class=\"line\">\\l 查看所有数据库（同上）</div></pre></td></tr></table></figure></p>\n<p>3.14 用 \\q 命令退出并用kong用户登录kongdb数据库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">psql -d kongdb -U kong -h 127.0.0.1 -W</div></pre></td></tr></table></figure></p>\n<p>3.15 这时会提示输入密码，输入刚才设置的123456即可</p>\n<p>4、为kong配置数据源，找到/usr/local/share/lua/5.1/kong/templates/中的kong_defaults.lua，将里面的pg_pssword = NONE改为刚才设置的123456，pg_database = kong改为刚才创建的kongdb，如果无意外的话，这里可以启动kong了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo kong start</div></pre></td></tr></table></figure></p>\n<p>5、查阅官网kong的api操作，不同版本可能参数不同，这里以0.10.x版本为例，详见： <a href=\"https://getkong.org/docs/0.10.x/getting-started/adding-your-api/\" target=\"_blank\" rel=\"external\">https://getkong.org/docs/0.10.x/getting-started/adding-your-api/</a><br>6、安装curl，如果已经装过git可能会有冲突，我这里就遇到了，记录一下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install curl</div></pre></td></tr></table></figure></p>\n<p>6.1 报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl : 依赖: libcurl3-gnutls (= 7.47.0-1ubuntu2) 但是 7.47.0-1ubuntu2.2 正要被安装</div></pre></td></tr></table></figure></p>\n<p>6.2 一开始不清楚原因，执行了$ sudo apt-get update，出现了如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">E: 无法获得锁 /var/lib/apt/lists/lock - open (11: 资源暂时不可用) </div><div class=\"line\">E: 无法对目录 /var/lib/apt/lists/ 加锁</div></pre></td></tr></table></figure></p>\n<p>6.3 解决方法，强制删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo rm /var/cache/apt/archives/lock</div><div class=\"line\"></div><div class=\"line\">$ sudo rm /var/lib/dpkg/lock</div></pre></td></tr></table></figure></p>\n<p>6.4 <strong>6.3、6.4两个操作其实是没必要的，只是作为记录</strong>这里说说6.1的问题，重新安装 sudo apt-get install libcurl3-gnutls是没用的，这里是包冲突，需要指定版本来安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install libcurl3-gnutls=7.47.0-1ubuntu2</div></pre></td></tr></table></figure></p>\n<p>6.5 安装完后再执行一下$ sudo apt-get install curl即可</p>\n<p>7、将业务侧的api加到kong中<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST --url http://localhost:8001/apis/ --data &apos;name=test&apos; --data &apos;upstream_url=http://192.168.0.1:8080/&apos; --data &apos;uris=/&apos;</div></pre></td></tr></table></figure></p>\n<p>7.1 这里需要说明，根据官网/apis/接口request body参数说明中，hosts、uris、methods需要至少指定一个，不赘述<br>7.2 name指的是在kong api中的一个名字标识，具有唯一性，这里创建了test后，不允许再创建同名，若上方命令执行两次会报错<br>7.3 可以到/usr/local/kong/logs中查看日志</p>\n<p>8、然后就可以用kong来转发请求了，在<a href=\"https://getkong.org/docs/0.10.x/getting-started/adding-your-api/中有这么一句：\" target=\"_blank\" rel=\"external\">https://getkong.org/docs/0.10.x/getting-started/adding-your-api/中有这么一句：</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Issue the following cURL request to verify that Kong is properly forwarding requests to your API. Note that by default Kong handles proxy requests on port :8000</div></pre></td></tr></table></figure></p>\n<p>所以这里可以用 <a href=\"http://localhost:8000/\" target=\"_blank\" rel=\"external\">http://localhost:8000/</a> + 资源的方法访问<a href=\"http://192.168.0.1:8080/\" target=\"_blank\" rel=\"external\">http://192.168.0.1:8080/</a> 下所有的资源</p>\n<p>9、Kong的一个非常诱人的地方就是提供了大量的插件来扩展应用，通过设置不同的插件可以为服务提供各种增强的功能。执行下面命令可以查看kong的所有插件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X GET --url http://localhost:8001/plugins/enabled</div></pre></td></tr></table></figure></p>\n<p>9.1 用Rate Limiting来控制访问访问次数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST --url http://localhost:8001/apis/test/plugins/ --data &quot;name=rate-limiting&quot; --data &quot;config.minute=5&quot;</div></pre></td></tr></table></figure></p>\n<p>接着随访找一个接口连续访问6次，如 <a href=\"http://localhost:8000/test\" target=\"_blank\" rel=\"external\">http://localhost:8000/test</a> 这个接口，第6次的时候就会提示 {“message”: “API rate limit exceeded”}<br>9.2 另外kong集成了Galileo和Datadog，只要有账号就可以监控一些数据，具体到各自官网了解详情，另外Runscope是收费的，没有试过。</p>\n","excerpt":"","more":"<p><em>摘要：Kong，Mashape开源的API层。是基于Nginx_Lua模块写的。是一个基于openresty的api代理层，数据采用了 Apache Cassandra/PostgreSQL存储，并且提供了一些优秀的插件，比如验证，日志，调用频次限制等。</em><br>详细资料见官网：<a href=\"https://getkong.org\">https://getkong.org</a><br>环境：ubuntu 16.04<br>1、下载kong：<a href=\"https://getkong.org/install/\">https://getkong.org/install/</a> 在此页面选择你的系统，之后再下载相应的系统版本，因为我是 unbuntu 16.04，则下载<a href=\"https://github.com/Mashape/kong/releases/download/0.10.3/kong-0.10.3.xenial_all.deb\">https://github.com/Mashape/kong/releases/download/0.10.3/kong-0.10.3.xenial_all.deb</a></p>\n<p>2、安装kong，根据官网提示，执行下面三条命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get update</div><div class=\"line\">$ sudo apt-get install openssl libpcre3 procps perl</div><div class=\"line\">$ sudo dpkg -i kong-0.10.3.*.deb</div></pre></td></tr></table></figure></p>\n<p>3、kong的使用肯定需要存储一些自己的数据，目前支持PostgreSQL和Cassandra两种数据库，这里以postgresql为例进行安装</p>\n<p>3.1 添加postgresql源：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo touch /etc/apt/sources.list.d/pgdb.list</div><div class=\"line\">$ sudo vim /etc/apt/sources.list.d/pgdb.list</div></pre></td></tr></table></figure></p>\n<p>3.2 将下文添加到pgdb.list中<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">deb https://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main</div></pre></td></tr></table></figure></p>\n<p>3.3 执行如下命令添加postgresql安装包的秘钥：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo wget --quiet -O - https://postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -</div></pre></td></tr></table></figure></p>\n<p>3.4 安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install postgresql-9.4</div></pre></td></tr></table></figure></p>\n<p>3.5 验证是否成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ dpkg -l |grep postgresql</div></pre></td></tr></table></figure></p>\n<p>3.6 看到如下信息则为成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">ii  pgdg-keyring                                2017.1                                     all          keyring for apt.postgresql.org</div><div class=\"line\">ii  postgresql-9.4                              9.4.12-1.pgdg14.04+1                       amd64        object-relational SQL database, version 9.4 server</div><div class=\"line\">ii  postgresql-client-9.4                       9.4.12-1.pgdg14.04+1                       amd64        front-end programs for PostgreSQL 9.4</div><div class=\"line\">ii  postgresql-client-common                    182.pgdg14.04+1                            all          manager for multiple PostgreSQL client versions</div><div class=\"line\">ii  postgresql-common                           182.pgdg14.04+1                            all          PostgreSQL database-cluster manager</div><div class=\"line\">ii  postgresql-contrib-9.4                      9.4.12-1.pgdg14.04+1                       amd64        additional facilities for PostgreSQL</div></pre></td></tr></table></figure></p>\n<p>3.7 postgres是超级管理员，类似mysql的root和sqlserver的sa，一开始是没有密码的，用超级管理员登录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo -i -u postgres</div></pre></td></tr></table></figure></p>\n<p>3.8 创建一个数据库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">createdb kongdb</div></pre></td></tr></table></figure></p>\n<p>3.8.1 如果出现类似createdb: 无法联接到数据库 template1: 无法联接到服务器: 没有那个文件或目录<br>    服务器是否在本地运行并且在 Unix 域套接字<br>    “/var/run/postgresql/.s.PGSQL.5432”上准备接受联接?的错误则切回ubuntu的登录用户，执行下列操作<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo service postgresql start</div><div class=\"line\">$ sudo systemctl unmask postgresql</div><div class=\"line\">$ sudo systemctl restart postgresql</div><div class=\"line\">$ sudo service postgresql start</div></pre></td></tr></table></figure></p>\n<p>3.9 创建角色（这里我在psql工具中创建一直不成功不知为啥，所以用sql来创建）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create user kong</div></pre></td></tr></table></figure></p>\n<p>3.10 通过postgresql的客户端来实现<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">psql</div></pre></td></tr></table></figure></p>\n<p>3.11 为”kong”用户设置密码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\password 123456</div></pre></td></tr></table></figure></p>\n<p>3.12 把数据库 kongdb的所有者设置为 kong<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter database kongdb owner to kong</div></pre></td></tr></table></figure></p>\n<p>3.13 介绍一下一些基本的命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\help 查看psql工具的命令</div><div class=\"line\">\\q 退出</div><div class=\"line\">\\du 查看所有用户（刚才创建后用这个查一下）</div><div class=\"line\">\\l 查看所有数据库（同上）</div></pre></td></tr></table></figure></p>\n<p>3.14 用 \\q 命令退出并用kong用户登录kongdb数据库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">psql -d kongdb -U kong -h 127.0.0.1 -W</div></pre></td></tr></table></figure></p>\n<p>3.15 这时会提示输入密码，输入刚才设置的123456即可</p>\n<p>4、为kong配置数据源，找到/usr/local/share/lua/5.1/kong/templates/中的kong_defaults.lua，将里面的pg_pssword = NONE改为刚才设置的123456，pg_database = kong改为刚才创建的kongdb，如果无意外的话，这里可以启动kong了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo kong start</div></pre></td></tr></table></figure></p>\n<p>5、查阅官网kong的api操作，不同版本可能参数不同，这里以0.10.x版本为例，详见： <a href=\"https://getkong.org/docs/0.10.x/getting-started/adding-your-api/\">https://getkong.org/docs/0.10.x/getting-started/adding-your-api/</a><br>6、安装curl，如果已经装过git可能会有冲突，我这里就遇到了，记录一下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install curl</div></pre></td></tr></table></figure></p>\n<p>6.1 报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl : 依赖: libcurl3-gnutls (= 7.47.0-1ubuntu2) 但是 7.47.0-1ubuntu2.2 正要被安装</div></pre></td></tr></table></figure></p>\n<p>6.2 一开始不清楚原因，执行了$ sudo apt-get update，出现了如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">E: 无法获得锁 /var/lib/apt/lists/lock - open (11: 资源暂时不可用) </div><div class=\"line\">E: 无法对目录 /var/lib/apt/lists/ 加锁</div></pre></td></tr></table></figure></p>\n<p>6.3 解决方法，强制删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo rm /var/cache/apt/archives/lock</div><div class=\"line\"></div><div class=\"line\">$ sudo rm /var/lib/dpkg/lock</div></pre></td></tr></table></figure></p>\n<p>6.4 <strong>6.3、6.4两个操作其实是没必要的，只是作为记录</strong>这里说说6.1的问题，重新安装 sudo apt-get install libcurl3-gnutls是没用的，这里是包冲突，需要指定版本来安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install libcurl3-gnutls=7.47.0-1ubuntu2</div></pre></td></tr></table></figure></p>\n<p>6.5 安装完后再执行一下$ sudo apt-get install curl即可</p>\n<p>7、将业务侧的api加到kong中<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST --url http://localhost:8001/apis/ --data &apos;name=test&apos; --data &apos;upstream_url=http://192.168.0.1:8080/&apos; --data &apos;uris=/&apos;</div></pre></td></tr></table></figure></p>\n<p>7.1 这里需要说明，根据官网/apis/接口request body参数说明中，hosts、uris、methods需要至少指定一个，不赘述<br>7.2 name指的是在kong api中的一个名字标识，具有唯一性，这里创建了test后，不允许再创建同名，若上方命令执行两次会报错<br>7.3 可以到/usr/local/kong/logs中查看日志</p>\n<p>8、然后就可以用kong来转发请求了，在<a href=\"https://getkong.org/docs/0.10.x/getting-started/adding-your-api/中有这么一句：\">https://getkong.org/docs/0.10.x/getting-started/adding-your-api/中有这么一句：</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Issue the following cURL request to verify that Kong is properly forwarding requests to your API. Note that by default Kong handles proxy requests on port :8000</div></pre></td></tr></table></figure></p>\n<p>所以这里可以用 <a href=\"http://localhost:8000/\">http://localhost:8000/</a> + 资源的方法访问<a href=\"http://192.168.0.1:8080/\">http://192.168.0.1:8080/</a> 下所有的资源</p>\n<p>9、Kong的一个非常诱人的地方就是提供了大量的插件来扩展应用，通过设置不同的插件可以为服务提供各种增强的功能。执行下面命令可以查看kong的所有插件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X GET --url http://localhost:8001/plugins/enabled</div></pre></td></tr></table></figure></p>\n<p>9.1 用Rate Limiting来控制访问访问次数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST --url http://localhost:8001/apis/test/plugins/ --data &quot;name=rate-limiting&quot; --data &quot;config.minute=5&quot;</div></pre></td></tr></table></figure></p>\n<p>接着随访找一个接口连续访问6次，如 <a href=\"http://localhost:8000/test\">http://localhost:8000/test</a> 这个接口，第6次的时候就会提示 {“message”: “API rate limit exceeded”}<br>9.2 另外kong集成了Galileo和Datadog，只要有账号就可以监控一些数据，具体到各自官网了解详情，另外Runscope是收费的，没有试过。</p>\n"},{"title":"springboot+rabbitmq简单使用","date":"2017-05-27T03:40:31.000Z","_content":"搭建springboot的时候比较喜欢用多模块管理，所以先新建一个父maven程序，select archetype时选择maven-archetype-site-simple，创建完后，pom.xml如下\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<groupId>per.example.mq</groupId>\n\t<artifactId>example-mq-parent</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>pom</packaging>\n\t\n\t<name>example-mq-parent</name>\n\t<url>http://maven.apache.org</url>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t</properties>\n\n\t<dependencyManagement>\n\t\t<dependencies>\n\n\t\t\t<!-- Import dependency management from Spring Boot -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-dependencies</artifactId>\n\t\t\t\t<version>1.3.5.RELEASE</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\n\t\t\t<!--如果要把springboot工程打包成war执行，需要该jar -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-legacy</artifactId>\n\t\t\t\t<version>1.0.2.RELEASE</version>\n\t\t\t</dependency>\n\n\t\t</dependencies>\n\t</dependencyManagement>\n\n</project>\n```\n到此父maven就完成，把项目下的src文件夹删了，具体看实际需求\n在父maven项目上右键新建maven module，选择maven-archetype-webapp创建一个web项目，完成，这里都是以eclipse为例，子maven的pom.xml如下\n```xml\n<?xml version=\"1.0\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n\txmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>per.example.mq</groupId>\n\t\t<artifactId>example-mq-parent</artifactId>\n\t\t<version>0.0.1-SNAPSHOT</version>\n\t</parent>\n\t<artifactId>example-mq-server</artifactId>\n\t<packaging>war</packaging>\n\t<name>example-mq-server Maven Webapp</name>\n\t<url>http://maven.apache.org</url>\n\n\t<properties>\n\t\t<!-- 项目编码配置 start -->\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<!-- 项目编码配置 end -->\n\t</properties>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t\t<!-- 要使用LOG4J，去掉该依赖 -->\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t<artifactId>log4j-over-slf4j</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t\t<artifactId>spring-boot-starter-logging</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\n\t\t<!-- 使用log4j，不使用默认的logback -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-log4j</artifactId>\n\t\t</dependency>\n\n\t\t<!-- 要打成war包执行，需要该依赖 -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-legacy</artifactId>\n\t\t</dependency>\n\n\t\t<!-- 要打成war包执行，去掉内嵌的tomcat -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-tomcat</artifactId>\n\t\t\t<scope>provided</scope>\n\t\t</dependency>\n\t\t\n\t\t<!-- 引入mq包 -->\n\t\t<dependency>  \n\t\t\t<groupId>org.springframework.boot</groupId>  \n\t\t\t<artifactId>spring-boot-starter-amqp</artifactId>  \n\t\t</dependency>\n\n\t</dependencies>\n\n\t<build>\n\t\t<finalName>sq580-mq-server</finalName>\n\t</build>\n</project>\n```\n先创一个简单的app来测试springboot启动有没有问题，在最外层的包目录下创建一个Application.java类，必须在外层，如pre.example.mq路径下创建\n```Java\npackage pre.example.mq;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.boot.context.web.SpringBootServletInitializer;\n\n@SpringBootApplication\npublic class Application extends SpringBootServletInitializer {\n\n\tprotected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\n\t\treturn application.sources(Application.class);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t}\n\n}\n```\n在pre.example.mq路径下创建一个controller包，然后创建一个TestController.Java\n```Java\npackage pre.example.mq.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport pre.example.mq.mq.data.service.MqSendService;\n\n@Controller\n@EnableAutoConfiguration\npublic class TestController {\n\n\t@Autowired\n\tprivate MqSendService mqSendService;\n\t\n\t@RequestMapping(\"/test\")\n    @ResponseBody\n    String test() {\n\t    // 这个再这里暂时还没有用，可以先注释\n\t\tmqSendService.sendBindMsg();\n        return \"success\";\n    }\n\t\n}\n```\n完成，点击项目执行Run As - Java Application也可以，直接像普通的web项目在tomcat下启动也可以，如果8080端口被占，前者要在配置里修改访问端口，后者跟平常使用无异，springboot还可以配置彩色日志，为了快速开发，此处都不赘述，启动后会看到类似下方的界面\n```\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::        (v1.3.5.RELEASE)\n\n[2017-05-27 10:57:23.677] boot - 9464  INFO [localhost-startStop-1] --- Application: Starting Application on Yangshaokun-PC with PID 9464 (E:\\apache-tomcat-7.0.67\\webapps\\wtpwebapps5\\sq580-mq-server\\WEB-INF\\classes started by Yangshaokun in E:\\eclipse)\n[2017-05-27 10:57:23.679] boot - 9464  INFO [localhost-startStop-1] --- Application: The following profiles are active: develop\n[2017-05-27 10:57:23.744] boot - 9464  INFO [localhost-startStop-1] --- AnnotationConfigEmbeddedWebApplicationContext: Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@294536ae: startup date [Sat May 27 10:57:23 CST 2017]; root of context hierarchy\n[2017-05-27 10:57:25.200] boot - 9464  INFO [localhost-startStop-1] --- PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [class org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4d0a742a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n[2017-05-27 10:57:25.239] boot - 9464  INFO [localhost-startStop-1] --- [/sq580-mq-server]: Initializing Spring embedded WebApplicationContext\n[2017-05-27 10:57:25.239] boot - 9464  INFO [localhost-startStop-1] --- ContextLoader: Root WebApplicationContext: initialization completed in 1496 ms\n[2017-05-27 10:57:25.710] boot - 9464  INFO [localhost-startStop-1] --- TomcatWebSocketContainerCustomizer: NonEmbeddedServletContainerFactory detected. Websockets support should be native so this normally is not a problem.\n[2017-05-27 10:57:26.017] boot - 9464  INFO [localhost-startStop-1] --- ServletRegistrationBean: Mapping servlet: 'dispatcherServlet' to [/]\n[2017-05-27 10:57:26.018] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'errorPageFilter' to: [/*]\n[2017-05-27 10:57:26.018] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'characterEncodingFilter' to: [/*]\n[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'hiddenHttpMethodFilter' to: [/*]\n[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'httpPutFormContentFilter' to: [/*]\n[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'requestContextFilter' to: [/*]\n[2017-05-27 10:57:26.122] boot - 9464  INFO [localhost-startStop-1] --- AmqpConfig: recieveQueue:dataToCare_defaultrabbitmqIp:112.74.209.184:5672\n[2017-05-27 10:57:26.361] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerAdapter: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@294536ae: startup date [Sat May 27 10:57:23 CST 2017]; root of context hierarchy\n[2017-05-27 10:57:26.473] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped \"{[/test]}\" onto java.lang.String com.sq580.mq.controller.TestController.one()\n[2017-05-27 10:57:26.481] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)\n[2017-05-27 10:57:26.481] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped \"{[/error],produces=[text/html]}\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\n[2017-05-27 10:57:26.514] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n[2017-05-27 10:57:26.514] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n[2017-05-27 10:57:26.559] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n[2017-05-27 10:57:26.988] boot - 9464  INFO [localhost-startStop-1] --- AnnotationMBeanExporter: Registering beans for JMX exposure on startup\n[2017-05-27 10:57:26.998] boot - 9464  INFO [localhost-startStop-1] --- DefaultLifecycleProcessor: Starting beans in phase -2147482648\n[2017-05-27 10:57:26.998] boot - 9464  INFO [localhost-startStop-1] --- DefaultLifecycleProcessor: Starting beans in phase 2147483647\n[2017-05-27 10:57:27.156] boot - 9464  INFO [SimpleAsyncTaskExecutor-1] --- CachingConnectionFactory: Created new connection: SimpleConnection@35b4193e [delegate=amqp://openapi@112.74.209.184:5672/openapi]\n[2017-05-27 10:57:27.346] boot - 9464  INFO [localhost-startStop-1] --- Application: Started Application in 4.331 seconds (JVM running for 7.63)\n[2017-05-27 10:57:27.359] boot - 9464  INFO [main] --- Http11AprProtocol: Starting ProtocolHandler [\"http-apr-9094\"]\n[2017-05-27 10:57:27.374] boot - 9464  INFO [main] --- AjpAprProtocol: Starting ProtocolHandler [\"ajp-apr-8049\"]\n[2017-05-27 10:57:27.375] boot - 9464  INFO [main] --- Catalina: Server startup in 6336 ms\n```\n看到这里没有报错就说明成功了，下面开始来配置mq，mq的选择可以自己查询资料做对比，此处以rabbitmq为例，在子maven中要引入包，见pom.xml，在src/main/resources目录下创建一个application.yml或者properties文件，这里以yml为例\n```yml\nspring:\n  profiles.active: develop\n\n---\nspring:\n  profiles: develop\n  output: \n    ansi: \n      enabled: detect\n      \nrabbitmq:\n  ip: 你的mq服务器ip:5672\n  user: guest\n  password: guest\n  virtualHost: myhost\n  app:\n    reciveQueue: xxx(队列名)\n---\n```\n这样准备工作就做完了，mq的工作流程、原理、搭建此处不赘述，上官网下一个mq包，解压，运行即可，跟redis类似，上述配置文件中的output.ansi.enabled是开启彩色日志的。\n首先，在pre.example.mq路径下创建config包，再创建一个AmqpConfig.java，如下\n```Java\npackage pre.example.mq.config;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.amqp.core.AcknowledgeMode;\nimport org.springframework.amqp.core.Binding;\nimport org.springframework.amqp.core.BindingBuilder;\nimport org.springframework.amqp.core.Message;\nimport org.springframework.amqp.core.Queue;\nimport org.springframework.amqp.core.TopicExchange;\nimport org.springframework.amqp.rabbit.connection.CachingConnectionFactory;\nimport org.springframework.amqp.rabbit.connection.ConnectionFactory;\nimport org.springframework.amqp.rabbit.core.ChannelAwareMessageListener;\nimport org.springframework.amqp.rabbit.core.RabbitTemplate;\nimport org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.beans.factory.config.ConfigurableBeanFactory;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Scope;\n\nimport com.rabbitmq.client.Channel;\n\n@Configuration\npublic class AmqpConfig {\n\n\tprivate final static Logger LOG = LoggerFactory.getLogger(AmqpConfig.class);\n\n\t@Value(\"${rabbitmq.app.reciveQueue}\")\n\tprivate String recieveQueue;\n\t\n\t@Value(\"${rabbitmq.ip}\")\n\tprivate String rabbitmqIp;\n\t\n\t@Value(\"${rabbitmq.user}\")\n\tprivate String rabbitmqUser;\n\t\n\t@Value(\"${rabbitmq.password}\")\n\tprivate String rabbitmqPassword;\n\t\n\t@Value(\"${rabbitmq.virtualHost}\")\n\tprivate String virtualHost;\n\n\tpublic static final String EXCHANGE = \"spring-boot-exchange\";\n\n\t/**\n\t * 不管是发送端还是接收端，都需要创建这个\n\t */\n\t@Bean\n\tpublic ConnectionFactory connectionFactory() {\n\t\tCachingConnectionFactory connectionFactory = new CachingConnectionFactory();\n\t\tconnectionFactory.setAddresses(rabbitmqIp);\n\t\tconnectionFactory.setUsername(rabbitmqUser);\n\t\tconnectionFactory.setPassword(rabbitmqPassword);\n\t\tconnectionFactory.setVirtualHost(virtualHost); // 如果不设置这个，默认在根目录\n\t\tconnectionFactory.setPublisherConfirms(true); // 显示调用，才能进行消息的回调。\n\t\treturn connectionFactory;\n\t}\n\n\t/**\n\t * 发送者发送消息需要RabbitTemplate提供api，此处消费者不需要\n\t */\n\t@Bean\n\t@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)\n\t// 最好为prototype类型\n\tpublic RabbitTemplate rabbitTemplate() {\n\t\tRabbitTemplate template = new RabbitTemplate(connectionFactory());\n\t\treturn template;\n\t}\n\n\t/**\n\t * 针对消费者配置 1. 设置交换机类型 2. 将队列绑定到交换机 FanoutExchange:\n\t * 将消息分发到所有的绑定队列，无routingkey的概念 HeadersExchange ：通过添加属性key-value匹配\n\t * DirectExchange:按照routingkey分发到指定队列 TopicExchange:多关键字匹配\n\t */\n\t@Bean\n\tpublic TopicExchange defaultExchange() {\n\t\treturn new TopicExchange(EXCHANGE);\n\t}\n\n\t@Bean\n\tpublic Queue queue() {\n\t\treturn new Queue(recieveQueue, true); // 队列持久\n\t}\n\n\t/**\n\t * 这里有必要记录一下，这里queue跟exchange绑定了，\n\t * 也就是生产者发消息到该exchange后，\n\t * exchange会根据routingKey关键字发送到符合规则的queue中去，\n\t * 如果不符合则丢弃，如果上rabbitmq的管理后台看的话可以看到即便项目关闭，\n\t * exchang和queue还是存在绑定关系，看到defaultExchange()方法中，\n\t * 创建的topicExchange使用了spring-boot-exchange这个名字，\n\t * 如果临时想换个类型的交换机，则需要使用不同的exchang名字，\n\t * 不然的话会报错，或者直接到管理后台把exchang或删了\n\t */\n\t@Bean\n\tpublic Binding binding() {\n\t\t// 绑定队列到交换机中，并使用关键字匹配，后面会讲到关键字的匹配\n\t\treturn BindingBuilder.bind(queue()).to(defaultExchange())\n\t\t\t\t.with(\"info.red.#\");\n\t}\n\n\t/**\n\t * 消费者接收消息并作出应答，确保消息不会因为消费者的奔溃而被丢弃\n\t */\n\t@Bean\n\tpublic SimpleMessageListenerContainer messageContainer() {\n\t\tLOG.info(\"recieveQueue:\" + recieveQueue + \"rabbitmqIp:\" + rabbitmqIp);\n\t\tSimpleMessageListenerContainer container = new SimpleMessageListenerContainer(\n\t\t\t\tconnectionFactory());\n\t\tcontainer.setQueues(queue());\n\t\tcontainer.setExposeListenerChannel(true);\n\t\tcontainer.setMaxConcurrentConsumers(1);\n\t\tcontainer.setConcurrentConsumers(1);\n\t\tcontainer.setAcknowledgeMode(AcknowledgeMode.MANUAL); // 设置确认模式手工确认\n\t\tcontainer.setMessageListener(new ChannelAwareMessageListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onMessage(Message message, Channel channel)\n\t\t\t\t\tthrows Exception {\n\t\t\t\tbyte[] body = message.getBody();\n\t\t\t\tLOG.info(\"receive msg : \" + new String(body));\n\t\t\t\tSystem.out.println(\"receive msg : \" + new String(body));\n\t\t\t\ttry {\n\t\t\t\t\tchannel.basicAck(message.getMessageProperties()\n\t\t\t\t\t\t\t.getDeliveryTag(), false); // 确认消息成功消费\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tLOG.error(\"消费队列失败:\" + \"\", e);\n\t\t\t\t\t// 重试一次\n\t\t\t\t\tchannel.basicNack(message.getMessageProperties()\n\t\t\t\t\t\t\t.getDeliveryTag(), false, false);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t\treturn container;\n\t}\n}\n```\n打开TestController中的service调用，创建一个service，如\n```Java\npackage pre.example.mq.mq.data.service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport pre.example.mq.mq.MessageProducer;\n\n\n@Service\npublic class MqSendService {\n    \n    @Autowired\n    private MessageProducer messageProducer;\n    \n    /**\n    * @Title: sendMsg\n    * @Description: 发送消息\n     */\n    public void sendMsg(){\n        messageProducer.sendMessage(\"info.red.a\");\n        messageProducer.sendMessage(\"info.red.b\");\n        messageProducer.sendMessage(\"info.black.a\");\n        messageProducer.sendMessage(\"err.red.a\");\n        messageProducer.sendMessage(\"info.red.a.a\");\n    }\n}\n```\nMessageProducer.java\n```Java\npackage pre.example.mq.mq;\n\nimport javax.annotation.Resource;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.amqp.core.AmqpTemplate;\nimport org.springframework.stereotype.Service;\n\nimport pre.example.mq.config.AmqpConfig;\n\n@Service\npublic class MessageProducer {\n\t\n\tprivate final static Logger LOG = LoggerFactory.getLogger(MessageProducer.class);\n\n\t@Resource\n\tprivate AmqpTemplate rabbitTemplate;\n\t/*public void setRabbitTemplate(RabbitTemplate rabbitTemplate) { // amqp 1.3.5之前版本需要显示设置消息确认，无法直接使用AmqpTemplate，需要使用RabbitTemplate\n\t\tthis.rabbitTemplate = rabbitTemplate;\n\t\tthis.rabbitTemplate.setConfirmCallback(new RabbitTemplate.ConfirmCallback(){\n\t\t     @Override\n\t\t     public void confirm(CorrelationData correlationData, boolean ack, String cause) {\n\t\t         if (ack) {\n\t\t             System.out.println(\"消息确认成功\");\n\t\t         } else {\n\t\t             //处理丢失的消息（nack）\n\t\t            System.out.println(\"消息确认失败\");\n\t\t         }\n\t\t     }\n\t\t});\n\t}*/\n\n\tpublic void sendMessage(Object message) {\n\t\tLOG.debug(\"to send message:{}\", message);\n\t\ttry {\n\t\t\trabbitTemplate.convertAndSend(AmqpConfig.EXCHANGE, message.toString(), message);\n\t\t} catch (Exception e) {\n\t\t\tLOG.error(\"发送队列消息错：\" + \"\", e);\n\t\t}\n\t}\n}\n```\n发送者很简单，这里我们通过接口访问的形式，调用了MessageProducer的sendMessage方法，rabbitTemplate.convertAndSend是发送消息的调用，第一个参数表示交换机，使用mq的订阅功能并不需要理会queue，只需要指定交换机，这里的交换机需要跟消费者一样；第二个参数是关键字匹配，如这里发送了5条消息，关键字如下\n```\nmessageProducer.sendMessage(\"info.red.a\");\nmessageProducer.sendMessage(\"info.red.b\");\nmessageProducer.sendMessage(\"info.black.a\");\nmessageProducer.sendMessage(\"err.red.a\");\nmessageProducer.sendMessage(\"info.red.a.a\");\n```\n看到AmqpConfig.java类的binding方法，那里消费者匹配了info.red.#方法，\\*表示匹配一个，#表示匹配多个，所以这里发送的5条消息，只有1、2、4会被接收到，如果是info.red.\\* 则只有1、2会被接收。","source":"_posts/springboot+rabbitmq简单使用.md","raw":"---\ntitle: springboot+rabbitmq简单使用\ndate: 2017-05-27 11:40:31\ncategories: [Java]\ntags: [Java,springboot,mq]\n---\n搭建springboot的时候比较喜欢用多模块管理，所以先新建一个父maven程序，select archetype时选择maven-archetype-site-simple，创建完后，pom.xml如下\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<groupId>per.example.mq</groupId>\n\t<artifactId>example-mq-parent</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>pom</packaging>\n\t\n\t<name>example-mq-parent</name>\n\t<url>http://maven.apache.org</url>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t</properties>\n\n\t<dependencyManagement>\n\t\t<dependencies>\n\n\t\t\t<!-- Import dependency management from Spring Boot -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-dependencies</artifactId>\n\t\t\t\t<version>1.3.5.RELEASE</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\n\t\t\t<!--如果要把springboot工程打包成war执行，需要该jar -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-legacy</artifactId>\n\t\t\t\t<version>1.0.2.RELEASE</version>\n\t\t\t</dependency>\n\n\t\t</dependencies>\n\t</dependencyManagement>\n\n</project>\n```\n到此父maven就完成，把项目下的src文件夹删了，具体看实际需求\n在父maven项目上右键新建maven module，选择maven-archetype-webapp创建一个web项目，完成，这里都是以eclipse为例，子maven的pom.xml如下\n```xml\n<?xml version=\"1.0\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n\txmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>per.example.mq</groupId>\n\t\t<artifactId>example-mq-parent</artifactId>\n\t\t<version>0.0.1-SNAPSHOT</version>\n\t</parent>\n\t<artifactId>example-mq-server</artifactId>\n\t<packaging>war</packaging>\n\t<name>example-mq-server Maven Webapp</name>\n\t<url>http://maven.apache.org</url>\n\n\t<properties>\n\t\t<!-- 项目编码配置 start -->\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<!-- 项目编码配置 end -->\n\t</properties>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t\t<!-- 要使用LOG4J，去掉该依赖 -->\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t<artifactId>log4j-over-slf4j</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t\t<artifactId>spring-boot-starter-logging</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\n\t\t<!-- 使用log4j，不使用默认的logback -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-log4j</artifactId>\n\t\t</dependency>\n\n\t\t<!-- 要打成war包执行，需要该依赖 -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-legacy</artifactId>\n\t\t</dependency>\n\n\t\t<!-- 要打成war包执行，去掉内嵌的tomcat -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-tomcat</artifactId>\n\t\t\t<scope>provided</scope>\n\t\t</dependency>\n\t\t\n\t\t<!-- 引入mq包 -->\n\t\t<dependency>  \n\t\t\t<groupId>org.springframework.boot</groupId>  \n\t\t\t<artifactId>spring-boot-starter-amqp</artifactId>  \n\t\t</dependency>\n\n\t</dependencies>\n\n\t<build>\n\t\t<finalName>sq580-mq-server</finalName>\n\t</build>\n</project>\n```\n先创一个简单的app来测试springboot启动有没有问题，在最外层的包目录下创建一个Application.java类，必须在外层，如pre.example.mq路径下创建\n```Java\npackage pre.example.mq;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.boot.context.web.SpringBootServletInitializer;\n\n@SpringBootApplication\npublic class Application extends SpringBootServletInitializer {\n\n\tprotected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\n\t\treturn application.sources(Application.class);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t}\n\n}\n```\n在pre.example.mq路径下创建一个controller包，然后创建一个TestController.Java\n```Java\npackage pre.example.mq.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport pre.example.mq.mq.data.service.MqSendService;\n\n@Controller\n@EnableAutoConfiguration\npublic class TestController {\n\n\t@Autowired\n\tprivate MqSendService mqSendService;\n\t\n\t@RequestMapping(\"/test\")\n    @ResponseBody\n    String test() {\n\t    // 这个再这里暂时还没有用，可以先注释\n\t\tmqSendService.sendBindMsg();\n        return \"success\";\n    }\n\t\n}\n```\n完成，点击项目执行Run As - Java Application也可以，直接像普通的web项目在tomcat下启动也可以，如果8080端口被占，前者要在配置里修改访问端口，后者跟平常使用无异，springboot还可以配置彩色日志，为了快速开发，此处都不赘述，启动后会看到类似下方的界面\n```\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::        (v1.3.5.RELEASE)\n\n[2017-05-27 10:57:23.677] boot - 9464  INFO [localhost-startStop-1] --- Application: Starting Application on Yangshaokun-PC with PID 9464 (E:\\apache-tomcat-7.0.67\\webapps\\wtpwebapps5\\sq580-mq-server\\WEB-INF\\classes started by Yangshaokun in E:\\eclipse)\n[2017-05-27 10:57:23.679] boot - 9464  INFO [localhost-startStop-1] --- Application: The following profiles are active: develop\n[2017-05-27 10:57:23.744] boot - 9464  INFO [localhost-startStop-1] --- AnnotationConfigEmbeddedWebApplicationContext: Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@294536ae: startup date [Sat May 27 10:57:23 CST 2017]; root of context hierarchy\n[2017-05-27 10:57:25.200] boot - 9464  INFO [localhost-startStop-1] --- PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [class org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4d0a742a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n[2017-05-27 10:57:25.239] boot - 9464  INFO [localhost-startStop-1] --- [/sq580-mq-server]: Initializing Spring embedded WebApplicationContext\n[2017-05-27 10:57:25.239] boot - 9464  INFO [localhost-startStop-1] --- ContextLoader: Root WebApplicationContext: initialization completed in 1496 ms\n[2017-05-27 10:57:25.710] boot - 9464  INFO [localhost-startStop-1] --- TomcatWebSocketContainerCustomizer: NonEmbeddedServletContainerFactory detected. Websockets support should be native so this normally is not a problem.\n[2017-05-27 10:57:26.017] boot - 9464  INFO [localhost-startStop-1] --- ServletRegistrationBean: Mapping servlet: 'dispatcherServlet' to [/]\n[2017-05-27 10:57:26.018] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'errorPageFilter' to: [/*]\n[2017-05-27 10:57:26.018] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'characterEncodingFilter' to: [/*]\n[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'hiddenHttpMethodFilter' to: [/*]\n[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'httpPutFormContentFilter' to: [/*]\n[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: 'requestContextFilter' to: [/*]\n[2017-05-27 10:57:26.122] boot - 9464  INFO [localhost-startStop-1] --- AmqpConfig: recieveQueue:dataToCare_defaultrabbitmqIp:112.74.209.184:5672\n[2017-05-27 10:57:26.361] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerAdapter: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@294536ae: startup date [Sat May 27 10:57:23 CST 2017]; root of context hierarchy\n[2017-05-27 10:57:26.473] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped \"{[/test]}\" onto java.lang.String com.sq580.mq.controller.TestController.one()\n[2017-05-27 10:57:26.481] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)\n[2017-05-27 10:57:26.481] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped \"{[/error],produces=[text/html]}\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\n[2017-05-27 10:57:26.514] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n[2017-05-27 10:57:26.514] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n[2017-05-27 10:57:26.559] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n[2017-05-27 10:57:26.988] boot - 9464  INFO [localhost-startStop-1] --- AnnotationMBeanExporter: Registering beans for JMX exposure on startup\n[2017-05-27 10:57:26.998] boot - 9464  INFO [localhost-startStop-1] --- DefaultLifecycleProcessor: Starting beans in phase -2147482648\n[2017-05-27 10:57:26.998] boot - 9464  INFO [localhost-startStop-1] --- DefaultLifecycleProcessor: Starting beans in phase 2147483647\n[2017-05-27 10:57:27.156] boot - 9464  INFO [SimpleAsyncTaskExecutor-1] --- CachingConnectionFactory: Created new connection: SimpleConnection@35b4193e [delegate=amqp://openapi@112.74.209.184:5672/openapi]\n[2017-05-27 10:57:27.346] boot - 9464  INFO [localhost-startStop-1] --- Application: Started Application in 4.331 seconds (JVM running for 7.63)\n[2017-05-27 10:57:27.359] boot - 9464  INFO [main] --- Http11AprProtocol: Starting ProtocolHandler [\"http-apr-9094\"]\n[2017-05-27 10:57:27.374] boot - 9464  INFO [main] --- AjpAprProtocol: Starting ProtocolHandler [\"ajp-apr-8049\"]\n[2017-05-27 10:57:27.375] boot - 9464  INFO [main] --- Catalina: Server startup in 6336 ms\n```\n看到这里没有报错就说明成功了，下面开始来配置mq，mq的选择可以自己查询资料做对比，此处以rabbitmq为例，在子maven中要引入包，见pom.xml，在src/main/resources目录下创建一个application.yml或者properties文件，这里以yml为例\n```yml\nspring:\n  profiles.active: develop\n\n---\nspring:\n  profiles: develop\n  output: \n    ansi: \n      enabled: detect\n      \nrabbitmq:\n  ip: 你的mq服务器ip:5672\n  user: guest\n  password: guest\n  virtualHost: myhost\n  app:\n    reciveQueue: xxx(队列名)\n---\n```\n这样准备工作就做完了，mq的工作流程、原理、搭建此处不赘述，上官网下一个mq包，解压，运行即可，跟redis类似，上述配置文件中的output.ansi.enabled是开启彩色日志的。\n首先，在pre.example.mq路径下创建config包，再创建一个AmqpConfig.java，如下\n```Java\npackage pre.example.mq.config;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.amqp.core.AcknowledgeMode;\nimport org.springframework.amqp.core.Binding;\nimport org.springframework.amqp.core.BindingBuilder;\nimport org.springframework.amqp.core.Message;\nimport org.springframework.amqp.core.Queue;\nimport org.springframework.amqp.core.TopicExchange;\nimport org.springframework.amqp.rabbit.connection.CachingConnectionFactory;\nimport org.springframework.amqp.rabbit.connection.ConnectionFactory;\nimport org.springframework.amqp.rabbit.core.ChannelAwareMessageListener;\nimport org.springframework.amqp.rabbit.core.RabbitTemplate;\nimport org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.beans.factory.config.ConfigurableBeanFactory;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Scope;\n\nimport com.rabbitmq.client.Channel;\n\n@Configuration\npublic class AmqpConfig {\n\n\tprivate final static Logger LOG = LoggerFactory.getLogger(AmqpConfig.class);\n\n\t@Value(\"${rabbitmq.app.reciveQueue}\")\n\tprivate String recieveQueue;\n\t\n\t@Value(\"${rabbitmq.ip}\")\n\tprivate String rabbitmqIp;\n\t\n\t@Value(\"${rabbitmq.user}\")\n\tprivate String rabbitmqUser;\n\t\n\t@Value(\"${rabbitmq.password}\")\n\tprivate String rabbitmqPassword;\n\t\n\t@Value(\"${rabbitmq.virtualHost}\")\n\tprivate String virtualHost;\n\n\tpublic static final String EXCHANGE = \"spring-boot-exchange\";\n\n\t/**\n\t * 不管是发送端还是接收端，都需要创建这个\n\t */\n\t@Bean\n\tpublic ConnectionFactory connectionFactory() {\n\t\tCachingConnectionFactory connectionFactory = new CachingConnectionFactory();\n\t\tconnectionFactory.setAddresses(rabbitmqIp);\n\t\tconnectionFactory.setUsername(rabbitmqUser);\n\t\tconnectionFactory.setPassword(rabbitmqPassword);\n\t\tconnectionFactory.setVirtualHost(virtualHost); // 如果不设置这个，默认在根目录\n\t\tconnectionFactory.setPublisherConfirms(true); // 显示调用，才能进行消息的回调。\n\t\treturn connectionFactory;\n\t}\n\n\t/**\n\t * 发送者发送消息需要RabbitTemplate提供api，此处消费者不需要\n\t */\n\t@Bean\n\t@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)\n\t// 最好为prototype类型\n\tpublic RabbitTemplate rabbitTemplate() {\n\t\tRabbitTemplate template = new RabbitTemplate(connectionFactory());\n\t\treturn template;\n\t}\n\n\t/**\n\t * 针对消费者配置 1. 设置交换机类型 2. 将队列绑定到交换机 FanoutExchange:\n\t * 将消息分发到所有的绑定队列，无routingkey的概念 HeadersExchange ：通过添加属性key-value匹配\n\t * DirectExchange:按照routingkey分发到指定队列 TopicExchange:多关键字匹配\n\t */\n\t@Bean\n\tpublic TopicExchange defaultExchange() {\n\t\treturn new TopicExchange(EXCHANGE);\n\t}\n\n\t@Bean\n\tpublic Queue queue() {\n\t\treturn new Queue(recieveQueue, true); // 队列持久\n\t}\n\n\t/**\n\t * 这里有必要记录一下，这里queue跟exchange绑定了，\n\t * 也就是生产者发消息到该exchange后，\n\t * exchange会根据routingKey关键字发送到符合规则的queue中去，\n\t * 如果不符合则丢弃，如果上rabbitmq的管理后台看的话可以看到即便项目关闭，\n\t * exchang和queue还是存在绑定关系，看到defaultExchange()方法中，\n\t * 创建的topicExchange使用了spring-boot-exchange这个名字，\n\t * 如果临时想换个类型的交换机，则需要使用不同的exchang名字，\n\t * 不然的话会报错，或者直接到管理后台把exchang或删了\n\t */\n\t@Bean\n\tpublic Binding binding() {\n\t\t// 绑定队列到交换机中，并使用关键字匹配，后面会讲到关键字的匹配\n\t\treturn BindingBuilder.bind(queue()).to(defaultExchange())\n\t\t\t\t.with(\"info.red.#\");\n\t}\n\n\t/**\n\t * 消费者接收消息并作出应答，确保消息不会因为消费者的奔溃而被丢弃\n\t */\n\t@Bean\n\tpublic SimpleMessageListenerContainer messageContainer() {\n\t\tLOG.info(\"recieveQueue:\" + recieveQueue + \"rabbitmqIp:\" + rabbitmqIp);\n\t\tSimpleMessageListenerContainer container = new SimpleMessageListenerContainer(\n\t\t\t\tconnectionFactory());\n\t\tcontainer.setQueues(queue());\n\t\tcontainer.setExposeListenerChannel(true);\n\t\tcontainer.setMaxConcurrentConsumers(1);\n\t\tcontainer.setConcurrentConsumers(1);\n\t\tcontainer.setAcknowledgeMode(AcknowledgeMode.MANUAL); // 设置确认模式手工确认\n\t\tcontainer.setMessageListener(new ChannelAwareMessageListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onMessage(Message message, Channel channel)\n\t\t\t\t\tthrows Exception {\n\t\t\t\tbyte[] body = message.getBody();\n\t\t\t\tLOG.info(\"receive msg : \" + new String(body));\n\t\t\t\tSystem.out.println(\"receive msg : \" + new String(body));\n\t\t\t\ttry {\n\t\t\t\t\tchannel.basicAck(message.getMessageProperties()\n\t\t\t\t\t\t\t.getDeliveryTag(), false); // 确认消息成功消费\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tLOG.error(\"消费队列失败:\" + \"\", e);\n\t\t\t\t\t// 重试一次\n\t\t\t\t\tchannel.basicNack(message.getMessageProperties()\n\t\t\t\t\t\t\t.getDeliveryTag(), false, false);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t\treturn container;\n\t}\n}\n```\n打开TestController中的service调用，创建一个service，如\n```Java\npackage pre.example.mq.mq.data.service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport pre.example.mq.mq.MessageProducer;\n\n\n@Service\npublic class MqSendService {\n    \n    @Autowired\n    private MessageProducer messageProducer;\n    \n    /**\n    * @Title: sendMsg\n    * @Description: 发送消息\n     */\n    public void sendMsg(){\n        messageProducer.sendMessage(\"info.red.a\");\n        messageProducer.sendMessage(\"info.red.b\");\n        messageProducer.sendMessage(\"info.black.a\");\n        messageProducer.sendMessage(\"err.red.a\");\n        messageProducer.sendMessage(\"info.red.a.a\");\n    }\n}\n```\nMessageProducer.java\n```Java\npackage pre.example.mq.mq;\n\nimport javax.annotation.Resource;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.amqp.core.AmqpTemplate;\nimport org.springframework.stereotype.Service;\n\nimport pre.example.mq.config.AmqpConfig;\n\n@Service\npublic class MessageProducer {\n\t\n\tprivate final static Logger LOG = LoggerFactory.getLogger(MessageProducer.class);\n\n\t@Resource\n\tprivate AmqpTemplate rabbitTemplate;\n\t/*public void setRabbitTemplate(RabbitTemplate rabbitTemplate) { // amqp 1.3.5之前版本需要显示设置消息确认，无法直接使用AmqpTemplate，需要使用RabbitTemplate\n\t\tthis.rabbitTemplate = rabbitTemplate;\n\t\tthis.rabbitTemplate.setConfirmCallback(new RabbitTemplate.ConfirmCallback(){\n\t\t     @Override\n\t\t     public void confirm(CorrelationData correlationData, boolean ack, String cause) {\n\t\t         if (ack) {\n\t\t             System.out.println(\"消息确认成功\");\n\t\t         } else {\n\t\t             //处理丢失的消息（nack）\n\t\t            System.out.println(\"消息确认失败\");\n\t\t         }\n\t\t     }\n\t\t});\n\t}*/\n\n\tpublic void sendMessage(Object message) {\n\t\tLOG.debug(\"to send message:{}\", message);\n\t\ttry {\n\t\t\trabbitTemplate.convertAndSend(AmqpConfig.EXCHANGE, message.toString(), message);\n\t\t} catch (Exception e) {\n\t\t\tLOG.error(\"发送队列消息错：\" + \"\", e);\n\t\t}\n\t}\n}\n```\n发送者很简单，这里我们通过接口访问的形式，调用了MessageProducer的sendMessage方法，rabbitTemplate.convertAndSend是发送消息的调用，第一个参数表示交换机，使用mq的订阅功能并不需要理会queue，只需要指定交换机，这里的交换机需要跟消费者一样；第二个参数是关键字匹配，如这里发送了5条消息，关键字如下\n```\nmessageProducer.sendMessage(\"info.red.a\");\nmessageProducer.sendMessage(\"info.red.b\");\nmessageProducer.sendMessage(\"info.black.a\");\nmessageProducer.sendMessage(\"err.red.a\");\nmessageProducer.sendMessage(\"info.red.a.a\");\n```\n看到AmqpConfig.java类的binding方法，那里消费者匹配了info.red.#方法，\\*表示匹配一个，#表示匹配多个，所以这里发送的5条消息，只有1、2、4会被接收到，如果是info.red.\\* 则只有1、2会被接收。","slug":"springboot+rabbitmq简单使用","published":1,"updated":"2017-05-27T03:41:41.173Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou5e0029po2ygi50kqjh","content":"<p>搭建springboot的时候比较喜欢用多模块管理，所以先新建一个父maven程序，select archetype时选择maven-archetype-site-simple，创建完后，pom.xml如下<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></div><div class=\"line\">\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>per.example.mq<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>example-mq-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>example-mq-parent<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.apache.org<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- Import dependency management from Spring Boot --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!--如果要把springboot工程打包成war执行，需要该jar --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-legacy<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>到此父maven就完成，把项目下的src文件夹删了，具体看实际需求<br>在父maven项目上右键新建maven module，选择maven-archetype-webapp创建一个web项目，完成，这里都是以eclipse为例，子maven的pom.xml如下<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span></span></div><div class=\"line\">\t<span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>&gt;</div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>per.example.mq<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>example-mq-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>example-mq-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>example-mq-server Maven Webapp<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.apache.org<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 项目编码配置 start --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 项目编码配置 end --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 要使用LOG4J，去掉该依赖 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j-over-slf4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-logging<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 使用log4j，不使用默认的logback --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 要打成war包执行，需要该依赖 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-legacy<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 要打成war包执行，去掉内嵌的tomcat --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 引入mq包 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>  </div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">finalName</span>&gt;</span>sq580-mq-server<span class=\"tag\">&lt;/<span class=\"name\">finalName</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>先创一个简单的app来测试springboot启动有没有问题，在最外层的包目录下创建一个Application.java类，必须在外层，如pre.example.mq路径下创建<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.web.SpringBootServletInitializer;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SpringBootApplication</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> <span class=\"keyword\">extends</span> <span class=\"title\">SpringBootServletInitializer</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> SpringApplicationBuilder <span class=\"title\">configure</span><span class=\"params\">(SpringApplicationBuilder application)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> application.sources(Application.class);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tSpringApplication.run(Application.class, args);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在pre.example.mq路径下创建一个controller包，然后创建一个TestController.Java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq.controller;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.ResponseBody;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> pre.example.mq.mq.data.service.MqSendService;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestController</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Autowired</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> MqSendService mqSendService;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/test\"</span>)</div><div class=\"line\">    <span class=\"meta\">@ResponseBody</span></div><div class=\"line\">    <span class=\"function\">String <span class=\"title\">test</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t    <span class=\"comment\">// 这个再这里暂时还没有用，可以先注释</span></div><div class=\"line\">\t\tmqSendService.sendBindMsg();</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"success\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>完成，点击项目执行Run As - Java Application也可以，直接像普通的web项目在tomcat下启动也可以，如果8080端口被占，前者要在配置里修改访问端口，后者跟平常使用无异，springboot还可以配置彩色日志，为了快速开发，此处都不赘述，启动后会看到类似下方的界面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">  .   ____          _            __ _ _</div><div class=\"line\"> /\\\\ / ___&apos;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\</div><div class=\"line\">( ( )\\___ | &apos;_ | &apos;_| | &apos;_ \\/ _` | \\ \\ \\ \\</div><div class=\"line\"> \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )</div><div class=\"line\">  &apos;  |____| .__|_| |_|_| |_\\__, | / / / /</div><div class=\"line\"> =========|_|==============|___/=/_/_/_/</div><div class=\"line\"> :: Spring Boot ::        (v1.3.5.RELEASE)</div><div class=\"line\"></div><div class=\"line\">[2017-05-27 10:57:23.677] boot - 9464  INFO [localhost-startStop-1] --- Application: Starting Application on Yangshaokun-PC with PID 9464 (E:\\apache-tomcat-7.0.67\\webapps\\wtpwebapps5\\sq580-mq-server\\WEB-INF\\classes started by Yangshaokun in E:\\eclipse)</div><div class=\"line\">[2017-05-27 10:57:23.679] boot - 9464  INFO [localhost-startStop-1] --- Application: The following profiles are active: develop</div><div class=\"line\">[2017-05-27 10:57:23.744] boot - 9464  INFO [localhost-startStop-1] --- AnnotationConfigEmbeddedWebApplicationContext: Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@294536ae: startup date [Sat May 27 10:57:23 CST 2017]; root of context hierarchy</div><div class=\"line\">[2017-05-27 10:57:25.200] boot - 9464  INFO [localhost-startStop-1] --- PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean &apos;org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration&apos; of type [class org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4d0a742a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</div><div class=\"line\">[2017-05-27 10:57:25.239] boot - 9464  INFO [localhost-startStop-1] --- [/sq580-mq-server]: Initializing Spring embedded WebApplicationContext</div><div class=\"line\">[2017-05-27 10:57:25.239] boot - 9464  INFO [localhost-startStop-1] --- ContextLoader: Root WebApplicationContext: initialization completed in 1496 ms</div><div class=\"line\">[2017-05-27 10:57:25.710] boot - 9464  INFO [localhost-startStop-1] --- TomcatWebSocketContainerCustomizer: NonEmbeddedServletContainerFactory detected. Websockets support should be native so this normally is not a problem.</div><div class=\"line\">[2017-05-27 10:57:26.017] boot - 9464  INFO [localhost-startStop-1] --- ServletRegistrationBean: Mapping servlet: &apos;dispatcherServlet&apos; to [/]</div><div class=\"line\">[2017-05-27 10:57:26.018] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;errorPageFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.018] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;characterEncodingFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;hiddenHttpMethodFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;httpPutFormContentFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;requestContextFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.122] boot - 9464  INFO [localhost-startStop-1] --- AmqpConfig: recieveQueue:dataToCare_defaultrabbitmqIp:112.74.209.184:5672</div><div class=\"line\">[2017-05-27 10:57:26.361] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerAdapter: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@294536ae: startup date [Sat May 27 10:57:23 CST 2017]; root of context hierarchy</div><div class=\"line\">[2017-05-27 10:57:26.473] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped &quot;&#123;[/test]&#125;&quot; onto java.lang.String com.sq580.mq.controller.TestController.one()</div><div class=\"line\">[2017-05-27 10:57:26.481] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped &quot;&#123;[/error]&#125;&quot; onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)</div><div class=\"line\">[2017-05-27 10:57:26.481] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped &quot;&#123;[/error],produces=[text/html]&#125;&quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)</div><div class=\"line\">[2017-05-27 10:57:26.514] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</div><div class=\"line\">[2017-05-27 10:57:26.514] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</div><div class=\"line\">[2017-05-27 10:57:26.559] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</div><div class=\"line\">[2017-05-27 10:57:26.988] boot - 9464  INFO [localhost-startStop-1] --- AnnotationMBeanExporter: Registering beans for JMX exposure on startup</div><div class=\"line\">[2017-05-27 10:57:26.998] boot - 9464  INFO [localhost-startStop-1] --- DefaultLifecycleProcessor: Starting beans in phase -2147482648</div><div class=\"line\">[2017-05-27 10:57:26.998] boot - 9464  INFO [localhost-startStop-1] --- DefaultLifecycleProcessor: Starting beans in phase 2147483647</div><div class=\"line\">[2017-05-27 10:57:27.156] boot - 9464  INFO [SimpleAsyncTaskExecutor-1] --- CachingConnectionFactory: Created new connection: SimpleConnection@35b4193e [delegate=amqp://openapi@112.74.209.184:5672/openapi]</div><div class=\"line\">[2017-05-27 10:57:27.346] boot - 9464  INFO [localhost-startStop-1] --- Application: Started Application in 4.331 seconds (JVM running for 7.63)</div><div class=\"line\">[2017-05-27 10:57:27.359] boot - 9464  INFO [main] --- Http11AprProtocol: Starting ProtocolHandler [&quot;http-apr-9094&quot;]</div><div class=\"line\">[2017-05-27 10:57:27.374] boot - 9464  INFO [main] --- AjpAprProtocol: Starting ProtocolHandler [&quot;ajp-apr-8049&quot;]</div><div class=\"line\">[2017-05-27 10:57:27.375] boot - 9464  INFO [main] --- Catalina: Server startup in 6336 ms</div></pre></td></tr></table></figure></p>\n<p>看到这里没有报错就说明成功了，下面开始来配置mq，mq的选择可以自己查询资料做对比，此处以rabbitmq为例，在子maven中要引入包，见pom.xml，在src/main/resources目录下创建一个application.yml或者properties文件，这里以yml为例<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">spring:</span></div><div class=\"line\">  profiles.active: develop</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">---</span></div><div class=\"line\"><span class=\"attr\">spring:</span></div><div class=\"line\"><span class=\"attr\">  profiles:</span> develop</div><div class=\"line\"><span class=\"attr\">  output:</span> </div><div class=\"line\"><span class=\"attr\">    ansi:</span> </div><div class=\"line\"><span class=\"attr\">      enabled:</span> detect</div><div class=\"line\">      </div><div class=\"line\"><span class=\"attr\">rabbitmq:</span></div><div class=\"line\"><span class=\"attr\">  ip:</span> 你的mq服务器ip:<span class=\"number\">5672</span></div><div class=\"line\"><span class=\"attr\">  user:</span> guest</div><div class=\"line\"><span class=\"attr\">  password:</span> guest</div><div class=\"line\"><span class=\"attr\">  virtualHost:</span> myhost</div><div class=\"line\"><span class=\"attr\">  app:</span></div><div class=\"line\"><span class=\"attr\">    reciveQueue:</span> xxx(队列名)</div><div class=\"line\"><span class=\"meta\">---</span></div></pre></td></tr></table></figure></p>\n<p>这样准备工作就做完了，mq的工作流程、原理、搭建此处不赘述，上官网下一个mq包，解压，运行即可，跟redis类似，上述配置文件中的output.ansi.enabled是开启彩色日志的。<br>首先，在pre.example.mq路径下创建config包，再创建一个AmqpConfig.java，如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq.config;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.AcknowledgeMode;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.Binding;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.BindingBuilder;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.Message;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.Queue;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.TopicExchange;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.connection.CachingConnectionFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.connection.ConnectionFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.core.ChannelAwareMessageListener;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Value;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.config.ConfigurableBeanFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Scope;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Channel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Configuration</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AmqpConfig</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> Logger LOG = LoggerFactory.getLogger(AmqpConfig.class);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.app.reciveQueue&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String recieveQueue;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.ip&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String rabbitmqIp;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.user&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String rabbitmqUser;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.password&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String rabbitmqPassword;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.virtualHost&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String virtualHost;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String EXCHANGE = <span class=\"string\">\"spring-boot-exchange\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 不管是发送端还是接收端，都需要创建这个</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> ConnectionFactory <span class=\"title\">connectionFactory</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tCachingConnectionFactory connectionFactory = <span class=\"keyword\">new</span> CachingConnectionFactory();</div><div class=\"line\">\t\tconnectionFactory.setAddresses(rabbitmqIp);</div><div class=\"line\">\t\tconnectionFactory.setUsername(rabbitmqUser);</div><div class=\"line\">\t\tconnectionFactory.setPassword(rabbitmqPassword);</div><div class=\"line\">\t\tconnectionFactory.setVirtualHost(virtualHost); <span class=\"comment\">// 如果不设置这个，默认在根目录</span></div><div class=\"line\">\t\tconnectionFactory.setPublisherConfirms(<span class=\"keyword\">true</span>); <span class=\"comment\">// 显示调用，才能进行消息的回调。</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> connectionFactory;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 发送者发送消息需要RabbitTemplate提供api，此处消费者不需要</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"meta\">@Scope</span>(ConfigurableBeanFactory.SCOPE_PROTOTYPE)</div><div class=\"line\">\t<span class=\"comment\">// 最好为prototype类型</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> RabbitTemplate <span class=\"title\">rabbitTemplate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tRabbitTemplate template = <span class=\"keyword\">new</span> RabbitTemplate(connectionFactory());</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> template;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 针对消费者配置 1. 设置交换机类型 2. 将队列绑定到交换机 FanoutExchange:</div><div class=\"line\">\t * 将消息分发到所有的绑定队列，无routingkey的概念 HeadersExchange ：通过添加属性key-value匹配</div><div class=\"line\">\t * DirectExchange:按照routingkey分发到指定队列 TopicExchange:多关键字匹配</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> TopicExchange <span class=\"title\">defaultExchange</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> TopicExchange(EXCHANGE);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Queue <span class=\"title\">queue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Queue(recieveQueue, <span class=\"keyword\">true</span>); <span class=\"comment\">// 队列持久</span></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 这里有必要记录一下，这里queue跟exchange绑定了，</div><div class=\"line\">\t * 也就是生产者发消息到该exchange后，</div><div class=\"line\">\t * exchange会根据routingKey关键字发送到符合规则的queue中去，</div><div class=\"line\">\t * 如果不符合则丢弃，如果上rabbitmq的管理后台看的话可以看到即便项目关闭，</div><div class=\"line\">\t * exchang和queue还是存在绑定关系，看到defaultExchange()方法中，</div><div class=\"line\">\t * 创建的topicExchange使用了spring-boot-exchange这个名字，</div><div class=\"line\">\t * 如果临时想换个类型的交换机，则需要使用不同的exchang名字，</div><div class=\"line\">\t * 不然的话会报错，或者直接到管理后台把exchang或删了</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Binding <span class=\"title\">binding</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 绑定队列到交换机中，并使用关键字匹配，后面会讲到关键字的匹配</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> BindingBuilder.bind(queue()).to(defaultExchange())</div><div class=\"line\">\t\t\t\t.with(<span class=\"string\">\"info.red.#\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 消费者接收消息并作出应答，确保消息不会因为消费者的奔溃而被丢弃</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> SimpleMessageListenerContainer <span class=\"title\">messageContainer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tLOG.info(<span class=\"string\">\"recieveQueue:\"</span> + recieveQueue + <span class=\"string\">\"rabbitmqIp:\"</span> + rabbitmqIp);</div><div class=\"line\">\t\tSimpleMessageListenerContainer container = <span class=\"keyword\">new</span> SimpleMessageListenerContainer(</div><div class=\"line\">\t\t\t\tconnectionFactory());</div><div class=\"line\">\t\tcontainer.setQueues(queue());</div><div class=\"line\">\t\tcontainer.setExposeListenerChannel(<span class=\"keyword\">true</span>);</div><div class=\"line\">\t\tcontainer.setMaxConcurrentConsumers(<span class=\"number\">1</span>);</div><div class=\"line\">\t\tcontainer.setConcurrentConsumers(<span class=\"number\">1</span>);</div><div class=\"line\">\t\tcontainer.setAcknowledgeMode(AcknowledgeMode.MANUAL); <span class=\"comment\">// 设置确认模式手工确认</span></div><div class=\"line\">\t\tcontainer.setMessageListener(<span class=\"keyword\">new</span> ChannelAwareMessageListener() &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message, Channel channel)</span></span></div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">byte</span>[] body = message.getBody();</div><div class=\"line\">\t\t\t\tLOG.info(<span class=\"string\">\"receive msg : \"</span> + <span class=\"keyword\">new</span> String(body));</div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"receive msg : \"</span> + <span class=\"keyword\">new</span> String(body));</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t\tchannel.basicAck(message.getMessageProperties()</div><div class=\"line\">\t\t\t\t\t\t\t.getDeliveryTag(), <span class=\"keyword\">false</span>); <span class=\"comment\">// 确认消息成功消费</span></div><div class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t\t\tLOG.error(<span class=\"string\">\"消费队列失败:\"</span> + <span class=\"string\">\"\"</span>, e);</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 重试一次</span></div><div class=\"line\">\t\t\t\t\tchannel.basicNack(message.getMessageProperties()</div><div class=\"line\">\t\t\t\t\t\t\t.getDeliveryTag(), <span class=\"keyword\">false</span>, <span class=\"keyword\">false</span>);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> container;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>打开TestController中的service调用，创建一个service，如<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq.mq.data.service;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> pre.example.mq.mq.MessageProducer;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MqSendService</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">private</span> MessageProducer messageProducer;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">    * <span class=\"doctag\">@Title</span>: sendMsg</div><div class=\"line\">    * <span class=\"doctag\">@Description</span>: 发送消息</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMsg</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"info.red.a\"</span>);</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"info.red.b\"</span>);</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"info.black.a\"</span>);</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"err.red.a\"</span>);</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"info.red.a.a\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>MessageProducer.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq.mq;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.annotation.Resource;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.AmqpTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> pre.example.mq.config.AmqpConfig;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageProducer</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> Logger LOG = LoggerFactory.getLogger(MessageProducer.class);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Resource</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> AmqpTemplate rabbitTemplate;</div><div class=\"line\">\t<span class=\"comment\">/*public void setRabbitTemplate(RabbitTemplate rabbitTemplate) &#123; // amqp 1.3.5之前版本需要显示设置消息确认，无法直接使用AmqpTemplate，需要使用RabbitTemplate</span></div><div class=\"line\">\t\tthis.rabbitTemplate = rabbitTemplate;</div><div class=\"line\">\t\tthis.rabbitTemplate.setConfirmCallback(new RabbitTemplate.ConfirmCallback()&#123;</div><div class=\"line\">\t\t     @Override</div><div class=\"line\">\t\t     public void confirm(CorrelationData correlationData, boolean ack, String cause) &#123;</div><div class=\"line\">\t\t         if (ack) &#123;</div><div class=\"line\">\t\t             System.out.println(\"消息确认成功\");</div><div class=\"line\">\t\t         &#125; else &#123;</div><div class=\"line\">\t\t             //处理丢失的消息（nack）</div><div class=\"line\">\t\t            System.out.println(\"消息确认失败\");</div><div class=\"line\">\t\t         &#125;</div><div class=\"line\">\t\t     &#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t&#125;*/</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessage</span><span class=\"params\">(Object message)</span> </span>&#123;</div><div class=\"line\">\t\tLOG.debug(<span class=\"string\">\"to send message:&#123;&#125;\"</span>, message);</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\trabbitTemplate.convertAndSend(AmqpConfig.EXCHANGE, message.toString(), message);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tLOG.error(<span class=\"string\">\"发送队列消息错：\"</span> + <span class=\"string\">\"\"</span>, e);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>发送者很简单，这里我们通过接口访问的形式，调用了MessageProducer的sendMessage方法，rabbitTemplate.convertAndSend是发送消息的调用，第一个参数表示交换机，使用mq的订阅功能并不需要理会queue，只需要指定交换机，这里的交换机需要跟消费者一样；第二个参数是关键字匹配，如这里发送了5条消息，关键字如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">messageProducer.sendMessage(&quot;info.red.a&quot;);</div><div class=\"line\">messageProducer.sendMessage(&quot;info.red.b&quot;);</div><div class=\"line\">messageProducer.sendMessage(&quot;info.black.a&quot;);</div><div class=\"line\">messageProducer.sendMessage(&quot;err.red.a&quot;);</div><div class=\"line\">messageProducer.sendMessage(&quot;info.red.a.a&quot;);</div></pre></td></tr></table></figure></p>\n<p>看到AmqpConfig.java类的binding方法，那里消费者匹配了info.red.#方法，*表示匹配一个，#表示匹配多个，所以这里发送的5条消息，只有1、2、4会被接收到，如果是info.red.* 则只有1、2会被接收。</p>\n","excerpt":"","more":"<p>搭建springboot的时候比较喜欢用多模块管理，所以先新建一个父maven程序，select archetype时选择maven-archetype-site-simple，创建完后，pom.xml如下<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>per.example.mq<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>example-mq-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>example-mq-parent<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.apache.org<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- Import dependency management from Spring Boot --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!--如果要把springboot工程打包成war执行，需要该jar --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-legacy<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>到此父maven就完成，把项目下的src文件夹删了，具体看实际需求<br>在父maven项目上右键新建maven module，选择maven-archetype-webapp创建一个web项目，完成，这里都是以eclipse为例，子maven的pom.xml如下<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span></div><div class=\"line\">\t<span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>per.example.mq<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>example-mq-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>example-mq-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>example-mq-server Maven Webapp<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.apache.org<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 项目编码配置 start --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 项目编码配置 end --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 要使用LOG4J，去掉该依赖 --&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j-over-slf4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-logging<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 使用log4j，不使用默认的logback --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 要打成war包执行，需要该依赖 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-legacy<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 要打成war包执行，去掉内嵌的tomcat --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"comment\">&lt;!-- 引入mq包 --&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>  </div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">finalName</span>&gt;</span>sq580-mq-server<span class=\"tag\">&lt;/<span class=\"name\">finalName</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>先创一个简单的app来测试springboot启动有没有问题，在最外层的包目录下创建一个Application.java类，必须在外层，如pre.example.mq路径下创建<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.web.SpringBootServletInitializer;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SpringBootApplication</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> <span class=\"keyword\">extends</span> <span class=\"title\">SpringBootServletInitializer</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> SpringApplicationBuilder <span class=\"title\">configure</span><span class=\"params\">(SpringApplicationBuilder application)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> application.sources(Application.class);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tSpringApplication.run(Application.class, args);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在pre.example.mq路径下创建一个controller包，然后创建一个TestController.Java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq.controller;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.ResponseBody;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> pre.example.mq.mq.data.service.MqSendService;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Controller</span></div><div class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestController</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Autowired</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> MqSendService mqSendService;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/test\"</span>)</div><div class=\"line\">    <span class=\"meta\">@ResponseBody</span></div><div class=\"line\">    <span class=\"function\">String <span class=\"title\">test</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t    <span class=\"comment\">// 这个再这里暂时还没有用，可以先注释</span></div><div class=\"line\">\t\tmqSendService.sendBindMsg();</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"success\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>完成，点击项目执行Run As - Java Application也可以，直接像普通的web项目在tomcat下启动也可以，如果8080端口被占，前者要在配置里修改访问端口，后者跟平常使用无异，springboot还可以配置彩色日志，为了快速开发，此处都不赘述，启动后会看到类似下方的界面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">  .   ____          _            __ _ _</div><div class=\"line\"> /\\\\ / ___&apos;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\</div><div class=\"line\">( ( )\\___ | &apos;_ | &apos;_| | &apos;_ \\/ _` | \\ \\ \\ \\</div><div class=\"line\"> \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )</div><div class=\"line\">  &apos;  |____| .__|_| |_|_| |_\\__, | / / / /</div><div class=\"line\"> =========|_|==============|___/=/_/_/_/</div><div class=\"line\"> :: Spring Boot ::        (v1.3.5.RELEASE)</div><div class=\"line\"></div><div class=\"line\">[2017-05-27 10:57:23.677] boot - 9464  INFO [localhost-startStop-1] --- Application: Starting Application on Yangshaokun-PC with PID 9464 (E:\\apache-tomcat-7.0.67\\webapps\\wtpwebapps5\\sq580-mq-server\\WEB-INF\\classes started by Yangshaokun in E:\\eclipse)</div><div class=\"line\">[2017-05-27 10:57:23.679] boot - 9464  INFO [localhost-startStop-1] --- Application: The following profiles are active: develop</div><div class=\"line\">[2017-05-27 10:57:23.744] boot - 9464  INFO [localhost-startStop-1] --- AnnotationConfigEmbeddedWebApplicationContext: Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@294536ae: startup date [Sat May 27 10:57:23 CST 2017]; root of context hierarchy</div><div class=\"line\">[2017-05-27 10:57:25.200] boot - 9464  INFO [localhost-startStop-1] --- PostProcessorRegistrationDelegate$BeanPostProcessorChecker: Bean &apos;org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration&apos; of type [class org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4d0a742a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</div><div class=\"line\">[2017-05-27 10:57:25.239] boot - 9464  INFO [localhost-startStop-1] --- [/sq580-mq-server]: Initializing Spring embedded WebApplicationContext</div><div class=\"line\">[2017-05-27 10:57:25.239] boot - 9464  INFO [localhost-startStop-1] --- ContextLoader: Root WebApplicationContext: initialization completed in 1496 ms</div><div class=\"line\">[2017-05-27 10:57:25.710] boot - 9464  INFO [localhost-startStop-1] --- TomcatWebSocketContainerCustomizer: NonEmbeddedServletContainerFactory detected. Websockets support should be native so this normally is not a problem.</div><div class=\"line\">[2017-05-27 10:57:26.017] boot - 9464  INFO [localhost-startStop-1] --- ServletRegistrationBean: Mapping servlet: &apos;dispatcherServlet&apos; to [/]</div><div class=\"line\">[2017-05-27 10:57:26.018] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;errorPageFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.018] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;characterEncodingFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;hiddenHttpMethodFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;httpPutFormContentFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.019] boot - 9464  INFO [localhost-startStop-1] --- FilterRegistrationBean: Mapping filter: &apos;requestContextFilter&apos; to: [/*]</div><div class=\"line\">[2017-05-27 10:57:26.122] boot - 9464  INFO [localhost-startStop-1] --- AmqpConfig: recieveQueue:dataToCare_defaultrabbitmqIp:112.74.209.184:5672</div><div class=\"line\">[2017-05-27 10:57:26.361] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerAdapter: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@294536ae: startup date [Sat May 27 10:57:23 CST 2017]; root of context hierarchy</div><div class=\"line\">[2017-05-27 10:57:26.473] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped &quot;&#123;[/test]&#125;&quot; onto java.lang.String com.sq580.mq.controller.TestController.one()</div><div class=\"line\">[2017-05-27 10:57:26.481] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped &quot;&#123;[/error]&#125;&quot; onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)</div><div class=\"line\">[2017-05-27 10:57:26.481] boot - 9464  INFO [localhost-startStop-1] --- RequestMappingHandlerMapping: Mapped &quot;&#123;[/error],produces=[text/html]&#125;&quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)</div><div class=\"line\">[2017-05-27 10:57:26.514] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</div><div class=\"line\">[2017-05-27 10:57:26.514] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</div><div class=\"line\">[2017-05-27 10:57:26.559] boot - 9464  INFO [localhost-startStop-1] --- SimpleUrlHandlerMapping: Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</div><div class=\"line\">[2017-05-27 10:57:26.988] boot - 9464  INFO [localhost-startStop-1] --- AnnotationMBeanExporter: Registering beans for JMX exposure on startup</div><div class=\"line\">[2017-05-27 10:57:26.998] boot - 9464  INFO [localhost-startStop-1] --- DefaultLifecycleProcessor: Starting beans in phase -2147482648</div><div class=\"line\">[2017-05-27 10:57:26.998] boot - 9464  INFO [localhost-startStop-1] --- DefaultLifecycleProcessor: Starting beans in phase 2147483647</div><div class=\"line\">[2017-05-27 10:57:27.156] boot - 9464  INFO [SimpleAsyncTaskExecutor-1] --- CachingConnectionFactory: Created new connection: SimpleConnection@35b4193e [delegate=amqp://openapi@112.74.209.184:5672/openapi]</div><div class=\"line\">[2017-05-27 10:57:27.346] boot - 9464  INFO [localhost-startStop-1] --- Application: Started Application in 4.331 seconds (JVM running for 7.63)</div><div class=\"line\">[2017-05-27 10:57:27.359] boot - 9464  INFO [main] --- Http11AprProtocol: Starting ProtocolHandler [&quot;http-apr-9094&quot;]</div><div class=\"line\">[2017-05-27 10:57:27.374] boot - 9464  INFO [main] --- AjpAprProtocol: Starting ProtocolHandler [&quot;ajp-apr-8049&quot;]</div><div class=\"line\">[2017-05-27 10:57:27.375] boot - 9464  INFO [main] --- Catalina: Server startup in 6336 ms</div></pre></td></tr></table></figure></p>\n<p>看到这里没有报错就说明成功了，下面开始来配置mq，mq的选择可以自己查询资料做对比，此处以rabbitmq为例，在子maven中要引入包，见pom.xml，在src/main/resources目录下创建一个application.yml或者properties文件，这里以yml为例<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">spring:</span></div><div class=\"line\">  profiles.active: develop</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">---</span></div><div class=\"line\"><span class=\"attr\">spring:</span></div><div class=\"line\"><span class=\"attr\">  profiles:</span> develop</div><div class=\"line\"><span class=\"attr\">  output:</span> </div><div class=\"line\"><span class=\"attr\">    ansi:</span> </div><div class=\"line\"><span class=\"attr\">      enabled:</span> detect</div><div class=\"line\">      </div><div class=\"line\"><span class=\"attr\">rabbitmq:</span></div><div class=\"line\"><span class=\"attr\">  ip:</span> 你的mq服务器ip:<span class=\"number\">5672</span></div><div class=\"line\"><span class=\"attr\">  user:</span> guest</div><div class=\"line\"><span class=\"attr\">  password:</span> guest</div><div class=\"line\"><span class=\"attr\">  virtualHost:</span> myhost</div><div class=\"line\"><span class=\"attr\">  app:</span></div><div class=\"line\"><span class=\"attr\">    reciveQueue:</span> xxx(队列名)</div><div class=\"line\"><span class=\"meta\">---</span></div></pre></td></tr></table></figure></p>\n<p>这样准备工作就做完了，mq的工作流程、原理、搭建此处不赘述，上官网下一个mq包，解压，运行即可，跟redis类似，上述配置文件中的output.ansi.enabled是开启彩色日志的。<br>首先，在pre.example.mq路径下创建config包，再创建一个AmqpConfig.java，如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq.config;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.AcknowledgeMode;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.Binding;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.BindingBuilder;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.Message;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.Queue;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.TopicExchange;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.connection.CachingConnectionFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.connection.ConnectionFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.core.ChannelAwareMessageListener;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Value;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.config.ConfigurableBeanFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Scope;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.rabbitmq.client.Channel;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Configuration</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AmqpConfig</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> Logger LOG = LoggerFactory.getLogger(AmqpConfig.class);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.app.reciveQueue&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String recieveQueue;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.ip&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String rabbitmqIp;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.user&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String rabbitmqUser;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.password&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String rabbitmqPassword;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;rabbitmq.virtualHost&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String virtualHost;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String EXCHANGE = <span class=\"string\">\"spring-boot-exchange\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 不管是发送端还是接收端，都需要创建这个</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> ConnectionFactory <span class=\"title\">connectionFactory</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tCachingConnectionFactory connectionFactory = <span class=\"keyword\">new</span> CachingConnectionFactory();</div><div class=\"line\">\t\tconnectionFactory.setAddresses(rabbitmqIp);</div><div class=\"line\">\t\tconnectionFactory.setUsername(rabbitmqUser);</div><div class=\"line\">\t\tconnectionFactory.setPassword(rabbitmqPassword);</div><div class=\"line\">\t\tconnectionFactory.setVirtualHost(virtualHost); <span class=\"comment\">// 如果不设置这个，默认在根目录</span></div><div class=\"line\">\t\tconnectionFactory.setPublisherConfirms(<span class=\"keyword\">true</span>); <span class=\"comment\">// 显示调用，才能进行消息的回调。</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> connectionFactory;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 发送者发送消息需要RabbitTemplate提供api，此处消费者不需要</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"meta\">@Scope</span>(ConfigurableBeanFactory.SCOPE_PROTOTYPE)</div><div class=\"line\">\t<span class=\"comment\">// 最好为prototype类型</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> RabbitTemplate <span class=\"title\">rabbitTemplate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tRabbitTemplate template = <span class=\"keyword\">new</span> RabbitTemplate(connectionFactory());</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> template;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 针对消费者配置 1. 设置交换机类型 2. 将队列绑定到交换机 FanoutExchange:</div><div class=\"line\">\t * 将消息分发到所有的绑定队列，无routingkey的概念 HeadersExchange ：通过添加属性key-value匹配</div><div class=\"line\">\t * DirectExchange:按照routingkey分发到指定队列 TopicExchange:多关键字匹配</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> TopicExchange <span class=\"title\">defaultExchange</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> TopicExchange(EXCHANGE);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Queue <span class=\"title\">queue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Queue(recieveQueue, <span class=\"keyword\">true</span>); <span class=\"comment\">// 队列持久</span></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 这里有必要记录一下，这里queue跟exchange绑定了，</div><div class=\"line\">\t * 也就是生产者发消息到该exchange后，</div><div class=\"line\">\t * exchange会根据routingKey关键字发送到符合规则的queue中去，</div><div class=\"line\">\t * 如果不符合则丢弃，如果上rabbitmq的管理后台看的话可以看到即便项目关闭，</div><div class=\"line\">\t * exchang和queue还是存在绑定关系，看到defaultExchange()方法中，</div><div class=\"line\">\t * 创建的topicExchange使用了spring-boot-exchange这个名字，</div><div class=\"line\">\t * 如果临时想换个类型的交换机，则需要使用不同的exchang名字，</div><div class=\"line\">\t * 不然的话会报错，或者直接到管理后台把exchang或删了</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Binding <span class=\"title\">binding</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 绑定队列到交换机中，并使用关键字匹配，后面会讲到关键字的匹配</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> BindingBuilder.bind(queue()).to(defaultExchange())</div><div class=\"line\">\t\t\t\t.with(<span class=\"string\">\"info.red.#\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 消费者接收消息并作出应答，确保消息不会因为消费者的奔溃而被丢弃</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"meta\">@Bean</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> SimpleMessageListenerContainer <span class=\"title\">messageContainer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tLOG.info(<span class=\"string\">\"recieveQueue:\"</span> + recieveQueue + <span class=\"string\">\"rabbitmqIp:\"</span> + rabbitmqIp);</div><div class=\"line\">\t\tSimpleMessageListenerContainer container = <span class=\"keyword\">new</span> SimpleMessageListenerContainer(</div><div class=\"line\">\t\t\t\tconnectionFactory());</div><div class=\"line\">\t\tcontainer.setQueues(queue());</div><div class=\"line\">\t\tcontainer.setExposeListenerChannel(<span class=\"keyword\">true</span>);</div><div class=\"line\">\t\tcontainer.setMaxConcurrentConsumers(<span class=\"number\">1</span>);</div><div class=\"line\">\t\tcontainer.setConcurrentConsumers(<span class=\"number\">1</span>);</div><div class=\"line\">\t\tcontainer.setAcknowledgeMode(AcknowledgeMode.MANUAL); <span class=\"comment\">// 设置确认模式手工确认</span></div><div class=\"line\">\t\tcontainer.setMessageListener(<span class=\"keyword\">new</span> ChannelAwareMessageListener() &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message, Channel channel)</span></div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">byte</span>[] body = message.getBody();</div><div class=\"line\">\t\t\t\tLOG.info(<span class=\"string\">\"receive msg : \"</span> + <span class=\"keyword\">new</span> String(body));</div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"receive msg : \"</span> + <span class=\"keyword\">new</span> String(body));</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t\tchannel.basicAck(message.getMessageProperties()</div><div class=\"line\">\t\t\t\t\t\t\t.getDeliveryTag(), <span class=\"keyword\">false</span>); <span class=\"comment\">// 确认消息成功消费</span></div><div class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t\t\tLOG.error(<span class=\"string\">\"消费队列失败:\"</span> + <span class=\"string\">\"\"</span>, e);</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 重试一次</span></div><div class=\"line\">\t\t\t\t\tchannel.basicNack(message.getMessageProperties()</div><div class=\"line\">\t\t\t\t\t\t\t.getDeliveryTag(), <span class=\"keyword\">false</span>, <span class=\"keyword\">false</span>);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> container;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>打开TestController中的service调用，创建一个service，如<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq.mq.data.service;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> pre.example.mq.mq.MessageProducer;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MqSendService</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">private</span> MessageProducer messageProducer;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">    * <span class=\"doctag\">@Title</span>: sendMsg</div><div class=\"line\">    * <span class=\"doctag\">@Description</span>: 发送消息</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMsg</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"info.red.a\"</span>);</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"info.red.b\"</span>);</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"info.black.a\"</span>);</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"err.red.a\"</span>);</div><div class=\"line\">        messageProducer.sendMessage(<span class=\"string\">\"info.red.a.a\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>MessageProducer.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> pre.example.mq.mq;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.annotation.Resource;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.amqp.core.AmqpTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> pre.example.mq.config.AmqpConfig;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageProducer</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> Logger LOG = LoggerFactory.getLogger(MessageProducer.class);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Resource</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> AmqpTemplate rabbitTemplate;</div><div class=\"line\">\t<span class=\"comment\">/*public void setRabbitTemplate(RabbitTemplate rabbitTemplate) &#123; // amqp 1.3.5之前版本需要显示设置消息确认，无法直接使用AmqpTemplate，需要使用RabbitTemplate</div><div class=\"line\">\t\tthis.rabbitTemplate = rabbitTemplate;</div><div class=\"line\">\t\tthis.rabbitTemplate.setConfirmCallback(new RabbitTemplate.ConfirmCallback()&#123;</div><div class=\"line\">\t\t     @Override</div><div class=\"line\">\t\t     public void confirm(CorrelationData correlationData, boolean ack, String cause) &#123;</div><div class=\"line\">\t\t         if (ack) &#123;</div><div class=\"line\">\t\t             System.out.println(\"消息确认成功\");</div><div class=\"line\">\t\t         &#125; else &#123;</div><div class=\"line\">\t\t             //处理丢失的消息（nack）</div><div class=\"line\">\t\t            System.out.println(\"消息确认失败\");</div><div class=\"line\">\t\t         &#125;</div><div class=\"line\">\t\t     &#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t&#125;*/</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessage</span><span class=\"params\">(Object message)</span> </span>&#123;</div><div class=\"line\">\t\tLOG.debug(<span class=\"string\">\"to send message:&#123;&#125;\"</span>, message);</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\trabbitTemplate.convertAndSend(AmqpConfig.EXCHANGE, message.toString(), message);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tLOG.error(<span class=\"string\">\"发送队列消息错：\"</span> + <span class=\"string\">\"\"</span>, e);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>发送者很简单，这里我们通过接口访问的形式，调用了MessageProducer的sendMessage方法，rabbitTemplate.convertAndSend是发送消息的调用，第一个参数表示交换机，使用mq的订阅功能并不需要理会queue，只需要指定交换机，这里的交换机需要跟消费者一样；第二个参数是关键字匹配，如这里发送了5条消息，关键字如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">messageProducer.sendMessage(&quot;info.red.a&quot;);</div><div class=\"line\">messageProducer.sendMessage(&quot;info.red.b&quot;);</div><div class=\"line\">messageProducer.sendMessage(&quot;info.black.a&quot;);</div><div class=\"line\">messageProducer.sendMessage(&quot;err.red.a&quot;);</div><div class=\"line\">messageProducer.sendMessage(&quot;info.red.a.a&quot;);</div></pre></td></tr></table></figure></p>\n<p>看到AmqpConfig.java类的binding方法，那里消费者匹配了info.red.#方法，*表示匹配一个，#表示匹配多个，所以这里发送的5条消息，只有1、2、4会被接收到，如果是info.red.* 则只有1、2会被接收。</p>\n"},{"title":"使用redis维护token","date":"2017-05-03T09:23:40.000Z","_content":"### 用redis维护token的思路：\n#### 存入\n```Java\n// 生成token\nString token = UUID.randomUUID().toString();\n// 将对象转为Json串\nString json = JacksonUtils.newInstance().obj2json(user);\n// 以token为key，对象为value缓存到redis\njedisUtils.set(token, json, 120 * 60);\n// 将userId - token以key - value的形式放入到一个hash表中，这里最好遵循标准的命名规则：（项目：模块：形式）\njedisUtils.hset(\"project:sso:uid_token\", \"project:sso:\".concat(user.getUserId()), token);\n```\n#### 校验\n```Java\nString token = request.getHeader(\"token\");\nif(null != token && StringUtils.isNotBlank(token)) {\n\t// 获取key为token的对象，并续租token\n\tString objJson = jedisUtils.get(token, 120 * 60);\n\tif (objJson != null && StringUtils.isNotBlank(objJson)) {\n\t\t// 获取对象\n\t\tUser user = JSON.parseObject(objJson, User.class);\n\t\tif (user != null) {\n\t\t\t// 通过userid获取hash表中的token，并续租\n\t\t\tString val = jedisUtils.get(key, 120 * 60);\n\t\t\tif (val.equals(token)) {\n\t\t\t\t// 通过验证\n\t\t\t} else {\n\t\t\t\t// 不通过验证\n\t\t\t}\n\t\t} else {\n\t\t\t// 不通过验证\n\t\t}\n\t} else {\n\t\t// 不通过验证\n\t}\n} else {\n\t// 提示需传token\n}\n```\n**如果只以键值的形式存储，会有以下几种问题：** \n1、用户登录的时候重新分配了token，同一用户可重复登录\n2、也可以以uid-token的形式存储，每次登录判断token是否一致，但这种就无法简略到只传token了\n**用hash配合的逻辑** \n1、存一对token-user\n2、hash存uid-token\n3、每次接收token后拿到user，用uid去获取token\n4、比对两个token\n**好处：** \nB用户登录后，两个键值都改变了，A用户操作的时候用旧的token可以获取到user，但是hash中的token已经变了，所以验证不通过，因为设置了操作时效性，所以旧的token-user会在规定时间后失效，释放内存\n\n**附：** jedisUtils工具类见【Java操作redis】文章","source":"_posts/使用redis维护token.md","raw":"---\ntitle: 使用redis维护token\ndate: 2017-05-03 17:23:40\ncategories: [Java]\ntags: [Java,redis]\n---\n### 用redis维护token的思路：\n#### 存入\n```Java\n// 生成token\nString token = UUID.randomUUID().toString();\n// 将对象转为Json串\nString json = JacksonUtils.newInstance().obj2json(user);\n// 以token为key，对象为value缓存到redis\njedisUtils.set(token, json, 120 * 60);\n// 将userId - token以key - value的形式放入到一个hash表中，这里最好遵循标准的命名规则：（项目：模块：形式）\njedisUtils.hset(\"project:sso:uid_token\", \"project:sso:\".concat(user.getUserId()), token);\n```\n#### 校验\n```Java\nString token = request.getHeader(\"token\");\nif(null != token && StringUtils.isNotBlank(token)) {\n\t// 获取key为token的对象，并续租token\n\tString objJson = jedisUtils.get(token, 120 * 60);\n\tif (objJson != null && StringUtils.isNotBlank(objJson)) {\n\t\t// 获取对象\n\t\tUser user = JSON.parseObject(objJson, User.class);\n\t\tif (user != null) {\n\t\t\t// 通过userid获取hash表中的token，并续租\n\t\t\tString val = jedisUtils.get(key, 120 * 60);\n\t\t\tif (val.equals(token)) {\n\t\t\t\t// 通过验证\n\t\t\t} else {\n\t\t\t\t// 不通过验证\n\t\t\t}\n\t\t} else {\n\t\t\t// 不通过验证\n\t\t}\n\t} else {\n\t\t// 不通过验证\n\t}\n} else {\n\t// 提示需传token\n}\n```\n**如果只以键值的形式存储，会有以下几种问题：** \n1、用户登录的时候重新分配了token，同一用户可重复登录\n2、也可以以uid-token的形式存储，每次登录判断token是否一致，但这种就无法简略到只传token了\n**用hash配合的逻辑** \n1、存一对token-user\n2、hash存uid-token\n3、每次接收token后拿到user，用uid去获取token\n4、比对两个token\n**好处：** \nB用户登录后，两个键值都改变了，A用户操作的时候用旧的token可以获取到user，但是hash中的token已经变了，所以验证不通过，因为设置了操作时效性，所以旧的token-user会在规定时间后失效，释放内存\n\n**附：** jedisUtils工具类见【Java操作redis】文章","slug":"使用redis维护token","published":1,"updated":"2017-05-03T09:23:54.037Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou5g002dpo2yl5123581","content":"<h3 id=\"用redis维护token的思路：\"><a href=\"#用redis维护token的思路：\" class=\"headerlink\" title=\"用redis维护token的思路：\"></a>用redis维护token的思路：</h3><h4 id=\"存入\"><a href=\"#存入\" class=\"headerlink\" title=\"存入\"></a>存入</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 生成token</span></div><div class=\"line\">String token = UUID.randomUUID().toString();</div><div class=\"line\"><span class=\"comment\">// 将对象转为Json串</span></div><div class=\"line\">String json = JacksonUtils.newInstance().obj2json(user);</div><div class=\"line\"><span class=\"comment\">// 以token为key，对象为value缓存到redis</span></div><div class=\"line\">jedisUtils.set(token, json, <span class=\"number\">120</span> * <span class=\"number\">60</span>);</div><div class=\"line\"><span class=\"comment\">// 将userId - token以key - value的形式放入到一个hash表中，这里最好遵循标准的命名规则：（项目：模块：形式）</span></div><div class=\"line\">jedisUtils.hset(<span class=\"string\">\"project:sso:uid_token\"</span>, <span class=\"string\">\"project:sso:\"</span>.concat(user.getUserId()), token);</div></pre></td></tr></table></figure>\n<h4 id=\"校验\"><a href=\"#校验\" class=\"headerlink\" title=\"校验\"></a>校验</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">String token = request.getHeader(<span class=\"string\">\"token\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != token &amp;&amp; StringUtils.isNotBlank(token)) &#123;</div><div class=\"line\">\t<span class=\"comment\">// 获取key为token的对象，并续租token</span></div><div class=\"line\">\tString objJson = jedisUtils.get(token, <span class=\"number\">120</span> * <span class=\"number\">60</span>);</div><div class=\"line\">\t<span class=\"keyword\">if</span> (objJson != <span class=\"keyword\">null</span> &amp;&amp; StringUtils.isNotBlank(objJson)) &#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取对象</span></div><div class=\"line\">\t\tUser user = JSON.parseObject(objJson, User.class);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (user != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 通过userid获取hash表中的token，并续租</span></div><div class=\"line\">\t\t\tString val = jedisUtils.get(key, <span class=\"number\">120</span> * <span class=\"number\">60</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (val.equals(token)) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 通过验证</span></div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 不通过验证</span></div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 不通过验证</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 不通过验证</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t<span class=\"comment\">// 提示需传token</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>如果只以键值的形式存储，会有以下几种问题：</strong><br>1、用户登录的时候重新分配了token，同一用户可重复登录<br>2、也可以以uid-token的形式存储，每次登录判断token是否一致，但这种就无法简略到只传token了<br><strong>用hash配合的逻辑</strong><br>1、存一对token-user<br>2、hash存uid-token<br>3、每次接收token后拿到user，用uid去获取token<br>4、比对两个token<br><strong>好处：</strong><br>B用户登录后，两个键值都改变了，A用户操作的时候用旧的token可以获取到user，但是hash中的token已经变了，所以验证不通过，因为设置了操作时效性，所以旧的token-user会在规定时间后失效，释放内存</p>\n<p><strong>附：</strong> jedisUtils工具类见【Java操作redis】文章</p>\n","excerpt":"","more":"<h3 id=\"用redis维护token的思路：\"><a href=\"#用redis维护token的思路：\" class=\"headerlink\" title=\"用redis维护token的思路：\"></a>用redis维护token的思路：</h3><h4 id=\"存入\"><a href=\"#存入\" class=\"headerlink\" title=\"存入\"></a>存入</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 生成token</span></div><div class=\"line\">String token = UUID.randomUUID().toString();</div><div class=\"line\"><span class=\"comment\">// 将对象转为Json串</span></div><div class=\"line\">String json = JacksonUtils.newInstance().obj2json(user);</div><div class=\"line\"><span class=\"comment\">// 以token为key，对象为value缓存到redis</span></div><div class=\"line\">jedisUtils.set(token, json, <span class=\"number\">120</span> * <span class=\"number\">60</span>);</div><div class=\"line\"><span class=\"comment\">// 将userId - token以key - value的形式放入到一个hash表中，这里最好遵循标准的命名规则：（项目：模块：形式）</span></div><div class=\"line\">jedisUtils.hset(<span class=\"string\">\"project:sso:uid_token\"</span>, <span class=\"string\">\"project:sso:\"</span>.concat(user.getUserId()), token);</div></pre></td></tr></table></figure>\n<h4 id=\"校验\"><a href=\"#校验\" class=\"headerlink\" title=\"校验\"></a>校验</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">String token = request.getHeader(<span class=\"string\">\"token\"</span>);</div><div class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != token &amp;&amp; StringUtils.isNotBlank(token)) &#123;</div><div class=\"line\">\t<span class=\"comment\">// 获取key为token的对象，并续租token</span></div><div class=\"line\">\tString objJson = jedisUtils.get(token, <span class=\"number\">120</span> * <span class=\"number\">60</span>);</div><div class=\"line\">\t<span class=\"keyword\">if</span> (objJson != <span class=\"keyword\">null</span> &amp;&amp; StringUtils.isNotBlank(objJson)) &#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 获取对象</span></div><div class=\"line\">\t\tUser user = JSON.parseObject(objJson, User.class);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (user != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 通过userid获取hash表中的token，并续租</span></div><div class=\"line\">\t\t\tString val = jedisUtils.get(key, <span class=\"number\">120</span> * <span class=\"number\">60</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (val.equals(token)) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 通过验证</span></div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 不通过验证</span></div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 不通过验证</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 不通过验证</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t<span class=\"comment\">// 提示需传token</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>如果只以键值的形式存储，会有以下几种问题：</strong><br>1、用户登录的时候重新分配了token，同一用户可重复登录<br>2、也可以以uid-token的形式存储，每次登录判断token是否一致，但这种就无法简略到只传token了<br><strong>用hash配合的逻辑</strong><br>1、存一对token-user<br>2、hash存uid-token<br>3、每次接收token后拿到user，用uid去获取token<br>4、比对两个token<br><strong>好处：</strong><br>B用户登录后，两个键值都改变了，A用户操作的时候用旧的token可以获取到user，但是hash中的token已经变了，所以验证不通过，因为设置了操作时效性，所以旧的token-user会在规定时间后失效，释放内存</p>\n<p><strong>附：</strong> jedisUtils工具类见【Java操作redis】文章</p>\n"},{"title":"判断浏览器版本","date":"2016-04-16T12:01:26.000Z","_content":"#### JS判断浏览器版本\n```html\n<script type=\"text/javascript\">\n\tfunction getBrowser() {\n\t\tvar userAgent = navigator.userAgent.toLowerCase();\n\t\tvar Sys = {};\n\t\tvar s;\n\t\t\n\t\t// IE\n\t\t(s = ua.match(/msie ([\\d.]+)/)) ? Sys.ie = s[1] : \n\t\t// 火狐\n\t\t(s = ua.match(/firefox\\/([\\d.]+)/)) ? Sys.firefox = s[1] : \n\t\t// 谷歌\n\t\t(s = ua.match(/chrome\\/([\\d.]+)/)) ? Sys.chrome = s[1] : \n\t\t// opera\n\t\t(s = ua.match(/opera.([\\d.]+)/)) ? Sys.opera = s[1] : \n\t\t// safari\n\t\t(s = ua.match(/version\\/([\\d.]+).*safari/)) ? Sys.safari = s[1] : 0;\n\t}\n</script>\n```\n##### 判断某个浏览器只需要用 if (Sys.ie) 形式就可以判断，若判断浏览器版本只需用 if(Sys.ie == '8.0') 形式，不过谷歌比较特殊，需要使用 if (Sys.chrome.substring(0, 2) == 53) 的形式来处理","source":"_posts/判断浏览器版本.md","raw":"---\ntitle: 判断浏览器版本\ndate: 2016-04-16 20:01:26\ncategories: [html]\ntags: [html,js]\n---\n#### JS判断浏览器版本\n```html\n<script type=\"text/javascript\">\n\tfunction getBrowser() {\n\t\tvar userAgent = navigator.userAgent.toLowerCase();\n\t\tvar Sys = {};\n\t\tvar s;\n\t\t\n\t\t// IE\n\t\t(s = ua.match(/msie ([\\d.]+)/)) ? Sys.ie = s[1] : \n\t\t// 火狐\n\t\t(s = ua.match(/firefox\\/([\\d.]+)/)) ? Sys.firefox = s[1] : \n\t\t// 谷歌\n\t\t(s = ua.match(/chrome\\/([\\d.]+)/)) ? Sys.chrome = s[1] : \n\t\t// opera\n\t\t(s = ua.match(/opera.([\\d.]+)/)) ? Sys.opera = s[1] : \n\t\t// safari\n\t\t(s = ua.match(/version\\/([\\d.]+).*safari/)) ? Sys.safari = s[1] : 0;\n\t}\n</script>\n```\n##### 判断某个浏览器只需要用 if (Sys.ie) 形式就可以判断，若判断浏览器版本只需用 if(Sys.ie == '8.0') 形式，不过谷歌比较特殊，需要使用 if (Sys.chrome.substring(0, 2) == 53) 的形式来处理","slug":"判断浏览器版本","published":1,"updated":"2016-12-29T08:23:58.163Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou5i002hpo2ykmg3kjxu","content":"<h4 id=\"JS判断浏览器版本\"><a href=\"#JS判断浏览器版本\" class=\"headerlink\" title=\"JS判断浏览器版本\"></a>JS判断浏览器版本</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\">\tfunction getBrowser() &#123;</div><div class=\"line\">\t\tvar userAgent = navigator.userAgent.toLowerCase();</div><div class=\"line\">\t\tvar Sys = &#123;&#125;;</div><div class=\"line\">\t\tvar s;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t// IE</div><div class=\"line\">\t\t(s = ua.match(/msie ([\\d.]+)/)) ? Sys.ie = s[1] : </div><div class=\"line\">\t\t// 火狐</div><div class=\"line\">\t\t(s = ua.match(/firefox\\/([\\d.]+)/)) ? Sys.firefox = s[1] : </div><div class=\"line\">\t\t// 谷歌</div><div class=\"line\">\t\t(s = ua.match(/chrome\\/([\\d.]+)/)) ? Sys.chrome = s[1] : </div><div class=\"line\">\t\t// opera</div><div class=\"line\">\t\t(s = ua.match(/opera.([\\d.]+)/)) ? Sys.opera = s[1] : </div><div class=\"line\">\t\t// safari</div><div class=\"line\">\t\t(s = ua.match(/version\\/([\\d.]+).*safari/)) ? Sys.safari = s[1] : 0;</div><div class=\"line\">\t&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h5 id=\"判断某个浏览器只需要用-if-Sys-ie-形式就可以判断，若判断浏览器版本只需用-if-Sys-ie-‘8-0’-形式，不过谷歌比较特殊，需要使用-if-Sys-chrome-substring-0-2-53-的形式来处理\"><a href=\"#判断某个浏览器只需要用-if-Sys-ie-形式就可以判断，若判断浏览器版本只需用-if-Sys-ie-‘8-0’-形式，不过谷歌比较特殊，需要使用-if-Sys-chrome-substring-0-2-53-的形式来处理\" class=\"headerlink\" title=\"判断某个浏览器只需要用 if (Sys.ie) 形式就可以判断，若判断浏览器版本只需用 if(Sys.ie == ‘8.0’) 形式，不过谷歌比较特殊，需要使用 if (Sys.chrome.substring(0, 2) == 53) 的形式来处理\"></a>判断某个浏览器只需要用 if (Sys.ie) 形式就可以判断，若判断浏览器版本只需用 if(Sys.ie == ‘8.0’) 形式，不过谷歌比较特殊，需要使用 if (Sys.chrome.substring(0, 2) == 53) 的形式来处理</h5>","excerpt":"","more":"<h4 id=\"JS判断浏览器版本\"><a href=\"#JS判断浏览器版本\" class=\"headerlink\" title=\"JS判断浏览器版本\"></a>JS判断浏览器版本</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></div><div class=\"line\">\tfunction getBrowser() &#123;</div><div class=\"line\">\t\tvar userAgent = navigator.userAgent.toLowerCase();</div><div class=\"line\">\t\tvar Sys = &#123;&#125;;</div><div class=\"line\">\t\tvar s;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t// IE</div><div class=\"line\">\t\t(s = ua.match(/msie ([\\d.]+)/)) ? Sys.ie = s[1] : </div><div class=\"line\">\t\t// 火狐</div><div class=\"line\">\t\t(s = ua.match(/firefox\\/([\\d.]+)/)) ? Sys.firefox = s[1] : </div><div class=\"line\">\t\t// 谷歌</div><div class=\"line\">\t\t(s = ua.match(/chrome\\/([\\d.]+)/)) ? Sys.chrome = s[1] : </div><div class=\"line\">\t\t// opera</div><div class=\"line\">\t\t(s = ua.match(/opera.([\\d.]+)/)) ? Sys.opera = s[1] : </div><div class=\"line\">\t\t// safari</div><div class=\"line\">\t\t(s = ua.match(/version\\/([\\d.]+).*safari/)) ? Sys.safari = s[1] : 0;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h5 id=\"判断某个浏览器只需要用-if-Sys-ie-形式就可以判断，若判断浏览器版本只需用-if-Sys-ie-‘8-0’-形式，不过谷歌比较特殊，需要使用-if-Sys-chrome-substring-0-2-53-的形式来处理\"><a href=\"#判断某个浏览器只需要用-if-Sys-ie-形式就可以判断，若判断浏览器版本只需用-if-Sys-ie-‘8-0’-形式，不过谷歌比较特殊，需要使用-if-Sys-chrome-substring-0-2-53-的形式来处理\" class=\"headerlink\" title=\"判断某个浏览器只需要用 if (Sys.ie) 形式就可以判断，若判断浏览器版本只需用 if(Sys.ie == ‘8.0’) 形式，不过谷歌比较特殊，需要使用 if (Sys.chrome.substring(0, 2) == 53) 的形式来处理\"></a>判断某个浏览器只需要用 if (Sys.ie) 形式就可以判断，若判断浏览器版本只需用 if(Sys.ie == ‘8.0’) 形式，不过谷歌比较特殊，需要使用 if (Sys.chrome.substring(0, 2) == 53) 的形式来处理</h5>"},{"title":"原生数据库访问","date":"2016-07-09T01:26:53.000Z","_content":"##### 本例以mysql为例\n```Sql\n/*\nMySQL Data Transfer\nSource Host: localhost\nSource Database: test\nTarget Host: localhost\nTarget Database: test\nDate: 2016/07/09 09:19:38\n*/\n\nSET FOREIGN_KEY_CHECKS=0;\n-- ----------------------------\n-- Table structure for user 创建表\n-- ----------------------------\nCREATE TABLE `user` (\n  `id` int(11) NOT NULL,\n  `username` varchar(40) DEFAULT NULL,\n  `password` varchar(255) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records 填充数据\n-- ----------------------------\nINSERT INTO `user` VALUES ('1', '张一', '1');\nINSERT INTO `user` VALUES ('2', '张二', '2');\nINSERT INTO `user` VALUES ('3', '张三', '3');\nINSERT INTO `user` VALUES ('4', '张四', '4');\nINSERT INTO `user` VALUES ('5', '张五', '5');\n```\n##### 数据库配置文件jdbc.properties\n```xml\njdbc_driverClassName=com.mysql.jdbc.Driver\njdbc_url=jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull\njdbc_username=root\njdbc_password=root\n```\n##### Code\n```Java\npackage test;\n\nimport java.io.IOException;\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.ResultSetMetaData;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Properties;\n\nimport org.apache.tomcat.dbcp.dbcp.ConnectionFactory;\n\npublic class Test {\n\n\tprivate static Properties prop;\n\tprivate static Connection conn = null;\n\tprivate static final String CONFIGNAME = \"jdbc.properties\";\n\n\tpublic static void main(String[] args) {\n\t\t// 打开数据库链接\n\t\tgetConnection();\n\t\t\n        try {\n        \t// 禁用自动提交\n\t\t\tconn.setAutoCommit(false);\n\t\t\tSystem.out.println(\"默认的事务隔离级别:\" + conn.getTransactionIsolation());\n\t\t\t\n\t\t\t// 用 conn 创建 Statement 对象类实例\n            Statement statement = conn.createStatement();\n            // 插入数据\n            statement.executeUpdate(\"insert user(id, username, password) values(6, '张六', '6')\");\n            System.out.println(\"Insert Success\");\n\t\t\t\n\t\t\tSystem.out.println(\"------------------ 我是分割线 ---------------------\");\n            \n            // 提交事务\n            conn.commit();\n            \n            // 查询的话不需要事务，用ResultSet类的对象，返回查询的结果\n\t\t\tString sql = \"select * from user where id = 1\";\n\t\t\tResultSet result = statement.executeQuery(sql_pojo);\n\t\t\t// 原生的打印结果\n            while (result.next()) {\n                int id = result.getInt(\"id\");\n                String username = result.getString(\"username\");\n                String password = result.getString(\"password\");\n                System.out.println(\"id: \" + id + \" username: \" + username + \" password: \" + password);\n            }\n            result = statement.executeQuery(sql_pojo);\n            \n\t\t\t// 转为bean\n            List<User> bean = getBeanList(result);\n\t\t\tfor (int i = 0; i < bean.size(); i++) {\n\t\t\t\tSystem.out.println(bean.get(i).toString());\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(\"------------------ 我是分割线 ---------------------\");\n\t\t\t\n\t\t\tString sql_list = \"select * from user\";\n\t\t\tresult = statement.executeQuery(sql_list);\n\t\t\t// 原生的打印结果\n\t\t\twhile (result.next()) {\n                int id = result.getInt(\"id\");\n                String username = result.getString(\"username\");\n                String password = result.getString(\"password\");\n                System.out.println(\"id: \" + id + \" username: \" + username + \" password: \" + password);\n            }\n\t\t\t\n\t\t\tresult = statement.executeQuery(sql_list);\n\t\t\t// 转为list\n\t\t\tList<User> list = getBeanList(result);\n\t\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\t\tSystem.out.println(list.get(i).toString());\n\t\t\t}\n\t\t} catch (SQLException e) {\n\t\t\tif (conn != null){\n                // 事务回滚\n                try {\n\t\t\t\t\tconn.rollback();\n\t\t\t\t} catch (SQLException e1) {\n\t\t\t\t\te1.printStackTrace();\n\t\t\t\t}\n            }\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\t// 关闭数据库链接\n\t\t\tcloseConnection();\n\t\t}\n\t\t\n\t}\n\n\t/**\n\t * 获取数据库连接\n\t * @throws SQLException\n\t */\n\tpublic static Connection getConnection() {\n\t\tprop = new Properties();\n\t\t\n\t\ttry {\n\t\t\tprop.load(ConnectionFactory.class.getClassLoader().getResourceAsStream(CONFIGNAME));\n\t\t\tClass.forName(prop.getProperty(\"jdbc_driverClassName\"));\n\t\t\tconn = DriverManager.getConnection(\n\t\t\t\t\tprop.getProperty(\"jdbc_url\"),\n\t\t\t\t\tprop.getProperty(\"jdbc_username\"),\n\t\t\t\t\tprop.getProperty(\"jdbc_password\"));\n\t\t} catch (ClassNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn conn;\n\t}\n\t\n\t/**\n\t *  关闭数据库连接\n\t * @throws SQLException\n\t */\n\tpublic static void closeConnection() {\n\t\tif(conn != null) {\n\t\t\ttry {\n\t\t\t\tconn.close();\n\t\t\t} catch (SQLException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * 获取实体类列表（将原生的数据库访问查询结果Result转为一个POJO）\n\t * @param rs\n\t * @return\n\t * @throws SQLException\n\t */\n\tpublic static <T> List<T> getBeanList(ResultSet rs) throws SQLException {\n\t\tList retultList = resultSetToList(rs);\n\t\tList<T> pojoList = new ArrayList<T>();\n\t\tfor(int i = 0; i < retultList.size(); i++) {\n\t\t\tT t = (T) MapToBean(new User(), (Map) retultList.get(i));\n\t\t\tpojoList.add(t);\n\t\t}\n\t\treturn pojoList;\n\t}\n\t\n\t/**\n\t * 将ResultSet封装成list  而每条记录对应一个实体Map\n\t * @param rs 结果集\n\t * @return\n\t * @throws SQLException\n\t */\n\tpublic static List resultSetToList(ResultSet rs) throws SQLException{  \n\t\tif(rs == null) {  \n\t\t\treturn null;  \n\t\t}  \n\t  \n\t\tResultSetMetaData md = rs.getMetaData();  \n\t\tint columnCount = md.getColumnCount();  \n  \n\t\tList list = new ArrayList();  \n\t\tMap rowData;  \n\t\twhile (rs.next()){  \n        \trowData = new HashMap(columnCount);  \n        \tfor (int i = 1; i <= columnCount; i++){  \n        \t\trowData.put(md.getColumnName(i),rs.getObject(i));  \n        \t}  \n        \tlist.add(rowData);  \n\t\t}  \n\t\treturn list;  \n\t}\n\t\n    /** \n     * @param bean 需要封装的vo \n     * @param map 需要转换的map \n     * @return 已经封装好数据的vo（object） \n     */  \n    public static Object MapToBean(Object bean, Map map) {  \n        Map methods = new HashMap();  \n        Method m[] = bean.getClass().getMethods();  \n        for (int i = 0; i < m.length; i++) {  \n            Method method = m[i];  \n            String methodName = method.getName().toUpperCase();  \n            methods.put(methodName, method);  \n        }  \n  \n        Iterator it = null;  \n        String key = \"\";  \n        it = map.keySet().iterator();  \n        while (it.hasNext()) {  \n            key = (String) it.next();  \n            String name = \"GET\" + key.toUpperCase();  \n            if (methods.containsKey(name)) {  \n                Method setMethod = (Method) methods.get(\"SET\" + key.toUpperCase());  \n                try {  \n                    if(setMethod!=null){  \n                        Object[] obj=null;  \n                        obj=new Object[1];  \n                        obj[0]=map.get(key);  \n                    setMethod.invoke(bean, obj);  \n                    }  \n                    else{  \n                        continue;  \n                    }  \n                } catch (IllegalAccessException e) {  \n                    e.printStackTrace();  \n                } catch (InvocationTargetException e) {  \n                    e.printStackTrace();  \n                }  \n  \n            }  \n        }  \n        return bean;  \n    }\n\t\n}\n\nclass User {\n\t\n\tprivate int id;\n\t\n\tprivate String username;\n\t\n\tprivate String password;\n\n\tpublic int getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(int id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getUsername() {\n\t\treturn username;\n\t}\n\n\tpublic void setUsername(String username) {\n\t\tthis.username = username;\n\t}\n\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"User [id=\" + id + \", username=\" + username + \", password=\"\n\t\t\t\t+ password + \"]\";\n\t}\n\t\n}\n```\nConsole打印\n```xml\n默认的事务隔离级别:4\nInsert Success\n------------------ 我是分割线 ---------------------\nid: 1 username: 张一 password: 1\nUser [id=1, username=张一, password=1]\n------------------ 我是分割线 ---------------------\nid: 1 username: 张一 password: 1\nid: 2 username: 张二 password: 2\nid: 3 username: 张三 password: 3\nid: 4 username: 张四 password: 4\nid: 5 username: 张五 password: 5\nid: 6 username: 张六 password: 6\nUser [id=1, username=张一, password=1]\nUser [id=2, username=张二, password=2]\nUser [id=3, username=张三, password=3]\nUser [id=4, username=张四, password=4]\nUser [id=5, username=张五, password=5]\nUser [id=6, username=张六, password=6]\n\n```\n查询user表\n```sql\nselect * from user\n```\n输出结果\n| id        | username      | password  |\n| :-------: |:-------------:| :--------:|\n| 1 | 张一 | 1 |\n| 2 | 张二 | 2 |\n| 3 | 张三 | 3 |\n| 4 | 张四 | 4 |\n| 5 | 张五 | 5 |\n| 6 | 张六 | 6 |","source":"_posts/原生数据库访问.md","raw":"---\ntitle: 原生数据库访问\ndate: 2016-07-09 09:26:53\ncategories: [Java]\ntags: [Java]\n---\n##### 本例以mysql为例\n```Sql\n/*\nMySQL Data Transfer\nSource Host: localhost\nSource Database: test\nTarget Host: localhost\nTarget Database: test\nDate: 2016/07/09 09:19:38\n*/\n\nSET FOREIGN_KEY_CHECKS=0;\n-- ----------------------------\n-- Table structure for user 创建表\n-- ----------------------------\nCREATE TABLE `user` (\n  `id` int(11) NOT NULL,\n  `username` varchar(40) DEFAULT NULL,\n  `password` varchar(255) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records 填充数据\n-- ----------------------------\nINSERT INTO `user` VALUES ('1', '张一', '1');\nINSERT INTO `user` VALUES ('2', '张二', '2');\nINSERT INTO `user` VALUES ('3', '张三', '3');\nINSERT INTO `user` VALUES ('4', '张四', '4');\nINSERT INTO `user` VALUES ('5', '张五', '5');\n```\n##### 数据库配置文件jdbc.properties\n```xml\njdbc_driverClassName=com.mysql.jdbc.Driver\njdbc_url=jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull\njdbc_username=root\njdbc_password=root\n```\n##### Code\n```Java\npackage test;\n\nimport java.io.IOException;\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.ResultSetMetaData;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Properties;\n\nimport org.apache.tomcat.dbcp.dbcp.ConnectionFactory;\n\npublic class Test {\n\n\tprivate static Properties prop;\n\tprivate static Connection conn = null;\n\tprivate static final String CONFIGNAME = \"jdbc.properties\";\n\n\tpublic static void main(String[] args) {\n\t\t// 打开数据库链接\n\t\tgetConnection();\n\t\t\n        try {\n        \t// 禁用自动提交\n\t\t\tconn.setAutoCommit(false);\n\t\t\tSystem.out.println(\"默认的事务隔离级别:\" + conn.getTransactionIsolation());\n\t\t\t\n\t\t\t// 用 conn 创建 Statement 对象类实例\n            Statement statement = conn.createStatement();\n            // 插入数据\n            statement.executeUpdate(\"insert user(id, username, password) values(6, '张六', '6')\");\n            System.out.println(\"Insert Success\");\n\t\t\t\n\t\t\tSystem.out.println(\"------------------ 我是分割线 ---------------------\");\n            \n            // 提交事务\n            conn.commit();\n            \n            // 查询的话不需要事务，用ResultSet类的对象，返回查询的结果\n\t\t\tString sql = \"select * from user where id = 1\";\n\t\t\tResultSet result = statement.executeQuery(sql_pojo);\n\t\t\t// 原生的打印结果\n            while (result.next()) {\n                int id = result.getInt(\"id\");\n                String username = result.getString(\"username\");\n                String password = result.getString(\"password\");\n                System.out.println(\"id: \" + id + \" username: \" + username + \" password: \" + password);\n            }\n            result = statement.executeQuery(sql_pojo);\n            \n\t\t\t// 转为bean\n            List<User> bean = getBeanList(result);\n\t\t\tfor (int i = 0; i < bean.size(); i++) {\n\t\t\t\tSystem.out.println(bean.get(i).toString());\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(\"------------------ 我是分割线 ---------------------\");\n\t\t\t\n\t\t\tString sql_list = \"select * from user\";\n\t\t\tresult = statement.executeQuery(sql_list);\n\t\t\t// 原生的打印结果\n\t\t\twhile (result.next()) {\n                int id = result.getInt(\"id\");\n                String username = result.getString(\"username\");\n                String password = result.getString(\"password\");\n                System.out.println(\"id: \" + id + \" username: \" + username + \" password: \" + password);\n            }\n\t\t\t\n\t\t\tresult = statement.executeQuery(sql_list);\n\t\t\t// 转为list\n\t\t\tList<User> list = getBeanList(result);\n\t\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\t\tSystem.out.println(list.get(i).toString());\n\t\t\t}\n\t\t} catch (SQLException e) {\n\t\t\tif (conn != null){\n                // 事务回滚\n                try {\n\t\t\t\t\tconn.rollback();\n\t\t\t\t} catch (SQLException e1) {\n\t\t\t\t\te1.printStackTrace();\n\t\t\t\t}\n            }\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\t// 关闭数据库链接\n\t\t\tcloseConnection();\n\t\t}\n\t\t\n\t}\n\n\t/**\n\t * 获取数据库连接\n\t * @throws SQLException\n\t */\n\tpublic static Connection getConnection() {\n\t\tprop = new Properties();\n\t\t\n\t\ttry {\n\t\t\tprop.load(ConnectionFactory.class.getClassLoader().getResourceAsStream(CONFIGNAME));\n\t\t\tClass.forName(prop.getProperty(\"jdbc_driverClassName\"));\n\t\t\tconn = DriverManager.getConnection(\n\t\t\t\t\tprop.getProperty(\"jdbc_url\"),\n\t\t\t\t\tprop.getProperty(\"jdbc_username\"),\n\t\t\t\t\tprop.getProperty(\"jdbc_password\"));\n\t\t} catch (ClassNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn conn;\n\t}\n\t\n\t/**\n\t *  关闭数据库连接\n\t * @throws SQLException\n\t */\n\tpublic static void closeConnection() {\n\t\tif(conn != null) {\n\t\t\ttry {\n\t\t\t\tconn.close();\n\t\t\t} catch (SQLException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * 获取实体类列表（将原生的数据库访问查询结果Result转为一个POJO）\n\t * @param rs\n\t * @return\n\t * @throws SQLException\n\t */\n\tpublic static <T> List<T> getBeanList(ResultSet rs) throws SQLException {\n\t\tList retultList = resultSetToList(rs);\n\t\tList<T> pojoList = new ArrayList<T>();\n\t\tfor(int i = 0; i < retultList.size(); i++) {\n\t\t\tT t = (T) MapToBean(new User(), (Map) retultList.get(i));\n\t\t\tpojoList.add(t);\n\t\t}\n\t\treturn pojoList;\n\t}\n\t\n\t/**\n\t * 将ResultSet封装成list  而每条记录对应一个实体Map\n\t * @param rs 结果集\n\t * @return\n\t * @throws SQLException\n\t */\n\tpublic static List resultSetToList(ResultSet rs) throws SQLException{  \n\t\tif(rs == null) {  \n\t\t\treturn null;  \n\t\t}  \n\t  \n\t\tResultSetMetaData md = rs.getMetaData();  \n\t\tint columnCount = md.getColumnCount();  \n  \n\t\tList list = new ArrayList();  \n\t\tMap rowData;  \n\t\twhile (rs.next()){  \n        \trowData = new HashMap(columnCount);  \n        \tfor (int i = 1; i <= columnCount; i++){  \n        \t\trowData.put(md.getColumnName(i),rs.getObject(i));  \n        \t}  \n        \tlist.add(rowData);  \n\t\t}  \n\t\treturn list;  \n\t}\n\t\n    /** \n     * @param bean 需要封装的vo \n     * @param map 需要转换的map \n     * @return 已经封装好数据的vo（object） \n     */  \n    public static Object MapToBean(Object bean, Map map) {  \n        Map methods = new HashMap();  \n        Method m[] = bean.getClass().getMethods();  \n        for (int i = 0; i < m.length; i++) {  \n            Method method = m[i];  \n            String methodName = method.getName().toUpperCase();  \n            methods.put(methodName, method);  \n        }  \n  \n        Iterator it = null;  \n        String key = \"\";  \n        it = map.keySet().iterator();  \n        while (it.hasNext()) {  \n            key = (String) it.next();  \n            String name = \"GET\" + key.toUpperCase();  \n            if (methods.containsKey(name)) {  \n                Method setMethod = (Method) methods.get(\"SET\" + key.toUpperCase());  \n                try {  \n                    if(setMethod!=null){  \n                        Object[] obj=null;  \n                        obj=new Object[1];  \n                        obj[0]=map.get(key);  \n                    setMethod.invoke(bean, obj);  \n                    }  \n                    else{  \n                        continue;  \n                    }  \n                } catch (IllegalAccessException e) {  \n                    e.printStackTrace();  \n                } catch (InvocationTargetException e) {  \n                    e.printStackTrace();  \n                }  \n  \n            }  \n        }  \n        return bean;  \n    }\n\t\n}\n\nclass User {\n\t\n\tprivate int id;\n\t\n\tprivate String username;\n\t\n\tprivate String password;\n\n\tpublic int getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(int id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getUsername() {\n\t\treturn username;\n\t}\n\n\tpublic void setUsername(String username) {\n\t\tthis.username = username;\n\t}\n\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"User [id=\" + id + \", username=\" + username + \", password=\"\n\t\t\t\t+ password + \"]\";\n\t}\n\t\n}\n```\nConsole打印\n```xml\n默认的事务隔离级别:4\nInsert Success\n------------------ 我是分割线 ---------------------\nid: 1 username: 张一 password: 1\nUser [id=1, username=张一, password=1]\n------------------ 我是分割线 ---------------------\nid: 1 username: 张一 password: 1\nid: 2 username: 张二 password: 2\nid: 3 username: 张三 password: 3\nid: 4 username: 张四 password: 4\nid: 5 username: 张五 password: 5\nid: 6 username: 张六 password: 6\nUser [id=1, username=张一, password=1]\nUser [id=2, username=张二, password=2]\nUser [id=3, username=张三, password=3]\nUser [id=4, username=张四, password=4]\nUser [id=5, username=张五, password=5]\nUser [id=6, username=张六, password=6]\n\n```\n查询user表\n```sql\nselect * from user\n```\n输出结果\n| id        | username      | password  |\n| :-------: |:-------------:| :--------:|\n| 1 | 张一 | 1 |\n| 2 | 张二 | 2 |\n| 3 | 张三 | 3 |\n| 4 | 张四 | 4 |\n| 5 | 张五 | 5 |\n| 6 | 张六 | 6 |","slug":"原生数据库访问","published":1,"updated":"2017-01-03T01:24:09.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou5t002lpo2yjkkefc5s","content":"<h5 id=\"本例以mysql为例\"><a href=\"#本例以mysql为例\" class=\"headerlink\" title=\"本例以mysql为例\"></a>本例以mysql为例</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\">MySQL Data Transfer</div><div class=\"line\">Source Host: localhost</div><div class=\"line\">Source Database: test</div><div class=\"line\">Target Host: localhost</div><div class=\"line\">Target Database: test</div><div class=\"line\">Date: 2016/07/09 09:19:38</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SET</span> FOREIGN_KEY_CHECKS=<span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"comment\">-- ----------------------------</span></div><div class=\"line\"><span class=\"comment\">-- Table structure for user 创建表</span></div><div class=\"line\"><span class=\"comment\">-- ----------------------------</span></div><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`user`</span> (</div><div class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">  <span class=\"string\">`username`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">40</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">  <span class=\"string\">`password`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>)</div><div class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8;</div><div class=\"line\"><span class=\"comment\">-- ----------------------------</span></div><div class=\"line\"><span class=\"comment\">-- Records 填充数据</span></div><div class=\"line\"><span class=\"comment\">-- ----------------------------</span></div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'1'</span>, <span class=\"string\">'张一'</span>, <span class=\"string\">'1'</span>);</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'2'</span>, <span class=\"string\">'张二'</span>, <span class=\"string\">'2'</span>);</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'3'</span>, <span class=\"string\">'张三'</span>, <span class=\"string\">'3'</span>);</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'4'</span>, <span class=\"string\">'张四'</span>, <span class=\"string\">'4'</span>);</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'5'</span>, <span class=\"string\">'张五'</span>, <span class=\"string\">'5'</span>);</div></pre></td></tr></table></figure>\n<h5 id=\"数据库配置文件jdbc-properties\"><a href=\"#数据库配置文件jdbc-properties\" class=\"headerlink\" title=\"数据库配置文件jdbc.properties\"></a>数据库配置文件jdbc.properties</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc_driverClassName=com.mysql.jdbc.Driver</div><div class=\"line\">jdbc_url=jdbc:mysql://localhost:3306/test?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;zeroDateTimeBehavior=convertToNull</div><div class=\"line\">jdbc_username=root</div><div class=\"line\">jdbc_password=root</div></pre></td></tr></table></figure>\n<h5 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationTargetException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSetMetaData;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.tomcat.dbcp.dbcp.ConnectionFactory;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Properties prop;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Connection conn = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CONFIGNAME = <span class=\"string\">\"jdbc.properties\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 打开数据库链接</span></div><div class=\"line\">\t\tgetConnection();</div><div class=\"line\">\t\t</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        \t<span class=\"comment\">// 禁用自动提交</span></div><div class=\"line\">\t\t\tconn.setAutoCommit(<span class=\"keyword\">false</span>);</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"默认的事务隔离级别:\"</span> + conn.getTransactionIsolation());</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"comment\">// 用 conn 创建 Statement 对象类实例</span></div><div class=\"line\">            Statement statement = conn.createStatement();</div><div class=\"line\">            <span class=\"comment\">// 插入数据</span></div><div class=\"line\">            statement.executeUpdate(<span class=\"string\">\"insert user(id, username, password) values(6, '张六', '6')\"</span>);</div><div class=\"line\">            System.out.println(<span class=\"string\">\"Insert Success\"</span>);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"------------------ 我是分割线 ---------------------\"</span>);</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"comment\">// 提交事务</span></div><div class=\"line\">            conn.commit();</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"comment\">// 查询的话不需要事务，用ResultSet类的对象，返回查询的结果</span></div><div class=\"line\">\t\t\tString sql = <span class=\"string\">\"select * from user where id = 1\"</span>;</div><div class=\"line\">\t\t\tResultSet result = statement.executeQuery(sql_pojo);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 原生的打印结果</span></div><div class=\"line\">            <span class=\"keyword\">while</span> (result.next()) &#123;</div><div class=\"line\">                <span class=\"keyword\">int</span> id = result.getInt(<span class=\"string\">\"id\"</span>);</div><div class=\"line\">                String username = result.getString(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">                String password = result.getString(<span class=\"string\">\"password\"</span>);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"id: \"</span> + id + <span class=\"string\">\" username: \"</span> + username + <span class=\"string\">\" password: \"</span> + password);</div><div class=\"line\">            &#125;</div><div class=\"line\">            result = statement.executeQuery(sql_pojo);</div><div class=\"line\">            </div><div class=\"line\">\t\t\t<span class=\"comment\">// 转为bean</span></div><div class=\"line\">            List&lt;User&gt; bean = getBeanList(result);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; bean.size(); i++) &#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(bean.get(i).toString());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"------------------ 我是分割线 ---------------------\"</span>);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tString sql_list = <span class=\"string\">\"select * from user\"</span>;</div><div class=\"line\">\t\t\tresult = statement.executeQuery(sql_list);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 原生的打印结果</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span> (result.next()) &#123;</div><div class=\"line\">                <span class=\"keyword\">int</span> id = result.getInt(<span class=\"string\">\"id\"</span>);</div><div class=\"line\">                String username = result.getString(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">                String password = result.getString(<span class=\"string\">\"password\"</span>);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"id: \"</span> + id + <span class=\"string\">\" username: \"</span> + username + <span class=\"string\">\" password: \"</span> + password);</div><div class=\"line\">            &#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tresult = statement.executeQuery(sql_list);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 转为list</span></div><div class=\"line\">\t\t\tList&lt;User&gt; list = getBeanList(result);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(list.get(i).toString());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (conn != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                <span class=\"comment\">// 事务回滚</span></div><div class=\"line\">                <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t\tconn.rollback();</div><div class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e1) &#123;</div><div class=\"line\">\t\t\t\t\te1.printStackTrace();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 关闭数据库链接</span></div><div class=\"line\">\t\t\tcloseConnection();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取数据库连接</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tprop = <span class=\"keyword\">new</span> Properties();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tprop.load(ConnectionFactory.class.getClassLoader().getResourceAsStream(CONFIGNAME));</div><div class=\"line\">\t\t\tClass.forName(prop.getProperty(<span class=\"string\">\"jdbc_driverClassName\"</span>));</div><div class=\"line\">\t\t\tconn = DriverManager.getConnection(</div><div class=\"line\">\t\t\t\t\tprop.getProperty(<span class=\"string\">\"jdbc_url\"</span>),</div><div class=\"line\">\t\t\t\t\tprop.getProperty(<span class=\"string\">\"jdbc_username\"</span>),</div><div class=\"line\">\t\t\t\t\tprop.getProperty(<span class=\"string\">\"jdbc_password\"</span>));</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> conn;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t *  关闭数据库连接</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">closeConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(conn != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tconn.close();</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取实体类列表（将原生的数据库访问查询结果Result转为一个POJO）</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> rs</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">List&lt;T&gt; <span class=\"title\">getBeanList</span><span class=\"params\">(ResultSet rs)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">\t\tList retultList = resultSetToList(rs);</div><div class=\"line\">\t\tList&lt;T&gt; pojoList = <span class=\"keyword\">new</span> ArrayList&lt;T&gt;();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; retultList.size(); i++) &#123;</div><div class=\"line\">\t\t\tT t = (T) MapToBean(<span class=\"keyword\">new</span> User(), (Map) retultList.get(i));</div><div class=\"line\">\t\t\tpojoList.add(t);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> pojoList;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 将ResultSet封装成list  而每条记录对应一个实体Map</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> rs 结果集</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List <span class=\"title\">resultSetToList</span><span class=\"params\">(ResultSet rs)</span> <span class=\"keyword\">throws</span> SQLException</span>&#123;  </div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(rs == <span class=\"keyword\">null</span>) &#123;  </div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;  </div><div class=\"line\">\t\t&#125;  </div><div class=\"line\">\t  </div><div class=\"line\">\t\tResultSetMetaData md = rs.getMetaData();  </div><div class=\"line\">\t\t<span class=\"keyword\">int</span> columnCount = md.getColumnCount();  </div><div class=\"line\">  </div><div class=\"line\">\t\tList list = <span class=\"keyword\">new</span> ArrayList();  </div><div class=\"line\">\t\tMap rowData;  </div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (rs.next())&#123;  </div><div class=\"line\">        \trowData = <span class=\"keyword\">new</span> HashMap(columnCount);  </div><div class=\"line\">        \t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= columnCount; i++)&#123;  </div><div class=\"line\">        \t\trowData.put(md.getColumnName(i),rs.getObject(i));  </div><div class=\"line\">        \t&#125;  </div><div class=\"line\">        \tlist.add(rowData);  </div><div class=\"line\">\t\t&#125;  </div><div class=\"line\">\t\t<span class=\"keyword\">return</span> list;  </div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\">     * <span class=\"doctag\">@param</span> bean 需要封装的vo </div><div class=\"line\">     * <span class=\"doctag\">@param</span> map 需要转换的map </div><div class=\"line\">     * <span class=\"doctag\">@return</span> 已经封装好数据的vo（object） </div><div class=\"line\">     */  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">MapToBean</span><span class=\"params\">(Object bean, Map map)</span> </span>&#123;  </div><div class=\"line\">        Map methods = <span class=\"keyword\">new</span> HashMap();  </div><div class=\"line\">        Method m[] = bean.getClass().getMethods();  </div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m.length; i++) &#123;  </div><div class=\"line\">            Method method = m[i];  </div><div class=\"line\">            String methodName = method.getName().toUpperCase();  </div><div class=\"line\">            methods.put(methodName, method);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">  </div><div class=\"line\">        Iterator it = <span class=\"keyword\">null</span>;  </div><div class=\"line\">        String key = <span class=\"string\">\"\"</span>;  </div><div class=\"line\">        it = map.keySet().iterator();  </div><div class=\"line\">        <span class=\"keyword\">while</span> (it.hasNext()) &#123;  </div><div class=\"line\">            key = (String) it.next();  </div><div class=\"line\">            String name = <span class=\"string\">\"GET\"</span> + key.toUpperCase();  </div><div class=\"line\">            <span class=\"keyword\">if</span> (methods.containsKey(name)) &#123;  </div><div class=\"line\">                Method setMethod = (Method) methods.get(<span class=\"string\">\"SET\"</span> + key.toUpperCase());  </div><div class=\"line\">                <span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">                    <span class=\"keyword\">if</span>(setMethod!=<span class=\"keyword\">null</span>)&#123;  </div><div class=\"line\">                        Object[] obj=<span class=\"keyword\">null</span>;  </div><div class=\"line\">                        obj=<span class=\"keyword\">new</span> Object[<span class=\"number\">1</span>];  </div><div class=\"line\">                        obj[<span class=\"number\">0</span>]=map.get(key);  </div><div class=\"line\">                    setMethod.invoke(bean, obj);  </div><div class=\"line\">                    &#125;  </div><div class=\"line\">                    <span class=\"keyword\">else</span>&#123;  </div><div class=\"line\">                        <span class=\"keyword\">continue</span>;  </div><div class=\"line\">                    &#125;  </div><div class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;  </div><div class=\"line\">                    e.printStackTrace();  </div><div class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InvocationTargetException e) &#123;  </div><div class=\"line\">                    e.printStackTrace();  </div><div class=\"line\">                &#125;  </div><div class=\"line\">  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">return</span> bean;  </div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> String username;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> String password;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUsername</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> username;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUsername</span><span class=\"params\">(String username)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.username = username;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPassword</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> password;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPassword</span><span class=\"params\">(String password)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.password = password;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"User [id=\"</span> + id + <span class=\"string\">\", username=\"</span> + username + <span class=\"string\">\", password=\"</span></div><div class=\"line\">\t\t\t\t+ password + <span class=\"string\">\"]\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Console打印<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">默认的事务隔离级别:4</div><div class=\"line\">Insert Success</div><div class=\"line\">------------------ 我是分割线 ---------------------</div><div class=\"line\">id: 1 username: 张一 password: 1</div><div class=\"line\">User [id=1, username=张一, password=1]</div><div class=\"line\">------------------ 我是分割线 ---------------------</div><div class=\"line\">id: 1 username: 张一 password: 1</div><div class=\"line\">id: 2 username: 张二 password: 2</div><div class=\"line\">id: 3 username: 张三 password: 3</div><div class=\"line\">id: 4 username: 张四 password: 4</div><div class=\"line\">id: 5 username: 张五 password: 5</div><div class=\"line\">id: 6 username: 张六 password: 6</div><div class=\"line\">User [id=1, username=张一, password=1]</div><div class=\"line\">User [id=2, username=张二, password=2]</div><div class=\"line\">User [id=3, username=张三, password=3]</div><div class=\"line\">User [id=4, username=张四, password=4]</div><div class=\"line\">User [id=5, username=张五, password=5]</div><div class=\"line\">User [id=6, username=张六, password=6]</div></pre></td></tr></table></figure></p>\n<p>查询user表<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> <span class=\"keyword\">user</span></div></pre></td></tr></table></figure></p>\n<p>输出结果<br>| id        | username      | password  |<br>| :——-: |:————-:| :——–:|<br>| 1 | 张一 | 1 |<br>| 2 | 张二 | 2 |<br>| 3 | 张三 | 3 |<br>| 4 | 张四 | 4 |<br>| 5 | 张五 | 5 |<br>| 6 | 张六 | 6 |</p>\n","excerpt":"","more":"<h5 id=\"本例以mysql为例\"><a href=\"#本例以mysql为例\" class=\"headerlink\" title=\"本例以mysql为例\"></a>本例以mysql为例</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\">MySQL Data Transfer</div><div class=\"line\">Source Host: localhost</div><div class=\"line\">Source Database: test</div><div class=\"line\">Target Host: localhost</div><div class=\"line\">Target Database: test</div><div class=\"line\">Date: 2016/07/09 09:19:38</div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SET</span> FOREIGN_KEY_CHECKS=<span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"comment\">-- ----------------------------</span></div><div class=\"line\"><span class=\"comment\">-- Table structure for user 创建表</span></div><div class=\"line\"><span class=\"comment\">-- ----------------------------</span></div><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`user`</span> (</div><div class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">  <span class=\"string\">`username`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">40</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">  <span class=\"string\">`password`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>)</div><div class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8;</div><div class=\"line\"><span class=\"comment\">-- ----------------------------</span></div><div class=\"line\"><span class=\"comment\">-- Records 填充数据</span></div><div class=\"line\"><span class=\"comment\">-- ----------------------------</span></div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'1'</span>, <span class=\"string\">'张一'</span>, <span class=\"string\">'1'</span>);</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'2'</span>, <span class=\"string\">'张二'</span>, <span class=\"string\">'2'</span>);</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'3'</span>, <span class=\"string\">'张三'</span>, <span class=\"string\">'3'</span>);</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'4'</span>, <span class=\"string\">'张四'</span>, <span class=\"string\">'4'</span>);</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"string\">`user`</span> <span class=\"keyword\">VALUES</span> (<span class=\"string\">'5'</span>, <span class=\"string\">'张五'</span>, <span class=\"string\">'5'</span>);</div></pre></td></tr></table></figure>\n<h5 id=\"数据库配置文件jdbc-properties\"><a href=\"#数据库配置文件jdbc-properties\" class=\"headerlink\" title=\"数据库配置文件jdbc.properties\"></a>数据库配置文件jdbc.properties</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc_driverClassName=com.mysql.jdbc.Driver</div><div class=\"line\">jdbc_url=jdbc:mysql://localhost:3306/test?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;zeroDateTimeBehavior=convertToNull</div><div class=\"line\">jdbc_username=root</div><div class=\"line\">jdbc_password=root</div></pre></td></tr></table></figure>\n<h5 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationTargetException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSetMetaData;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.tomcat.dbcp.dbcp.ConnectionFactory;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Properties prop;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Connection conn = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CONFIGNAME = <span class=\"string\">\"jdbc.properties\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 打开数据库链接</span></div><div class=\"line\">\t\tgetConnection();</div><div class=\"line\">\t\t</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        \t<span class=\"comment\">// 禁用自动提交</span></div><div class=\"line\">\t\t\tconn.setAutoCommit(<span class=\"keyword\">false</span>);</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"默认的事务隔离级别:\"</span> + conn.getTransactionIsolation());</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"comment\">// 用 conn 创建 Statement 对象类实例</span></div><div class=\"line\">            Statement statement = conn.createStatement();</div><div class=\"line\">            <span class=\"comment\">// 插入数据</span></div><div class=\"line\">            statement.executeUpdate(<span class=\"string\">\"insert user(id, username, password) values(6, '张六', '6')\"</span>);</div><div class=\"line\">            System.out.println(<span class=\"string\">\"Insert Success\"</span>);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"------------------ 我是分割线 ---------------------\"</span>);</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"comment\">// 提交事务</span></div><div class=\"line\">            conn.commit();</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"comment\">// 查询的话不需要事务，用ResultSet类的对象，返回查询的结果</span></div><div class=\"line\">\t\t\tString sql = <span class=\"string\">\"select * from user where id = 1\"</span>;</div><div class=\"line\">\t\t\tResultSet result = statement.executeQuery(sql_pojo);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 原生的打印结果</span></div><div class=\"line\">            <span class=\"keyword\">while</span> (result.next()) &#123;</div><div class=\"line\">                <span class=\"keyword\">int</span> id = result.getInt(<span class=\"string\">\"id\"</span>);</div><div class=\"line\">                String username = result.getString(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">                String password = result.getString(<span class=\"string\">\"password\"</span>);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"id: \"</span> + id + <span class=\"string\">\" username: \"</span> + username + <span class=\"string\">\" password: \"</span> + password);</div><div class=\"line\">            &#125;</div><div class=\"line\">            result = statement.executeQuery(sql_pojo);</div><div class=\"line\">            </div><div class=\"line\">\t\t\t<span class=\"comment\">// 转为bean</span></div><div class=\"line\">            List&lt;User&gt; bean = getBeanList(result);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; bean.size(); i++) &#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(bean.get(i).toString());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"------------------ 我是分割线 ---------------------\"</span>);</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tString sql_list = <span class=\"string\">\"select * from user\"</span>;</div><div class=\"line\">\t\t\tresult = statement.executeQuery(sql_list);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 原生的打印结果</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span> (result.next()) &#123;</div><div class=\"line\">                <span class=\"keyword\">int</span> id = result.getInt(<span class=\"string\">\"id\"</span>);</div><div class=\"line\">                String username = result.getString(<span class=\"string\">\"username\"</span>);</div><div class=\"line\">                String password = result.getString(<span class=\"string\">\"password\"</span>);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"id: \"</span> + id + <span class=\"string\">\" username: \"</span> + username + <span class=\"string\">\" password: \"</span> + password);</div><div class=\"line\">            &#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\tresult = statement.executeQuery(sql_list);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 转为list</span></div><div class=\"line\">\t\t\tList&lt;User&gt; list = getBeanList(result);</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(list.get(i).toString());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (conn != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                <span class=\"comment\">// 事务回滚</span></div><div class=\"line\">                <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t\tconn.rollback();</div><div class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e1) &#123;</div><div class=\"line\">\t\t\t\t\te1.printStackTrace();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 关闭数据库链接</span></div><div class=\"line\">\t\t\tcloseConnection();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取数据库连接</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tprop = <span class=\"keyword\">new</span> Properties();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tprop.load(ConnectionFactory.class.getClassLoader().getResourceAsStream(CONFIGNAME));</div><div class=\"line\">\t\t\tClass.forName(prop.getProperty(<span class=\"string\">\"jdbc_driverClassName\"</span>));</div><div class=\"line\">\t\t\tconn = DriverManager.getConnection(</div><div class=\"line\">\t\t\t\t\tprop.getProperty(<span class=\"string\">\"jdbc_url\"</span>),</div><div class=\"line\">\t\t\t\t\tprop.getProperty(<span class=\"string\">\"jdbc_username\"</span>),</div><div class=\"line\">\t\t\t\t\tprop.getProperty(<span class=\"string\">\"jdbc_password\"</span>));</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> conn;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t *  关闭数据库连接</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">closeConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(conn != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\tconn.close();</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取实体类列表（将原生的数据库访问查询结果Result转为一个POJO）</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> rs</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">List&lt;T&gt; <span class=\"title\">getBeanList</span><span class=\"params\">(ResultSet rs)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">\t\tList retultList = resultSetToList(rs);</div><div class=\"line\">\t\tList&lt;T&gt; pojoList = <span class=\"keyword\">new</span> ArrayList&lt;T&gt;();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; retultList.size(); i++) &#123;</div><div class=\"line\">\t\t\tT t = (T) MapToBean(<span class=\"keyword\">new</span> User(), (Map) retultList.get(i));</div><div class=\"line\">\t\t\tpojoList.add(t);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> pojoList;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 将ResultSet封装成list  而每条记录对应一个实体Map</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> rs 结果集</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> SQLException</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List <span class=\"title\">resultSetToList</span><span class=\"params\">(ResultSet rs)</span> <span class=\"keyword\">throws</span> SQLException</span>&#123;  </div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(rs == <span class=\"keyword\">null</span>) &#123;  </div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;  </div><div class=\"line\">\t\t&#125;  </div><div class=\"line\">\t  </div><div class=\"line\">\t\tResultSetMetaData md = rs.getMetaData();  </div><div class=\"line\">\t\t<span class=\"keyword\">int</span> columnCount = md.getColumnCount();  </div><div class=\"line\">  </div><div class=\"line\">\t\tList list = <span class=\"keyword\">new</span> ArrayList();  </div><div class=\"line\">\t\tMap rowData;  </div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (rs.next())&#123;  </div><div class=\"line\">        \trowData = <span class=\"keyword\">new</span> HashMap(columnCount);  </div><div class=\"line\">        \t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= columnCount; i++)&#123;  </div><div class=\"line\">        \t\trowData.put(md.getColumnName(i),rs.getObject(i));  </div><div class=\"line\">        \t&#125;  </div><div class=\"line\">        \tlist.add(rowData);  </div><div class=\"line\">\t\t&#125;  </div><div class=\"line\">\t\t<span class=\"keyword\">return</span> list;  </div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"comment\">/** </div><div class=\"line\">     * <span class=\"doctag\">@param</span> bean 需要封装的vo </div><div class=\"line\">     * <span class=\"doctag\">@param</span> map 需要转换的map </div><div class=\"line\">     * <span class=\"doctag\">@return</span> 已经封装好数据的vo（object） </div><div class=\"line\">     */</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">MapToBean</span><span class=\"params\">(Object bean, Map map)</span> </span>&#123;  </div><div class=\"line\">        Map methods = <span class=\"keyword\">new</span> HashMap();  </div><div class=\"line\">        Method m[] = bean.getClass().getMethods();  </div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m.length; i++) &#123;  </div><div class=\"line\">            Method method = m[i];  </div><div class=\"line\">            String methodName = method.getName().toUpperCase();  </div><div class=\"line\">            methods.put(methodName, method);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">  </div><div class=\"line\">        Iterator it = <span class=\"keyword\">null</span>;  </div><div class=\"line\">        String key = <span class=\"string\">\"\"</span>;  </div><div class=\"line\">        it = map.keySet().iterator();  </div><div class=\"line\">        <span class=\"keyword\">while</span> (it.hasNext()) &#123;  </div><div class=\"line\">            key = (String) it.next();  </div><div class=\"line\">            String name = <span class=\"string\">\"GET\"</span> + key.toUpperCase();  </div><div class=\"line\">            <span class=\"keyword\">if</span> (methods.containsKey(name)) &#123;  </div><div class=\"line\">                Method setMethod = (Method) methods.get(<span class=\"string\">\"SET\"</span> + key.toUpperCase());  </div><div class=\"line\">                <span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">                    <span class=\"keyword\">if</span>(setMethod!=<span class=\"keyword\">null</span>)&#123;  </div><div class=\"line\">                        Object[] obj=<span class=\"keyword\">null</span>;  </div><div class=\"line\">                        obj=<span class=\"keyword\">new</span> Object[<span class=\"number\">1</span>];  </div><div class=\"line\">                        obj[<span class=\"number\">0</span>]=map.get(key);  </div><div class=\"line\">                    setMethod.invoke(bean, obj);  </div><div class=\"line\">                    &#125;  </div><div class=\"line\">                    <span class=\"keyword\">else</span>&#123;  </div><div class=\"line\">                        <span class=\"keyword\">continue</span>;  </div><div class=\"line\">                    &#125;  </div><div class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;  </div><div class=\"line\">                    e.printStackTrace();  </div><div class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InvocationTargetException e) &#123;  </div><div class=\"line\">                    e.printStackTrace();  </div><div class=\"line\">                &#125;  </div><div class=\"line\">  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">return</span> bean;  </div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> String username;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> String password;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUsername</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> username;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUsername</span><span class=\"params\">(String username)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.username = username;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPassword</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> password;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPassword</span><span class=\"params\">(String password)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.password = password;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"User [id=\"</span> + id + <span class=\"string\">\", username=\"</span> + username + <span class=\"string\">\", password=\"</span></div><div class=\"line\">\t\t\t\t+ password + <span class=\"string\">\"]\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Console打印<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">默认的事务隔离级别:4</div><div class=\"line\">Insert Success</div><div class=\"line\">------------------ 我是分割线 ---------------------</div><div class=\"line\">id: 1 username: 张一 password: 1</div><div class=\"line\">User [id=1, username=张一, password=1]</div><div class=\"line\">------------------ 我是分割线 ---------------------</div><div class=\"line\">id: 1 username: 张一 password: 1</div><div class=\"line\">id: 2 username: 张二 password: 2</div><div class=\"line\">id: 3 username: 张三 password: 3</div><div class=\"line\">id: 4 username: 张四 password: 4</div><div class=\"line\">id: 5 username: 张五 password: 5</div><div class=\"line\">id: 6 username: 张六 password: 6</div><div class=\"line\">User [id=1, username=张一, password=1]</div><div class=\"line\">User [id=2, username=张二, password=2]</div><div class=\"line\">User [id=3, username=张三, password=3]</div><div class=\"line\">User [id=4, username=张四, password=4]</div><div class=\"line\">User [id=5, username=张五, password=5]</div><div class=\"line\">User [id=6, username=张六, password=6]</div></pre></td></tr></table></figure></p>\n<p>查询user表<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> <span class=\"keyword\">user</span></div></pre></td></tr></table></figure></p>\n<p>输出结果<br>| id        | username      | password  |<br>| :——-: |:————-:| :——–:|<br>| 1 | 张一 | 1 |<br>| 2 | 张二 | 2 |<br>| 3 | 张三 | 3 |<br>| 4 | 张四 | 4 |<br>| 5 | 张五 | 5 |<br>| 6 | 张六 | 6 |</p>\n"},{"title":"图片在数据库的保存与读取","date":"2016-03-28T09:42:32.000Z","_content":"#### 将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\n---\n##### 这里以springmvc+hibernate为例\n```Java\n/*** \n * 上传文件 \n * 用@RequestParam注解来指定表单上的file为MultipartFile \n * @param file \n * @return \n */\n@RequestMapping(\"/fileUpload\")  \npublic String fileUpload(@RequestParam(\"file\") MultipartFile file) {  \n\t// 判断文件是否为空  \n\tif (!file.isEmpty()) {  \n\t\ttry(FileInputStream fis = new FileInputStream(file);) {\n\t\t\t// 限制文件大小不超过65k\n\t    \tlong size = fis.available();\n\t    \tif(size > 65 * 1024) {\n\t\t\t\treturn \"more than MaxSize\";\n\t\t\t}\n\t\t\t// Hibernate 3使用Hibernate.createBlob(fis)，Hibernate 4已经弃用，使用如下方法：\n\t\t\tLobHelper lh = session.getLobHelper();\n\t\t\tbyte[] b = new byte[(int) size];\n\t\t\tfis.read(b);\n\t\t\tBlob blob = lh.createBlob(b);\n\t\t\t// 假设这里要保存用户头像\n\t\t\tUser user = new User(); \n\t\t\tuser.setPortrait(blob);\n\t\t\tSession session = HibernateSessionFactory.getSession();\n\t\t\tsession.beginTransaction();\n\t\t\tsession.save(user);\n\t\t\tsession.getTransaction().commit();\n\t\t} catch (Exception e) {  \n\t\t\te.printStackTrace();  \n\t\t}  \n\t}  \n\t// 返回结果 \n\treturn \"SUCCESS\";  \n}\n```\n##### 客户端读取图片\n```JSP\n<img src=\"showimage?userId = 1\" id=\"image\" width=\"100px\" height=\"100px\"></img>\n```\n##### 服务端读取blob图片文件（注意：返回的是流的形式）\n```Java\n/*** \n * 读取图片\n * 用@RequestParam\n * @param userId \n * @return \n */\n@RequestMapping(\"/showimage\")  \npublic @ResponseBody InputStream showImage(@RequestParam(\"userId\") Long userId) {\n\tUser user = null;\n    \n    try {\n\t\tSession session = HibernateSessionFactory.getSession();\n\t\tuser = (User) session.get(User.class, id);\n\t\tif (null == user)\n\t\t\treturn null;\n\t\tsession.close;\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\t\n\tBlob blob = user.getPortrait();\n\tbyte[] data = null;\n\tPrintWriter out = null;\n\t// 可以将流写到文件中然后把文件地址返回给客户端去访问，这里将以流的形式返回给客户端\n\tInputStream inputStream = null;\n\t\n\ttry(InputStream is = blob.getBinaryStream();) {\n\t\tint length = (int) blob.length();\n\t\tdata = new byte[length];\n\t\tis.read(data);\n\t\tout = response.getWriter();\n\t\tinputStream = new ByteArrayInputStream(data);\n\t\tint a = inputStream.read();\n\t\twhile (a != -1) {\n\t\t\tout.print((char) a); \n\t\t\t// 以流的形式返回给客户端\n\t\t\ta = inputStream.read();\n\t\t}\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t} finally {\n\t\tif(null != out) {\n\t\t\tout.flush();\n\t\t\tout.close();\n\t\t}\n\t\tif (null != inputStream) {\n\t\t\tinputStream.cloase();\n\t\t}\n\t}\n}\n```","source":"_posts/图片在数据库的保存与读取.md","raw":"---\ntitle: 图片在数据库的保存与读取\ndate: 2016-03-28 17:42:32\ncategories: [Java]\ntags: [Java,mysql,html]\n---\n#### 将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\n---\n##### 这里以springmvc+hibernate为例\n```Java\n/*** \n * 上传文件 \n * 用@RequestParam注解来指定表单上的file为MultipartFile \n * @param file \n * @return \n */\n@RequestMapping(\"/fileUpload\")  \npublic String fileUpload(@RequestParam(\"file\") MultipartFile file) {  \n\t// 判断文件是否为空  \n\tif (!file.isEmpty()) {  \n\t\ttry(FileInputStream fis = new FileInputStream(file);) {\n\t\t\t// 限制文件大小不超过65k\n\t    \tlong size = fis.available();\n\t    \tif(size > 65 * 1024) {\n\t\t\t\treturn \"more than MaxSize\";\n\t\t\t}\n\t\t\t// Hibernate 3使用Hibernate.createBlob(fis)，Hibernate 4已经弃用，使用如下方法：\n\t\t\tLobHelper lh = session.getLobHelper();\n\t\t\tbyte[] b = new byte[(int) size];\n\t\t\tfis.read(b);\n\t\t\tBlob blob = lh.createBlob(b);\n\t\t\t// 假设这里要保存用户头像\n\t\t\tUser user = new User(); \n\t\t\tuser.setPortrait(blob);\n\t\t\tSession session = HibernateSessionFactory.getSession();\n\t\t\tsession.beginTransaction();\n\t\t\tsession.save(user);\n\t\t\tsession.getTransaction().commit();\n\t\t} catch (Exception e) {  \n\t\t\te.printStackTrace();  \n\t\t}  \n\t}  \n\t// 返回结果 \n\treturn \"SUCCESS\";  \n}\n```\n##### 客户端读取图片\n```JSP\n<img src=\"showimage?userId = 1\" id=\"image\" width=\"100px\" height=\"100px\"></img>\n```\n##### 服务端读取blob图片文件（注意：返回的是流的形式）\n```Java\n/*** \n * 读取图片\n * 用@RequestParam\n * @param userId \n * @return \n */\n@RequestMapping(\"/showimage\")  \npublic @ResponseBody InputStream showImage(@RequestParam(\"userId\") Long userId) {\n\tUser user = null;\n    \n    try {\n\t\tSession session = HibernateSessionFactory.getSession();\n\t\tuser = (User) session.get(User.class, id);\n\t\tif (null == user)\n\t\t\treturn null;\n\t\tsession.close;\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\t\n\tBlob blob = user.getPortrait();\n\tbyte[] data = null;\n\tPrintWriter out = null;\n\t// 可以将流写到文件中然后把文件地址返回给客户端去访问，这里将以流的形式返回给客户端\n\tInputStream inputStream = null;\n\t\n\ttry(InputStream is = blob.getBinaryStream();) {\n\t\tint length = (int) blob.length();\n\t\tdata = new byte[length];\n\t\tis.read(data);\n\t\tout = response.getWriter();\n\t\tinputStream = new ByteArrayInputStream(data);\n\t\tint a = inputStream.read();\n\t\twhile (a != -1) {\n\t\t\tout.print((char) a); \n\t\t\t// 以流的形式返回给客户端\n\t\t\ta = inputStream.read();\n\t\t}\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t} finally {\n\t\tif(null != out) {\n\t\t\tout.flush();\n\t\t\tout.close();\n\t\t}\n\t\tif (null != inputStream) {\n\t\t\tinputStream.cloase();\n\t\t}\n\t}\n}\n```","slug":"图片在数据库的保存与读取","published":1,"updated":"2016-11-30T01:06:07.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou5u002ppo2y7ljvcoor","content":"<h4 id=\"将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\"><a href=\"#将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\" class=\"headerlink\" title=\"将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\"></a>将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型</h4><hr>\n<h5 id=\"这里以springmvc-hibernate为例\"><a href=\"#这里以springmvc-hibernate为例\" class=\"headerlink\" title=\"这里以springmvc+hibernate为例\"></a>这里以springmvc+hibernate为例</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*** </span></div><div class=\"line\"> * 上传文件 </div><div class=\"line\"> * 用<span class=\"doctag\">@RequestParam</span>注解来指定表单上的file为MultipartFile </div><div class=\"line\"> * <span class=\"doctag\">@param</span> file </div><div class=\"line\"> * <span class=\"doctag\">@return</span> </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/fileUpload\"</span>)  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">fileUpload</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"file\"</span>)</span> MultipartFile file) </span>&#123;  </div><div class=\"line\">\t<span class=\"comment\">// 判断文件是否为空  </span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (!file.isEmpty()) &#123;  </div><div class=\"line\">\t\t<span class=\"keyword\">try</span>(FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(file);) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 限制文件大小不超过65k</span></div><div class=\"line\">\t    \t<span class=\"keyword\">long</span> size = fis.available();</div><div class=\"line\">\t    \t<span class=\"keyword\">if</span>(size &gt; <span class=\"number\">65</span> * <span class=\"number\">1024</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"more than MaxSize\"</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"comment\">// Hibernate 3使用Hibernate.createBlob(fis)，Hibernate 4已经弃用，使用如下方法：</span></div><div class=\"line\">\t\t\tLobHelper lh = session.getLobHelper();</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] b = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(<span class=\"keyword\">int</span>) size];</div><div class=\"line\">\t\t\tfis.read(b);</div><div class=\"line\">\t\t\tBlob blob = lh.createBlob(b);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 假设这里要保存用户头像</span></div><div class=\"line\">\t\t\tUser user = <span class=\"keyword\">new</span> User(); </div><div class=\"line\">\t\t\tuser.setPortrait(blob);</div><div class=\"line\">\t\t\tSession session = HibernateSessionFactory.getSession();</div><div class=\"line\">\t\t\tsession.beginTransaction();</div><div class=\"line\">\t\t\tsession.save(user);</div><div class=\"line\">\t\t\tsession.getTransaction().commit();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;  </div><div class=\"line\">\t\t\te.printStackTrace();  </div><div class=\"line\">\t\t&#125;  </div><div class=\"line\">\t&#125;  </div><div class=\"line\">\t<span class=\"comment\">// 返回结果 </span></div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"SUCCESS\"</span>;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"客户端读取图片\"><a href=\"#客户端读取图片\" class=\"headerlink\" title=\"客户端读取图片\"></a>客户端读取图片</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;img src=\"showimage?userId = 1\" id=\"image\" width=\"100px\" height=\"100px\"&gt;&lt;/img&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"服务端读取blob图片文件（注意：返回的是流的形式）\"><a href=\"#服务端读取blob图片文件（注意：返回的是流的形式）\" class=\"headerlink\" title=\"服务端读取blob图片文件（注意：返回的是流的形式）\"></a>服务端读取blob图片文件（注意：返回的是流的形式）</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*** </span></div><div class=\"line\"> * 读取图片</div><div class=\"line\"> * 用<span class=\"doctag\">@RequestParam</span></div><div class=\"line\"> * <span class=\"doctag\">@param</span> userId </div><div class=\"line\"> * <span class=\"doctag\">@return</span> </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/showimage\"</span>)  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@ResponseBody</span> <span class=\"function\">InputStream <span class=\"title\">showImage</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"userId\"</span>)</span> Long userId) </span>&#123;</div><div class=\"line\">\tUser user = <span class=\"keyword\">null</span>;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tSession session = HibernateSessionFactory.getSession();</div><div class=\"line\">\t\tuser = (User) session.get(User.class, id);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == user)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tsession.close;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tBlob blob = user.getPortrait();</div><div class=\"line\">\t<span class=\"keyword\">byte</span>[] data = <span class=\"keyword\">null</span>;</div><div class=\"line\">\tPrintWriter out = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"comment\">// 可以将流写到文件中然后把文件地址返回给客户端去访问，这里将以流的形式返回给客户端</span></div><div class=\"line\">\tInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">try</span>(InputStream is = blob.getBinaryStream();) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> length = (<span class=\"keyword\">int</span>) blob.length();</div><div class=\"line\">\t\tdata = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[length];</div><div class=\"line\">\t\tis.read(data);</div><div class=\"line\">\t\tout = response.getWriter();</div><div class=\"line\">\t\tinputStream = <span class=\"keyword\">new</span> ByteArrayInputStream(data);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> a = inputStream.read();</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (a != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\tout.print((<span class=\"keyword\">char</span>) a); </div><div class=\"line\">\t\t\t<span class=\"comment\">// 以流的形式返回给客户端</span></div><div class=\"line\">\t\t\ta = inputStream.read();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != out) &#123;</div><div class=\"line\">\t\t\tout.flush();</div><div class=\"line\">\t\t\tout.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != inputStream) &#123;</div><div class=\"line\">\t\t\tinputStream.cloase();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<h4 id=\"将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\"><a href=\"#将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\" class=\"headerlink\" title=\"将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型\"></a>将图片上传到服务器（注意：longBlob和Blob可保留的大小不同，longBlob可存储的大小为4GB，而Blob只有65k，根据自己的需求设置字段类型</h4><hr>\n<h5 id=\"这里以springmvc-hibernate为例\"><a href=\"#这里以springmvc-hibernate为例\" class=\"headerlink\" title=\"这里以springmvc+hibernate为例\"></a>这里以springmvc+hibernate为例</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*** </div><div class=\"line\"> * 上传文件 </div><div class=\"line\"> * 用<span class=\"doctag\">@RequestParam</span>注解来指定表单上的file为MultipartFile </div><div class=\"line\"> * <span class=\"doctag\">@param</span> file </div><div class=\"line\"> * <span class=\"doctag\">@return</span> </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/fileUpload\"</span>)  </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">fileUpload</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"file\"</span>)</span> MultipartFile file) </span>&#123;  </div><div class=\"line\">\t<span class=\"comment\">// 判断文件是否为空  </span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (!file.isEmpty()) &#123;  </div><div class=\"line\">\t\t<span class=\"keyword\">try</span>(FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(file);) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 限制文件大小不超过65k</span></div><div class=\"line\">\t    \t<span class=\"keyword\">long</span> size = fis.available();</div><div class=\"line\">\t    \t<span class=\"keyword\">if</span>(size &gt; <span class=\"number\">65</span> * <span class=\"number\">1024</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"more than MaxSize\"</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"comment\">// Hibernate 3使用Hibernate.createBlob(fis)，Hibernate 4已经弃用，使用如下方法：</span></div><div class=\"line\">\t\t\tLobHelper lh = session.getLobHelper();</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] b = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(<span class=\"keyword\">int</span>) size];</div><div class=\"line\">\t\t\tfis.read(b);</div><div class=\"line\">\t\t\tBlob blob = lh.createBlob(b);</div><div class=\"line\">\t\t\t<span class=\"comment\">// 假设这里要保存用户头像</span></div><div class=\"line\">\t\t\tUser user = <span class=\"keyword\">new</span> User(); </div><div class=\"line\">\t\t\tuser.setPortrait(blob);</div><div class=\"line\">\t\t\tSession session = HibernateSessionFactory.getSession();</div><div class=\"line\">\t\t\tsession.beginTransaction();</div><div class=\"line\">\t\t\tsession.save(user);</div><div class=\"line\">\t\t\tsession.getTransaction().commit();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;  </div><div class=\"line\">\t\t\te.printStackTrace();  </div><div class=\"line\">\t\t&#125;  </div><div class=\"line\">\t&#125;  </div><div class=\"line\">\t<span class=\"comment\">// 返回结果 </span></div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">\"SUCCESS\"</span>;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"客户端读取图片\"><a href=\"#客户端读取图片\" class=\"headerlink\" title=\"客户端读取图片\"></a>客户端读取图片</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;img src=\"showimage?userId = 1\" id=\"image\" width=\"100px\" height=\"100px\"&gt;&lt;/img&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"服务端读取blob图片文件（注意：返回的是流的形式）\"><a href=\"#服务端读取blob图片文件（注意：返回的是流的形式）\" class=\"headerlink\" title=\"服务端读取blob图片文件（注意：返回的是流的形式）\"></a>服务端读取blob图片文件（注意：返回的是流的形式）</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*** </div><div class=\"line\"> * 读取图片</div><div class=\"line\"> * 用<span class=\"doctag\">@RequestParam</span></div><div class=\"line\"> * <span class=\"doctag\">@param</span> userId </div><div class=\"line\"> * <span class=\"doctag\">@return</span> </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/showimage\"</span>)  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@ResponseBody</span> <span class=\"function\">InputStream <span class=\"title\">showImage</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"userId\"</span>)</span> Long userId) </span>&#123;</div><div class=\"line\">\tUser user = <span class=\"keyword\">null</span>;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tSession session = HibernateSessionFactory.getSession();</div><div class=\"line\">\t\tuser = (User) session.get(User.class, id);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == user)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tsession.close;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tBlob blob = user.getPortrait();</div><div class=\"line\">\t<span class=\"keyword\">byte</span>[] data = <span class=\"keyword\">null</span>;</div><div class=\"line\">\tPrintWriter out = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"comment\">// 可以将流写到文件中然后把文件地址返回给客户端去访问，这里将以流的形式返回给客户端</span></div><div class=\"line\">\tInputStream inputStream = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">try</span>(InputStream is = blob.getBinaryStream();) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> length = (<span class=\"keyword\">int</span>) blob.length();</div><div class=\"line\">\t\tdata = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[length];</div><div class=\"line\">\t\tis.read(data);</div><div class=\"line\">\t\tout = response.getWriter();</div><div class=\"line\">\t\tinputStream = <span class=\"keyword\">new</span> ByteArrayInputStream(data);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> a = inputStream.read();</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (a != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\tout.print((<span class=\"keyword\">char</span>) a); </div><div class=\"line\">\t\t\t<span class=\"comment\">// 以流的形式返回给客户端</span></div><div class=\"line\">\t\t\ta = inputStream.read();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> != out) &#123;</div><div class=\"line\">\t\t\tout.flush();</div><div class=\"line\">\t\t\tout.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != inputStream) &#123;</div><div class=\"line\">\t\t\tinputStream.cloase();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"使用kong0.10.x配置oauth2.0的坑","date":"2017-07-03T09:33:37.000Z","_content":"kong的安装和配置启动之前一篇博文已经讲过，这里推荐一个UI管理:kong-dashboard，功能还不是很强大，但是可以省去一些比较基础的配置（api，consumers，plugins的管理），安装配置地址如下： [官方链接](https://www.npmjs.com/package/kong-dashboard)\n\n### 正文\n1.oauth2.0插件使用配置的[官方文档](https://getkong.org/plugins/oauth2-authentication/)，但是做本地开发时还是踩了一些坑的，这里记录一下。首先使用oauth2.0需要kong配置https协议，由于是本地开发，随便自己生成就可以了，没有openssl的自己装\n**生成私钥**：\n```\nopenssl genrsa -out server.key 1024\n```\n执行结果\n```\nGenerating RSA private key, 1024 bit long modulus\n.++++++\n...............++++++\ne is 65537 (0x10001)\n```\n**生成证书**\n```\nopenssl req -new -x509 -key server.key -out server.pem -days 365\n```\n执行结果（这里是我的示例，要改成自己需要的，其实只有Common Name是重点，其它可有可无，这个表示的是域名，由于是本地开发，所以就用localhost）\n```\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:CN\nState or Province Name (full name) [Some-State]:Guangdong\nLocality Name (eg, city) []:Guangzhou\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Test  \nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:localhost\nEmail Address []:\n```\n至此，会在当前路径下生成两个文件，我的是在/usr/local/ssl下，根据官方文档配置ssl分别填写（注意版本）\n```\n$ curl -i -X POST http://localhost:8001/certificates \\\n    -F \"cert=@/usr/local/ssl/server.pem\" \\\n    -F \"key=@/usr/local/ssl/server.key\" \\\n    -F \"localhost\"\n```\n创建api添加ssl（注意是host模式，不能用uris（低于0.10版本的叫request_path）模式）\n```\ncurl -i -X POST http://localhost:8001/apis \\\n    -d \"name=sslapi\" \\\n    -d \"upstream_url=http://www.xxx.com\" \\\n    -d \"hosts=localhost\"\n```\n至此配置完成，测试一下\n```\n$ curl -i https://localhost:8443/\n```\n可以访问，ok，建议配置上把https_only属性也配置上，这样的话http形式就不能访问了，反正oauth一定要https，接下来创建一个oauth2.0插件\n这里有四种模式一般来说都是用enable_authorization_code，但是这里测试起来复杂，就用password模式\n```\n$ curl -X POST http://kong:8001/apis/{api}/plugins \\\n    --data \"name=oauth2\" \\\n    --data \"config.enable_password_grant=true\" \\\n    --data \"config.scopes=email,phone,address,password\" \\\n    --data \"config.mandatory_scope=true\"\n```\n这样sslapi就用上了oauth2.0插件，再次访问的话\n```\n$ curl -i https://localhost:8443/\n```\n报如下错误：\n```\n{\"error_description\":\"The access token is missing\",\"error\":\"invalid_request\"}\n```\n所以，现在需要一个认证服务器，在本地机器上创建一个脚本，我用的是java，运行在tomcat（这里的坑可就多了，看注释），在此之前，还需要创建一个consumer，因为验证的时候有一些配置需要用到\n```\n$ curl -X POST http://localhost:8001/consumers/ \\\n    --data \"username=user123\" \\\n    --data \"custom_id=SOME_CUSTOM_ID\"\n```\n为consumer创建应用来管理oauth和api（这里password模式不需要redirect_uri属性，但是又不能为空，随便填，比如code模式就需要用到）\n```\n$ curl -X POST http://kong:8001/consumers/{consumer_id}/oauth2 \\\n    --data \"name=Testapplication\" \\\n    --data \"redirect_uri=http://some-domain/endpoint/\"\n```\n再创建一个api来转发到验证服务器\n```\ncurl -i -X POST http://localhost:8001/apis \\\n    -d \"name=auth\" \\\n    -d \"upstream_url=http://www.xxx.com/auth\" \\\n    -d \"uris=/auth\"\n```\n开始写验证服务（用户填写用户名密码发到kong，kong转发到验证服务器）\n```\n// 接收验证请求\n@ResponseBody\n@RequestMapping(\"auth\")\npublic Result auth(@RequestParam(\"username\") String username, \n\t@RequestParam(\"password\") String password, \n\t@RequestParam(\"url\") String url) {\n\tResult result = new Result();\n\ttry {\n\t\t// 这里写死验证条件，根据需要去验证\n\t\tif (username.equals(\"zfs\") && password.equals(\"123456\")) {\n\t\t\tMap<String,Object> param = new HashMap<String,Object>();\n\t\t\t// 这些在创建consumers的application的时候会生成\n\t\t\tparam.put(\"client_id\", \"9b120e441c664526a179e64f5fae9d61\");\n\t\t\tparam.put(\"client_secret\", \"f272ad1b876e48358062893300b14d37\");\n\t\t\t// 这个可以看这里https://tools.ietf.org/html/rfc6749#section-7.1\n\t\t\tparam.put(\"grant_type\", \"password\");\n\t\t\t// 这些在创建oauth2.0插件的时候生成\n\t\t\tparam.put(\"scope\", \"password\");\n\t\t\tparam.put(\"provision_key\", \"function\");\n\t\t\t// 这些是自己的用户信息\n\t\t\tparam.put(\"authenticated_userid\", \"233\");\n\t\t\tparam.put(\"username\", \"zfs\");\n\t\t\tparam.put(\"password\", \"123456\");\n\t\t\t// 必须是post请求\n\t\t\tString res = sendHttps(url, param);\n\t\t\tresult.setSuccessResult(res);\n\t\t}\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\treturn result;\n}\n```\n验证服务器验证通过后发送请求到kong的OAuth2 接口，kong会下发token给请求的用户\n```\npublic static String sendHttps(String forwardUrl, Map<String, Object> param)\n\t\t\tthrows Exception {\n\t// forwardUrl不能写死，要当成参数传进来，这个url是你要访问的api再加端点，如我这里要访问的是https://localhost:8443下的资源，所以这里url为https://localhost:8443/oauth2/token（kong提供了/oauth2/authorize和/oauth2/token两个，这里不是code模式，不需要/oauth2/authorize，这些都是需要用post访问的）\n\tHttpURLConnection conn = null;\n\n\ttry {\n\t\t// 这里ssl要自己写，因为这是一个SSL版本问题。服务器只支持SSLv3，而Java将从v2开始，并尝试向上协商，但并非所有服务器都支持这种类型的协商。在网上找答案说使用SSLv3是目前唯一的解决方案，默认是TLS1，会报connect reast的错误，具体的tomcat对应关系见https://blogs.oracle.com/java-platform-group/diagnosing-tls,-ssl,-and-https，我这里是tomcat7，所以设置为TLSv1.2\n\t\tSystem.setProperty(\"https.protocols\", \"TLSv1.2\");\n\t\tSSLContext sc = SSLContext.getInstance(\"TLSv1.2\");\n\t\tsc.init(null, new TrustManager[] { new MyX509TrustManager() },\n\t\t\t\tnew java.security.SecureRandom());\n\t\tURL url = new URL(forwardUrl);\n\n\t\tHttpsURLConnection https = (HttpsURLConnection) url\n\t\t\t\t.openConnection();\n\t\tif (url.getProtocol().toLowerCase().equals(\"https\")) {\n\t\t\t// 这里信任所有证书\n\t\t\thttps.setHostnameVerifier(new HostnameVerifier() {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean verify(String hostname, SSLSession session) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconn = https;\n\t\t} else {\n\t\t\tconn = (HttpURLConnection) url.openConnection();\n\t\t}\n\t\t((HttpsURLConnection) conn).setSSLSocketFactory(sc\n\t\t\t\t.getSocketFactory());\n\t\t((HttpsURLConnection) conn)\n\t\t\t\t.setHostnameVerifier(new TrustAnyHostnameVerifier());\n\n\t\t// 设置请求的参数\n\t\tString post = \"\";\n\t\tif (null != param && param.size() > 0) {\n\t\t\tSet<Entry<String, Object>> entrys = param.entrySet();\n\t\t\tfor (Entry<String, Object> entry : entrys) {\n\t\t\t\tString key = StringUtil.objToStr(entry.getKey());\n\t\t\t\tString val = StringUtil.objToStr(entry.getValue());\n\t\t\t\tpost += key + \"=\" + val + \"&\";\n\t\t\t}\n\t\t\tpost = post.substring(0, post.length() - 1);\n\t\t}\n\n\t\tconn.setRequestMethod(\"POST\");// 提交模式\n\t\t// 发送POST请求必须设置如下两行\n\t\tconn.setDoOutput(true);\n\t\tconn.setDoInput(true);\n\t\t// 获取URLConnection对象对应的输出流\n\t\tPrintWriter printWriter = new PrintWriter(conn.getOutputStream());\n\t\t// 发送请求参数\n\t\tprintWriter.write(post);// post的参数 xx=xx&yy=yy\n\t\t// flush输出流的缓冲\n\t\tprintWriter.flush();\n\t\tconn.connect();\n\t\t// 开始获取数据\n\t\tBufferedInputStream bis = new BufferedInputStream(\n\t\t\t\tconn.getInputStream());\n\t\tByteArrayOutputStream bos = new ByteArrayOutputStream();\n\t\tint len;\n\t\tbyte[] arr = new byte[1024];\n\t\twhile ((len = bis.read(arr)) != -1) {\n\t\t\tbos.write(arr, 0, len);\n\t\t\tbos.flush();\n\t\t}\n\t\tbos.close();\n\t\treturn bos.toString(\"utf-8\");\n\t} catch (Exception e) {\n\t\tthrow e;\n\t}\n}\n\nprivate static class MyX509TrustManager implements X509TrustManager {\n\tpublic void checkClientTrusted(X509Certificate[] chain, String authType)\n\t\t\tthrows CertificateException {\n\t}\n\tpublic void checkServerTrusted(X509Certificate[] chain, String authType)\n\t\t\tthrows CertificateException {\n\t}\n\tpublic X509Certificate[] getAcceptedIssuers() {\n\t\treturn null;\n\t}\n}\n\nprivate static class TrustAnyHostnameVerifier implements HostnameVerifier {\n\tpublic boolean verify(String hostname, SSLSession session) {\n\t\treturn true;\n\t}\n}\n```\n认证服务器写完，开始验证\n```\n$ curl -i https://localhost:8443/auth?username=zfs&password=123456&url=https://localhost:8443/oauth2/token\n```\n返回结果（这是我自己的json结构，即上面的Result）\n```\n{\"data\":\"{\\\"refresh_token\\\":\\\"673871402d0f45fe962be3b9fa2eb68a\\\",\\\"token_type\\\":\\\"bearer\\\",\\\"access_token\\\":\\\"924e79bd9fa941d08cc5b96fe8eba44b\\\",\\\"expires_in\\\":7200}\\n\",\"err\":0,\"msg\":\"操作成功！\"}\n```\n拿到access_token之后就可以访问https://localhost:8443下的资源了，试一下\n```\n$ curl -k 'https://localhost:8443/test' -H 'Authorization: Bearer 924e79bd9fa941d08cc5b96fe8eba44b'\n```\n这样整个流程就走完了，其实这里因为用了虚拟机，传进去的url参数不是https://localhost:8443/oauth2/token，这个地址是不对的，因为在主机里访问虚拟机不能直接用localhost，而是得用ip+port，所以我传的是https://myip:8443/oauth2/token，这里就有一个问题了，证书绑的是域名，ip请求并不能被识别，所以再创了一个api，心好累\n```\ncurl -i -X POST http://localhost:8001/apis \\\n    -d \"name=zhuanfa\" \\\n    -d \"upstream_url=https://localhost:8443/oauth2/token\" \\\n    -d \"uris=/zhuanfa\"\n```\n所以验证的请求就会变成\n```\n$ curl -i https://localhost:8443/auth?username=zfs&password=123456&url=https://myip:8443/zhuanfa/oauth2/token\n```","source":"_posts/使用kong配置oauth2.0的坑.md","raw":"---\ntitle: 使用kong0.10.x配置oauth2.0的坑\ndate: 2017-07-03 17:33:37\ncategories: [kong]\ntags: [kong]\n---\nkong的安装和配置启动之前一篇博文已经讲过，这里推荐一个UI管理:kong-dashboard，功能还不是很强大，但是可以省去一些比较基础的配置（api，consumers，plugins的管理），安装配置地址如下： [官方链接](https://www.npmjs.com/package/kong-dashboard)\n\n### 正文\n1.oauth2.0插件使用配置的[官方文档](https://getkong.org/plugins/oauth2-authentication/)，但是做本地开发时还是踩了一些坑的，这里记录一下。首先使用oauth2.0需要kong配置https协议，由于是本地开发，随便自己生成就可以了，没有openssl的自己装\n**生成私钥**：\n```\nopenssl genrsa -out server.key 1024\n```\n执行结果\n```\nGenerating RSA private key, 1024 bit long modulus\n.++++++\n...............++++++\ne is 65537 (0x10001)\n```\n**生成证书**\n```\nopenssl req -new -x509 -key server.key -out server.pem -days 365\n```\n执行结果（这里是我的示例，要改成自己需要的，其实只有Common Name是重点，其它可有可无，这个表示的是域名，由于是本地开发，所以就用localhost）\n```\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:CN\nState or Province Name (full name) [Some-State]:Guangdong\nLocality Name (eg, city) []:Guangzhou\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Test  \nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:localhost\nEmail Address []:\n```\n至此，会在当前路径下生成两个文件，我的是在/usr/local/ssl下，根据官方文档配置ssl分别填写（注意版本）\n```\n$ curl -i -X POST http://localhost:8001/certificates \\\n    -F \"cert=@/usr/local/ssl/server.pem\" \\\n    -F \"key=@/usr/local/ssl/server.key\" \\\n    -F \"localhost\"\n```\n创建api添加ssl（注意是host模式，不能用uris（低于0.10版本的叫request_path）模式）\n```\ncurl -i -X POST http://localhost:8001/apis \\\n    -d \"name=sslapi\" \\\n    -d \"upstream_url=http://www.xxx.com\" \\\n    -d \"hosts=localhost\"\n```\n至此配置完成，测试一下\n```\n$ curl -i https://localhost:8443/\n```\n可以访问，ok，建议配置上把https_only属性也配置上，这样的话http形式就不能访问了，反正oauth一定要https，接下来创建一个oauth2.0插件\n这里有四种模式一般来说都是用enable_authorization_code，但是这里测试起来复杂，就用password模式\n```\n$ curl -X POST http://kong:8001/apis/{api}/plugins \\\n    --data \"name=oauth2\" \\\n    --data \"config.enable_password_grant=true\" \\\n    --data \"config.scopes=email,phone,address,password\" \\\n    --data \"config.mandatory_scope=true\"\n```\n这样sslapi就用上了oauth2.0插件，再次访问的话\n```\n$ curl -i https://localhost:8443/\n```\n报如下错误：\n```\n{\"error_description\":\"The access token is missing\",\"error\":\"invalid_request\"}\n```\n所以，现在需要一个认证服务器，在本地机器上创建一个脚本，我用的是java，运行在tomcat（这里的坑可就多了，看注释），在此之前，还需要创建一个consumer，因为验证的时候有一些配置需要用到\n```\n$ curl -X POST http://localhost:8001/consumers/ \\\n    --data \"username=user123\" \\\n    --data \"custom_id=SOME_CUSTOM_ID\"\n```\n为consumer创建应用来管理oauth和api（这里password模式不需要redirect_uri属性，但是又不能为空，随便填，比如code模式就需要用到）\n```\n$ curl -X POST http://kong:8001/consumers/{consumer_id}/oauth2 \\\n    --data \"name=Testapplication\" \\\n    --data \"redirect_uri=http://some-domain/endpoint/\"\n```\n再创建一个api来转发到验证服务器\n```\ncurl -i -X POST http://localhost:8001/apis \\\n    -d \"name=auth\" \\\n    -d \"upstream_url=http://www.xxx.com/auth\" \\\n    -d \"uris=/auth\"\n```\n开始写验证服务（用户填写用户名密码发到kong，kong转发到验证服务器）\n```\n// 接收验证请求\n@ResponseBody\n@RequestMapping(\"auth\")\npublic Result auth(@RequestParam(\"username\") String username, \n\t@RequestParam(\"password\") String password, \n\t@RequestParam(\"url\") String url) {\n\tResult result = new Result();\n\ttry {\n\t\t// 这里写死验证条件，根据需要去验证\n\t\tif (username.equals(\"zfs\") && password.equals(\"123456\")) {\n\t\t\tMap<String,Object> param = new HashMap<String,Object>();\n\t\t\t// 这些在创建consumers的application的时候会生成\n\t\t\tparam.put(\"client_id\", \"9b120e441c664526a179e64f5fae9d61\");\n\t\t\tparam.put(\"client_secret\", \"f272ad1b876e48358062893300b14d37\");\n\t\t\t// 这个可以看这里https://tools.ietf.org/html/rfc6749#section-7.1\n\t\t\tparam.put(\"grant_type\", \"password\");\n\t\t\t// 这些在创建oauth2.0插件的时候生成\n\t\t\tparam.put(\"scope\", \"password\");\n\t\t\tparam.put(\"provision_key\", \"function\");\n\t\t\t// 这些是自己的用户信息\n\t\t\tparam.put(\"authenticated_userid\", \"233\");\n\t\t\tparam.put(\"username\", \"zfs\");\n\t\t\tparam.put(\"password\", \"123456\");\n\t\t\t// 必须是post请求\n\t\t\tString res = sendHttps(url, param);\n\t\t\tresult.setSuccessResult(res);\n\t\t}\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\treturn result;\n}\n```\n验证服务器验证通过后发送请求到kong的OAuth2 接口，kong会下发token给请求的用户\n```\npublic static String sendHttps(String forwardUrl, Map<String, Object> param)\n\t\t\tthrows Exception {\n\t// forwardUrl不能写死，要当成参数传进来，这个url是你要访问的api再加端点，如我这里要访问的是https://localhost:8443下的资源，所以这里url为https://localhost:8443/oauth2/token（kong提供了/oauth2/authorize和/oauth2/token两个，这里不是code模式，不需要/oauth2/authorize，这些都是需要用post访问的）\n\tHttpURLConnection conn = null;\n\n\ttry {\n\t\t// 这里ssl要自己写，因为这是一个SSL版本问题。服务器只支持SSLv3，而Java将从v2开始，并尝试向上协商，但并非所有服务器都支持这种类型的协商。在网上找答案说使用SSLv3是目前唯一的解决方案，默认是TLS1，会报connect reast的错误，具体的tomcat对应关系见https://blogs.oracle.com/java-platform-group/diagnosing-tls,-ssl,-and-https，我这里是tomcat7，所以设置为TLSv1.2\n\t\tSystem.setProperty(\"https.protocols\", \"TLSv1.2\");\n\t\tSSLContext sc = SSLContext.getInstance(\"TLSv1.2\");\n\t\tsc.init(null, new TrustManager[] { new MyX509TrustManager() },\n\t\t\t\tnew java.security.SecureRandom());\n\t\tURL url = new URL(forwardUrl);\n\n\t\tHttpsURLConnection https = (HttpsURLConnection) url\n\t\t\t\t.openConnection();\n\t\tif (url.getProtocol().toLowerCase().equals(\"https\")) {\n\t\t\t// 这里信任所有证书\n\t\t\thttps.setHostnameVerifier(new HostnameVerifier() {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean verify(String hostname, SSLSession session) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconn = https;\n\t\t} else {\n\t\t\tconn = (HttpURLConnection) url.openConnection();\n\t\t}\n\t\t((HttpsURLConnection) conn).setSSLSocketFactory(sc\n\t\t\t\t.getSocketFactory());\n\t\t((HttpsURLConnection) conn)\n\t\t\t\t.setHostnameVerifier(new TrustAnyHostnameVerifier());\n\n\t\t// 设置请求的参数\n\t\tString post = \"\";\n\t\tif (null != param && param.size() > 0) {\n\t\t\tSet<Entry<String, Object>> entrys = param.entrySet();\n\t\t\tfor (Entry<String, Object> entry : entrys) {\n\t\t\t\tString key = StringUtil.objToStr(entry.getKey());\n\t\t\t\tString val = StringUtil.objToStr(entry.getValue());\n\t\t\t\tpost += key + \"=\" + val + \"&\";\n\t\t\t}\n\t\t\tpost = post.substring(0, post.length() - 1);\n\t\t}\n\n\t\tconn.setRequestMethod(\"POST\");// 提交模式\n\t\t// 发送POST请求必须设置如下两行\n\t\tconn.setDoOutput(true);\n\t\tconn.setDoInput(true);\n\t\t// 获取URLConnection对象对应的输出流\n\t\tPrintWriter printWriter = new PrintWriter(conn.getOutputStream());\n\t\t// 发送请求参数\n\t\tprintWriter.write(post);// post的参数 xx=xx&yy=yy\n\t\t// flush输出流的缓冲\n\t\tprintWriter.flush();\n\t\tconn.connect();\n\t\t// 开始获取数据\n\t\tBufferedInputStream bis = new BufferedInputStream(\n\t\t\t\tconn.getInputStream());\n\t\tByteArrayOutputStream bos = new ByteArrayOutputStream();\n\t\tint len;\n\t\tbyte[] arr = new byte[1024];\n\t\twhile ((len = bis.read(arr)) != -1) {\n\t\t\tbos.write(arr, 0, len);\n\t\t\tbos.flush();\n\t\t}\n\t\tbos.close();\n\t\treturn bos.toString(\"utf-8\");\n\t} catch (Exception e) {\n\t\tthrow e;\n\t}\n}\n\nprivate static class MyX509TrustManager implements X509TrustManager {\n\tpublic void checkClientTrusted(X509Certificate[] chain, String authType)\n\t\t\tthrows CertificateException {\n\t}\n\tpublic void checkServerTrusted(X509Certificate[] chain, String authType)\n\t\t\tthrows CertificateException {\n\t}\n\tpublic X509Certificate[] getAcceptedIssuers() {\n\t\treturn null;\n\t}\n}\n\nprivate static class TrustAnyHostnameVerifier implements HostnameVerifier {\n\tpublic boolean verify(String hostname, SSLSession session) {\n\t\treturn true;\n\t}\n}\n```\n认证服务器写完，开始验证\n```\n$ curl -i https://localhost:8443/auth?username=zfs&password=123456&url=https://localhost:8443/oauth2/token\n```\n返回结果（这是我自己的json结构，即上面的Result）\n```\n{\"data\":\"{\\\"refresh_token\\\":\\\"673871402d0f45fe962be3b9fa2eb68a\\\",\\\"token_type\\\":\\\"bearer\\\",\\\"access_token\\\":\\\"924e79bd9fa941d08cc5b96fe8eba44b\\\",\\\"expires_in\\\":7200}\\n\",\"err\":0,\"msg\":\"操作成功！\"}\n```\n拿到access_token之后就可以访问https://localhost:8443下的资源了，试一下\n```\n$ curl -k 'https://localhost:8443/test' -H 'Authorization: Bearer 924e79bd9fa941d08cc5b96fe8eba44b'\n```\n这样整个流程就走完了，其实这里因为用了虚拟机，传进去的url参数不是https://localhost:8443/oauth2/token，这个地址是不对的，因为在主机里访问虚拟机不能直接用localhost，而是得用ip+port，所以我传的是https://myip:8443/oauth2/token，这里就有一个问题了，证书绑的是域名，ip请求并不能被识别，所以再创了一个api，心好累\n```\ncurl -i -X POST http://localhost:8001/apis \\\n    -d \"name=zhuanfa\" \\\n    -d \"upstream_url=https://localhost:8443/oauth2/token\" \\\n    -d \"uris=/zhuanfa\"\n```\n所以验证的请求就会变成\n```\n$ curl -i https://localhost:8443/auth?username=zfs&password=123456&url=https://myip:8443/zhuanfa/oauth2/token\n```","slug":"使用kong配置oauth2.0的坑","published":1,"updated":"2017-07-04T08:09:26.162Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou5y002tpo2ysgmpuuv9","content":"<p>kong的安装和配置启动之前一篇博文已经讲过，这里推荐一个UI管理:kong-dashboard，功能还不是很强大，但是可以省去一些比较基础的配置（api，consumers，plugins的管理），安装配置地址如下： <a href=\"https://www.npmjs.com/package/kong-dashboard\" target=\"_blank\" rel=\"external\">官方链接</a></p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>1.oauth2.0插件使用配置的<a href=\"https://getkong.org/plugins/oauth2-authentication/\" target=\"_blank\" rel=\"external\">官方文档</a>，但是做本地开发时还是踩了一些坑的，这里记录一下。首先使用oauth2.0需要kong配置https协议，由于是本地开发，随便自己生成就可以了，没有openssl的自己装<br><strong>生成私钥</strong>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">openssl genrsa -out server.key 1024</div></pre></td></tr></table></figure></p>\n<p>执行结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Generating RSA private key, 1024 bit long modulus</div><div class=\"line\">.++++++</div><div class=\"line\">...............++++++</div><div class=\"line\">e is 65537 (0x10001)</div></pre></td></tr></table></figure></p>\n<p><strong>生成证书</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">openssl req -new -x509 -key server.key -out server.pem -days 365</div></pre></td></tr></table></figure></p>\n<p>执行结果（这里是我的示例，要改成自己需要的，其实只有Common Name是重点，其它可有可无，这个表示的是域名，由于是本地开发，所以就用localhost）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">You are about to be asked to enter information that will be incorporated</div><div class=\"line\">into your certificate request.</div><div class=\"line\">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class=\"line\">There are quite a few fields but you can leave some blank</div><div class=\"line\">For some fields there will be a default value,</div><div class=\"line\">If you enter &apos;.&apos;, the field will be left blank.</div><div class=\"line\">-----</div><div class=\"line\">Country Name (2 letter code) [AU]:CN</div><div class=\"line\">State or Province Name (full name) [Some-State]:Guangdong</div><div class=\"line\">Locality Name (eg, city) []:Guangzhou</div><div class=\"line\">Organization Name (eg, company) [Internet Widgits Pty Ltd]:Test  </div><div class=\"line\">Organizational Unit Name (eg, section) []:</div><div class=\"line\">Common Name (e.g. server FQDN or YOUR name) []:localhost</div><div class=\"line\">Email Address []:</div></pre></td></tr></table></figure></p>\n<p>至此，会在当前路径下生成两个文件，我的是在/usr/local/ssl下，根据官方文档配置ssl分别填写（注意版本）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i -X POST http://localhost:8001/certificates \\</div><div class=\"line\">    -F &quot;cert=@/usr/local/ssl/server.pem&quot; \\</div><div class=\"line\">    -F &quot;key=@/usr/local/ssl/server.key&quot; \\</div><div class=\"line\">    -F &quot;localhost&quot;</div></pre></td></tr></table></figure></p>\n<p>创建api添加ssl（注意是host模式，不能用uris（低于0.10版本的叫request_path）模式）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST http://localhost:8001/apis \\</div><div class=\"line\">    -d &quot;name=sslapi&quot; \\</div><div class=\"line\">    -d &quot;upstream_url=http://www.xxx.com&quot; \\</div><div class=\"line\">    -d &quot;hosts=localhost&quot;</div></pre></td></tr></table></figure></p>\n<p>至此配置完成，测试一下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i https://localhost:8443/</div></pre></td></tr></table></figure></p>\n<p>可以访问，ok，建议配置上把https_only属性也配置上，这样的话http形式就不能访问了，反正oauth一定要https，接下来创建一个oauth2.0插件<br>这里有四种模式一般来说都是用enable_authorization_code，但是这里测试起来复杂，就用password模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -X POST http://kong:8001/apis/&#123;api&#125;/plugins \\</div><div class=\"line\">    --data &quot;name=oauth2&quot; \\</div><div class=\"line\">    --data &quot;config.enable_password_grant=true&quot; \\</div><div class=\"line\">    --data &quot;config.scopes=email,phone,address,password&quot; \\</div><div class=\"line\">    --data &quot;config.mandatory_scope=true&quot;</div></pre></td></tr></table></figure></p>\n<p>这样sslapi就用上了oauth2.0插件，再次访问的话<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i https://localhost:8443/</div></pre></td></tr></table></figure></p>\n<p>报如下错误：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&quot;error_description&quot;:&quot;The access token is missing&quot;,&quot;error&quot;:&quot;invalid_request&quot;&#125;</div></pre></td></tr></table></figure></p>\n<p>所以，现在需要一个认证服务器，在本地机器上创建一个脚本，我用的是java，运行在tomcat（这里的坑可就多了，看注释），在此之前，还需要创建一个consumer，因为验证的时候有一些配置需要用到<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -X POST http://localhost:8001/consumers/ \\</div><div class=\"line\">    --data &quot;username=user123&quot; \\</div><div class=\"line\">    --data &quot;custom_id=SOME_CUSTOM_ID&quot;</div></pre></td></tr></table></figure></p>\n<p>为consumer创建应用来管理oauth和api（这里password模式不需要redirect_uri属性，但是又不能为空，随便填，比如code模式就需要用到）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -X POST http://kong:8001/consumers/&#123;consumer_id&#125;/oauth2 \\</div><div class=\"line\">    --data &quot;name=Testapplication&quot; \\</div><div class=\"line\">    --data &quot;redirect_uri=http://some-domain/endpoint/&quot;</div></pre></td></tr></table></figure></p>\n<p>再创建一个api来转发到验证服务器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST http://localhost:8001/apis \\</div><div class=\"line\">    -d &quot;name=auth&quot; \\</div><div class=\"line\">    -d &quot;upstream_url=http://www.xxx.com/auth&quot; \\</div><div class=\"line\">    -d &quot;uris=/auth&quot;</div></pre></td></tr></table></figure></p>\n<p>开始写验证服务（用户填写用户名密码发到kong，kong转发到验证服务器）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 接收验证请求</div><div class=\"line\">@ResponseBody</div><div class=\"line\">@RequestMapping(&quot;auth&quot;)</div><div class=\"line\">public Result auth(@RequestParam(&quot;username&quot;) String username, </div><div class=\"line\">\t@RequestParam(&quot;password&quot;) String password, </div><div class=\"line\">\t@RequestParam(&quot;url&quot;) String url) &#123;</div><div class=\"line\">\tResult result = new Result();</div><div class=\"line\">\ttry &#123;</div><div class=\"line\">\t\t// 这里写死验证条件，根据需要去验证</div><div class=\"line\">\t\tif (username.equals(&quot;zfs&quot;) &amp;&amp; password.equals(&quot;123456&quot;)) &#123;</div><div class=\"line\">\t\t\tMap&lt;String,Object&gt; param = new HashMap&lt;String,Object&gt;();</div><div class=\"line\">\t\t\t// 这些在创建consumers的application的时候会生成</div><div class=\"line\">\t\t\tparam.put(&quot;client_id&quot;, &quot;9b120e441c664526a179e64f5fae9d61&quot;);</div><div class=\"line\">\t\t\tparam.put(&quot;client_secret&quot;, &quot;f272ad1b876e48358062893300b14d37&quot;);</div><div class=\"line\">\t\t\t// 这个可以看这里https://tools.ietf.org/html/rfc6749#section-7.1</div><div class=\"line\">\t\t\tparam.put(&quot;grant_type&quot;, &quot;password&quot;);</div><div class=\"line\">\t\t\t// 这些在创建oauth2.0插件的时候生成</div><div class=\"line\">\t\t\tparam.put(&quot;scope&quot;, &quot;password&quot;);</div><div class=\"line\">\t\t\tparam.put(&quot;provision_key&quot;, &quot;function&quot;);</div><div class=\"line\">\t\t\t// 这些是自己的用户信息</div><div class=\"line\">\t\t\tparam.put(&quot;authenticated_userid&quot;, &quot;233&quot;);</div><div class=\"line\">\t\t\tparam.put(&quot;username&quot;, &quot;zfs&quot;);</div><div class=\"line\">\t\t\tparam.put(&quot;password&quot;, &quot;123456&quot;);</div><div class=\"line\">\t\t\t// 必须是post请求</div><div class=\"line\">\t\t\tString res = sendHttps(url, param);</div><div class=\"line\">\t\t\tresult.setSuccessResult(res);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; catch (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn result;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>验证服务器验证通过后发送请求到kong的OAuth2 接口，kong会下发token给请求的用户<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String sendHttps(String forwardUrl, Map&lt;String, Object&gt; param)</div><div class=\"line\">\t\t\tthrows Exception &#123;</div><div class=\"line\">\t// forwardUrl不能写死，要当成参数传进来，这个url是你要访问的api再加端点，如我这里要访问的是https://localhost:8443下的资源，所以这里url为https://localhost:8443/oauth2/token（kong提供了/oauth2/authorize和/oauth2/token两个，这里不是code模式，不需要/oauth2/authorize，这些都是需要用post访问的）</div><div class=\"line\">\tHttpURLConnection conn = null;</div><div class=\"line\"></div><div class=\"line\">\ttry &#123;</div><div class=\"line\">\t\t// 这里ssl要自己写，因为这是一个SSL版本问题。服务器只支持SSLv3，而Java将从v2开始，并尝试向上协商，但并非所有服务器都支持这种类型的协商。在网上找答案说使用SSLv3是目前唯一的解决方案，默认是TLS1，会报connect reast的错误，具体的tomcat对应关系见https://blogs.oracle.com/java-platform-group/diagnosing-tls,-ssl,-and-https，我这里是tomcat7，所以设置为TLSv1.2</div><div class=\"line\">\t\tSystem.setProperty(&quot;https.protocols&quot;, &quot;TLSv1.2&quot;);</div><div class=\"line\">\t\tSSLContext sc = SSLContext.getInstance(&quot;TLSv1.2&quot;);</div><div class=\"line\">\t\tsc.init(null, new TrustManager[] &#123; new MyX509TrustManager() &#125;,</div><div class=\"line\">\t\t\t\tnew java.security.SecureRandom());</div><div class=\"line\">\t\tURL url = new URL(forwardUrl);</div><div class=\"line\"></div><div class=\"line\">\t\tHttpsURLConnection https = (HttpsURLConnection) url</div><div class=\"line\">\t\t\t\t.openConnection();</div><div class=\"line\">\t\tif (url.getProtocol().toLowerCase().equals(&quot;https&quot;)) &#123;</div><div class=\"line\">\t\t\t// 这里信任所有证书</div><div class=\"line\">\t\t\thttps.setHostnameVerifier(new HostnameVerifier() &#123;</div><div class=\"line\">\t\t\t\t@Override</div><div class=\"line\">\t\t\t\tpublic boolean verify(String hostname, SSLSession session) &#123;</div><div class=\"line\">\t\t\t\t\treturn false;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;);</div><div class=\"line\">\t\t\tconn = https;</div><div class=\"line\">\t\t&#125; else &#123;</div><div class=\"line\">\t\t\tconn = (HttpURLConnection) url.openConnection();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t((HttpsURLConnection) conn).setSSLSocketFactory(sc</div><div class=\"line\">\t\t\t\t.getSocketFactory());</div><div class=\"line\">\t\t((HttpsURLConnection) conn)</div><div class=\"line\">\t\t\t\t.setHostnameVerifier(new TrustAnyHostnameVerifier());</div><div class=\"line\"></div><div class=\"line\">\t\t// 设置请求的参数</div><div class=\"line\">\t\tString post = &quot;&quot;;</div><div class=\"line\">\t\tif (null != param &amp;&amp; param.size() &gt; 0) &#123;</div><div class=\"line\">\t\t\tSet&lt;Entry&lt;String, Object&gt;&gt; entrys = param.entrySet();</div><div class=\"line\">\t\t\tfor (Entry&lt;String, Object&gt; entry : entrys) &#123;</div><div class=\"line\">\t\t\t\tString key = StringUtil.objToStr(entry.getKey());</div><div class=\"line\">\t\t\t\tString val = StringUtil.objToStr(entry.getValue());</div><div class=\"line\">\t\t\t\tpost += key + &quot;=&quot; + val + &quot;&amp;&quot;;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpost = post.substring(0, post.length() - 1);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\tconn.setRequestMethod(&quot;POST&quot;);// 提交模式</div><div class=\"line\">\t\t// 发送POST请求必须设置如下两行</div><div class=\"line\">\t\tconn.setDoOutput(true);</div><div class=\"line\">\t\tconn.setDoInput(true);</div><div class=\"line\">\t\t// 获取URLConnection对象对应的输出流</div><div class=\"line\">\t\tPrintWriter printWriter = new PrintWriter(conn.getOutputStream());</div><div class=\"line\">\t\t// 发送请求参数</div><div class=\"line\">\t\tprintWriter.write(post);// post的参数 xx=xx&amp;yy=yy</div><div class=\"line\">\t\t// flush输出流的缓冲</div><div class=\"line\">\t\tprintWriter.flush();</div><div class=\"line\">\t\tconn.connect();</div><div class=\"line\">\t\t// 开始获取数据</div><div class=\"line\">\t\tBufferedInputStream bis = new BufferedInputStream(</div><div class=\"line\">\t\t\t\tconn.getInputStream());</div><div class=\"line\">\t\tByteArrayOutputStream bos = new ByteArrayOutputStream();</div><div class=\"line\">\t\tint len;</div><div class=\"line\">\t\tbyte[] arr = new byte[1024];</div><div class=\"line\">\t\twhile ((len = bis.read(arr)) != -1) &#123;</div><div class=\"line\">\t\t\tbos.write(arr, 0, len);</div><div class=\"line\">\t\t\tbos.flush();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tbos.close();</div><div class=\"line\">\t\treturn bos.toString(&quot;utf-8&quot;);</div><div class=\"line\">\t&#125; catch (Exception e) &#123;</div><div class=\"line\">\t\tthrow e;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">private static class MyX509TrustManager implements X509TrustManager &#123;</div><div class=\"line\">\tpublic void checkClientTrusted(X509Certificate[] chain, String authType)</div><div class=\"line\">\t\t\tthrows CertificateException &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tpublic void checkServerTrusted(X509Certificate[] chain, String authType)</div><div class=\"line\">\t\t\tthrows CertificateException &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tpublic X509Certificate[] getAcceptedIssuers() &#123;</div><div class=\"line\">\t\treturn null;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">private static class TrustAnyHostnameVerifier implements HostnameVerifier &#123;</div><div class=\"line\">\tpublic boolean verify(String hostname, SSLSession session) &#123;</div><div class=\"line\">\t\treturn true;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>认证服务器写完，开始验证<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i https://localhost:8443/auth?username=zfs&amp;password=123456&amp;url=https://localhost:8443/oauth2/token</div></pre></td></tr></table></figure></p>\n<p>返回结果（这是我自己的json结构，即上面的Result）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&quot;data&quot;:&quot;&#123;\\&quot;refresh_token\\&quot;:\\&quot;673871402d0f45fe962be3b9fa2eb68a\\&quot;,\\&quot;token_type\\&quot;:\\&quot;bearer\\&quot;,\\&quot;access_token\\&quot;:\\&quot;924e79bd9fa941d08cc5b96fe8eba44b\\&quot;,\\&quot;expires_in\\&quot;:7200&#125;\\n&quot;,&quot;err&quot;:0,&quot;msg&quot;:&quot;操作成功！&quot;&#125;</div></pre></td></tr></table></figure></p>\n<p>拿到access_token之后就可以访问<a href=\"https://localhost:8443下的资源了，试一下\" target=\"_blank\" rel=\"external\">https://localhost:8443下的资源了，试一下</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -k &apos;https://localhost:8443/test&apos; -H &apos;Authorization: Bearer 924e79bd9fa941d08cc5b96fe8eba44b&apos;</div></pre></td></tr></table></figure></p>\n<p>这样整个流程就走完了，其实这里因为用了虚拟机，传进去的url参数不是<a href=\"https://localhost:8443/oauth2/token，这个地址是不对的，因为在主机里访问虚拟机不能直接用localhost，而是得用ip+port，所以我传的是https://myip:8443/oauth2/token，这里就有一个问题了，证书绑的是域名，ip请求并不能被识别，所以再创了一个api，心好累\" target=\"_blank\" rel=\"external\">https://localhost:8443/oauth2/token，这个地址是不对的，因为在主机里访问虚拟机不能直接用localhost，而是得用ip+port，所以我传的是https://myip:8443/oauth2/token，这里就有一个问题了，证书绑的是域名，ip请求并不能被识别，所以再创了一个api，心好累</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST http://localhost:8001/apis \\</div><div class=\"line\">    -d &quot;name=zhuanfa&quot; \\</div><div class=\"line\">    -d &quot;upstream_url=https://localhost:8443/oauth2/token&quot; \\</div><div class=\"line\">    -d &quot;uris=/zhuanfa&quot;</div></pre></td></tr></table></figure></p>\n<p>所以验证的请求就会变成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i https://localhost:8443/auth?username=zfs&amp;password=123456&amp;url=https://myip:8443/zhuanfa/oauth2/token</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>kong的安装和配置启动之前一篇博文已经讲过，这里推荐一个UI管理:kong-dashboard，功能还不是很强大，但是可以省去一些比较基础的配置（api，consumers，plugins的管理），安装配置地址如下： <a href=\"https://www.npmjs.com/package/kong-dashboard\">官方链接</a></p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>1.oauth2.0插件使用配置的<a href=\"https://getkong.org/plugins/oauth2-authentication/\">官方文档</a>，但是做本地开发时还是踩了一些坑的，这里记录一下。首先使用oauth2.0需要kong配置https协议，由于是本地开发，随便自己生成就可以了，没有openssl的自己装<br><strong>生成私钥</strong>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">openssl genrsa -out server.key 1024</div></pre></td></tr></table></figure></p>\n<p>执行结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Generating RSA private key, 1024 bit long modulus</div><div class=\"line\">.++++++</div><div class=\"line\">...............++++++</div><div class=\"line\">e is 65537 (0x10001)</div></pre></td></tr></table></figure></p>\n<p><strong>生成证书</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">openssl req -new -x509 -key server.key -out server.pem -days 365</div></pre></td></tr></table></figure></p>\n<p>执行结果（这里是我的示例，要改成自己需要的，其实只有Common Name是重点，其它可有可无，这个表示的是域名，由于是本地开发，所以就用localhost）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">You are about to be asked to enter information that will be incorporated</div><div class=\"line\">into your certificate request.</div><div class=\"line\">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class=\"line\">There are quite a few fields but you can leave some blank</div><div class=\"line\">For some fields there will be a default value,</div><div class=\"line\">If you enter &apos;.&apos;, the field will be left blank.</div><div class=\"line\">-----</div><div class=\"line\">Country Name (2 letter code) [AU]:CN</div><div class=\"line\">State or Province Name (full name) [Some-State]:Guangdong</div><div class=\"line\">Locality Name (eg, city) []:Guangzhou</div><div class=\"line\">Organization Name (eg, company) [Internet Widgits Pty Ltd]:Test  </div><div class=\"line\">Organizational Unit Name (eg, section) []:</div><div class=\"line\">Common Name (e.g. server FQDN or YOUR name) []:localhost</div><div class=\"line\">Email Address []:</div></pre></td></tr></table></figure></p>\n<p>至此，会在当前路径下生成两个文件，我的是在/usr/local/ssl下，根据官方文档配置ssl分别填写（注意版本）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i -X POST http://localhost:8001/certificates \\</div><div class=\"line\">    -F &quot;cert=@/usr/local/ssl/server.pem&quot; \\</div><div class=\"line\">    -F &quot;key=@/usr/local/ssl/server.key&quot; \\</div><div class=\"line\">    -F &quot;localhost&quot;</div></pre></td></tr></table></figure></p>\n<p>创建api添加ssl（注意是host模式，不能用uris（低于0.10版本的叫request_path）模式）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST http://localhost:8001/apis \\</div><div class=\"line\">    -d &quot;name=sslapi&quot; \\</div><div class=\"line\">    -d &quot;upstream_url=http://www.xxx.com&quot; \\</div><div class=\"line\">    -d &quot;hosts=localhost&quot;</div></pre></td></tr></table></figure></p>\n<p>至此配置完成，测试一下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i https://localhost:8443/</div></pre></td></tr></table></figure></p>\n<p>可以访问，ok，建议配置上把https_only属性也配置上，这样的话http形式就不能访问了，反正oauth一定要https，接下来创建一个oauth2.0插件<br>这里有四种模式一般来说都是用enable_authorization_code，但是这里测试起来复杂，就用password模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -X POST http://kong:8001/apis/&#123;api&#125;/plugins \\</div><div class=\"line\">    --data &quot;name=oauth2&quot; \\</div><div class=\"line\">    --data &quot;config.enable_password_grant=true&quot; \\</div><div class=\"line\">    --data &quot;config.scopes=email,phone,address,password&quot; \\</div><div class=\"line\">    --data &quot;config.mandatory_scope=true&quot;</div></pre></td></tr></table></figure></p>\n<p>这样sslapi就用上了oauth2.0插件，再次访问的话<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i https://localhost:8443/</div></pre></td></tr></table></figure></p>\n<p>报如下错误：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&quot;error_description&quot;:&quot;The access token is missing&quot;,&quot;error&quot;:&quot;invalid_request&quot;&#125;</div></pre></td></tr></table></figure></p>\n<p>所以，现在需要一个认证服务器，在本地机器上创建一个脚本，我用的是java，运行在tomcat（这里的坑可就多了，看注释），在此之前，还需要创建一个consumer，因为验证的时候有一些配置需要用到<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -X POST http://localhost:8001/consumers/ \\</div><div class=\"line\">    --data &quot;username=user123&quot; \\</div><div class=\"line\">    --data &quot;custom_id=SOME_CUSTOM_ID&quot;</div></pre></td></tr></table></figure></p>\n<p>为consumer创建应用来管理oauth和api（这里password模式不需要redirect_uri属性，但是又不能为空，随便填，比如code模式就需要用到）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -X POST http://kong:8001/consumers/&#123;consumer_id&#125;/oauth2 \\</div><div class=\"line\">    --data &quot;name=Testapplication&quot; \\</div><div class=\"line\">    --data &quot;redirect_uri=http://some-domain/endpoint/&quot;</div></pre></td></tr></table></figure></p>\n<p>再创建一个api来转发到验证服务器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST http://localhost:8001/apis \\</div><div class=\"line\">    -d &quot;name=auth&quot; \\</div><div class=\"line\">    -d &quot;upstream_url=http://www.xxx.com/auth&quot; \\</div><div class=\"line\">    -d &quot;uris=/auth&quot;</div></pre></td></tr></table></figure></p>\n<p>开始写验证服务（用户填写用户名密码发到kong，kong转发到验证服务器）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 接收验证请求</div><div class=\"line\">@ResponseBody</div><div class=\"line\">@RequestMapping(&quot;auth&quot;)</div><div class=\"line\">public Result auth(@RequestParam(&quot;username&quot;) String username, </div><div class=\"line\">\t@RequestParam(&quot;password&quot;) String password, </div><div class=\"line\">\t@RequestParam(&quot;url&quot;) String url) &#123;</div><div class=\"line\">\tResult result = new Result();</div><div class=\"line\">\ttry &#123;</div><div class=\"line\">\t\t// 这里写死验证条件，根据需要去验证</div><div class=\"line\">\t\tif (username.equals(&quot;zfs&quot;) &amp;&amp; password.equals(&quot;123456&quot;)) &#123;</div><div class=\"line\">\t\t\tMap&lt;String,Object&gt; param = new HashMap&lt;String,Object&gt;();</div><div class=\"line\">\t\t\t// 这些在创建consumers的application的时候会生成</div><div class=\"line\">\t\t\tparam.put(&quot;client_id&quot;, &quot;9b120e441c664526a179e64f5fae9d61&quot;);</div><div class=\"line\">\t\t\tparam.put(&quot;client_secret&quot;, &quot;f272ad1b876e48358062893300b14d37&quot;);</div><div class=\"line\">\t\t\t// 这个可以看这里https://tools.ietf.org/html/rfc6749#section-7.1</div><div class=\"line\">\t\t\tparam.put(&quot;grant_type&quot;, &quot;password&quot;);</div><div class=\"line\">\t\t\t// 这些在创建oauth2.0插件的时候生成</div><div class=\"line\">\t\t\tparam.put(&quot;scope&quot;, &quot;password&quot;);</div><div class=\"line\">\t\t\tparam.put(&quot;provision_key&quot;, &quot;function&quot;);</div><div class=\"line\">\t\t\t// 这些是自己的用户信息</div><div class=\"line\">\t\t\tparam.put(&quot;authenticated_userid&quot;, &quot;233&quot;);</div><div class=\"line\">\t\t\tparam.put(&quot;username&quot;, &quot;zfs&quot;);</div><div class=\"line\">\t\t\tparam.put(&quot;password&quot;, &quot;123456&quot;);</div><div class=\"line\">\t\t\t// 必须是post请求</div><div class=\"line\">\t\t\tString res = sendHttps(url, param);</div><div class=\"line\">\t\t\tresult.setSuccessResult(res);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; catch (Exception e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn result;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>验证服务器验证通过后发送请求到kong的OAuth2 接口，kong会下发token给请求的用户<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String sendHttps(String forwardUrl, Map&lt;String, Object&gt; param)</div><div class=\"line\">\t\t\tthrows Exception &#123;</div><div class=\"line\">\t// forwardUrl不能写死，要当成参数传进来，这个url是你要访问的api再加端点，如我这里要访问的是https://localhost:8443下的资源，所以这里url为https://localhost:8443/oauth2/token（kong提供了/oauth2/authorize和/oauth2/token两个，这里不是code模式，不需要/oauth2/authorize，这些都是需要用post访问的）</div><div class=\"line\">\tHttpURLConnection conn = null;</div><div class=\"line\"></div><div class=\"line\">\ttry &#123;</div><div class=\"line\">\t\t// 这里ssl要自己写，因为这是一个SSL版本问题。服务器只支持SSLv3，而Java将从v2开始，并尝试向上协商，但并非所有服务器都支持这种类型的协商。在网上找答案说使用SSLv3是目前唯一的解决方案，默认是TLS1，会报connect reast的错误，具体的tomcat对应关系见https://blogs.oracle.com/java-platform-group/diagnosing-tls,-ssl,-and-https，我这里是tomcat7，所以设置为TLSv1.2</div><div class=\"line\">\t\tSystem.setProperty(&quot;https.protocols&quot;, &quot;TLSv1.2&quot;);</div><div class=\"line\">\t\tSSLContext sc = SSLContext.getInstance(&quot;TLSv1.2&quot;);</div><div class=\"line\">\t\tsc.init(null, new TrustManager[] &#123; new MyX509TrustManager() &#125;,</div><div class=\"line\">\t\t\t\tnew java.security.SecureRandom());</div><div class=\"line\">\t\tURL url = new URL(forwardUrl);</div><div class=\"line\"></div><div class=\"line\">\t\tHttpsURLConnection https = (HttpsURLConnection) url</div><div class=\"line\">\t\t\t\t.openConnection();</div><div class=\"line\">\t\tif (url.getProtocol().toLowerCase().equals(&quot;https&quot;)) &#123;</div><div class=\"line\">\t\t\t// 这里信任所有证书</div><div class=\"line\">\t\t\thttps.setHostnameVerifier(new HostnameVerifier() &#123;</div><div class=\"line\">\t\t\t\t@Override</div><div class=\"line\">\t\t\t\tpublic boolean verify(String hostname, SSLSession session) &#123;</div><div class=\"line\">\t\t\t\t\treturn false;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;);</div><div class=\"line\">\t\t\tconn = https;</div><div class=\"line\">\t\t&#125; else &#123;</div><div class=\"line\">\t\t\tconn = (HttpURLConnection) url.openConnection();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t((HttpsURLConnection) conn).setSSLSocketFactory(sc</div><div class=\"line\">\t\t\t\t.getSocketFactory());</div><div class=\"line\">\t\t((HttpsURLConnection) conn)</div><div class=\"line\">\t\t\t\t.setHostnameVerifier(new TrustAnyHostnameVerifier());</div><div class=\"line\"></div><div class=\"line\">\t\t// 设置请求的参数</div><div class=\"line\">\t\tString post = &quot;&quot;;</div><div class=\"line\">\t\tif (null != param &amp;&amp; param.size() &gt; 0) &#123;</div><div class=\"line\">\t\t\tSet&lt;Entry&lt;String, Object&gt;&gt; entrys = param.entrySet();</div><div class=\"line\">\t\t\tfor (Entry&lt;String, Object&gt; entry : entrys) &#123;</div><div class=\"line\">\t\t\t\tString key = StringUtil.objToStr(entry.getKey());</div><div class=\"line\">\t\t\t\tString val = StringUtil.objToStr(entry.getValue());</div><div class=\"line\">\t\t\t\tpost += key + &quot;=&quot; + val + &quot;&amp;&quot;;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpost = post.substring(0, post.length() - 1);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\tconn.setRequestMethod(&quot;POST&quot;);// 提交模式</div><div class=\"line\">\t\t// 发送POST请求必须设置如下两行</div><div class=\"line\">\t\tconn.setDoOutput(true);</div><div class=\"line\">\t\tconn.setDoInput(true);</div><div class=\"line\">\t\t// 获取URLConnection对象对应的输出流</div><div class=\"line\">\t\tPrintWriter printWriter = new PrintWriter(conn.getOutputStream());</div><div class=\"line\">\t\t// 发送请求参数</div><div class=\"line\">\t\tprintWriter.write(post);// post的参数 xx=xx&amp;yy=yy</div><div class=\"line\">\t\t// flush输出流的缓冲</div><div class=\"line\">\t\tprintWriter.flush();</div><div class=\"line\">\t\tconn.connect();</div><div class=\"line\">\t\t// 开始获取数据</div><div class=\"line\">\t\tBufferedInputStream bis = new BufferedInputStream(</div><div class=\"line\">\t\t\t\tconn.getInputStream());</div><div class=\"line\">\t\tByteArrayOutputStream bos = new ByteArrayOutputStream();</div><div class=\"line\">\t\tint len;</div><div class=\"line\">\t\tbyte[] arr = new byte[1024];</div><div class=\"line\">\t\twhile ((len = bis.read(arr)) != -1) &#123;</div><div class=\"line\">\t\t\tbos.write(arr, 0, len);</div><div class=\"line\">\t\t\tbos.flush();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tbos.close();</div><div class=\"line\">\t\treturn bos.toString(&quot;utf-8&quot;);</div><div class=\"line\">\t&#125; catch (Exception e) &#123;</div><div class=\"line\">\t\tthrow e;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">private static class MyX509TrustManager implements X509TrustManager &#123;</div><div class=\"line\">\tpublic void checkClientTrusted(X509Certificate[] chain, String authType)</div><div class=\"line\">\t\t\tthrows CertificateException &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tpublic void checkServerTrusted(X509Certificate[] chain, String authType)</div><div class=\"line\">\t\t\tthrows CertificateException &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tpublic X509Certificate[] getAcceptedIssuers() &#123;</div><div class=\"line\">\t\treturn null;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">private static class TrustAnyHostnameVerifier implements HostnameVerifier &#123;</div><div class=\"line\">\tpublic boolean verify(String hostname, SSLSession session) &#123;</div><div class=\"line\">\t\treturn true;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>认证服务器写完，开始验证<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i https://localhost:8443/auth?username=zfs&amp;password=123456&amp;url=https://localhost:8443/oauth2/token</div></pre></td></tr></table></figure></p>\n<p>返回结果（这是我自己的json结构，即上面的Result）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&quot;data&quot;:&quot;&#123;\\&quot;refresh_token\\&quot;:\\&quot;673871402d0f45fe962be3b9fa2eb68a\\&quot;,\\&quot;token_type\\&quot;:\\&quot;bearer\\&quot;,\\&quot;access_token\\&quot;:\\&quot;924e79bd9fa941d08cc5b96fe8eba44b\\&quot;,\\&quot;expires_in\\&quot;:7200&#125;\\n&quot;,&quot;err&quot;:0,&quot;msg&quot;:&quot;操作成功！&quot;&#125;</div></pre></td></tr></table></figure></p>\n<p>拿到access_token之后就可以访问<a href=\"https://localhost:8443下的资源了，试一下\">https://localhost:8443下的资源了，试一下</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -k &apos;https://localhost:8443/test&apos; -H &apos;Authorization: Bearer 924e79bd9fa941d08cc5b96fe8eba44b&apos;</div></pre></td></tr></table></figure></p>\n<p>这样整个流程就走完了，其实这里因为用了虚拟机，传进去的url参数不是<a href=\"https://localhost:8443/oauth2/token，这个地址是不对的，因为在主机里访问虚拟机不能直接用localhost，而是得用ip+port，所以我传的是https://myip:8443/oauth2/token，这里就有一个问题了，证书绑的是域名，ip请求并不能被识别，所以再创了一个api，心好累\">https://localhost:8443/oauth2/token，这个地址是不对的，因为在主机里访问虚拟机不能直接用localhost，而是得用ip+port，所以我传的是https://myip:8443/oauth2/token，这里就有一个问题了，证书绑的是域名，ip请求并不能被识别，所以再创了一个api，心好累</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -i -X POST http://localhost:8001/apis \\</div><div class=\"line\">    -d &quot;name=zhuanfa&quot; \\</div><div class=\"line\">    -d &quot;upstream_url=https://localhost:8443/oauth2/token&quot; \\</div><div class=\"line\">    -d &quot;uris=/zhuanfa&quot;</div></pre></td></tr></table></figure></p>\n<p>所以验证的请求就会变成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -i https://localhost:8443/auth?username=zfs&amp;password=123456&amp;url=https://myip:8443/zhuanfa/oauth2/token</div></pre></td></tr></table></figure></p>\n"},{"title":"游泳攻略","date":"2017-06-10T07:23:51.000Z","_content":"# <center>游泳攻略</center>\n<img width=300 src=\"/image/swimming/主题.jpg\" />\n## 引言\n　游泳是一种全身性运动，素有“运动之王”的美称，可以避免常规运动可能造成的关节损伤，而且老少皆宜。益处多多，待我一一道来\n　\n**1、保护身体多处关节的健康** 游泳锻炼是克服水的阻力而不是克服重力， 肌肉和关节不易受伤在游泳时，在水的浮力和阻力的相互作用下，身体能够得到按摩，起到很好的保健作用。\n\n**2、能够能起到减肥的作用** 游泳一项全身的运动，因此，随着全身的运动，肌肉会松弛舒展，人体的脂肪消耗得更快（水温低，热量流失快），使得身体更加匀称、协调。\n\n**3、改善心血管系统的功能** 游泳时要克服水的阻力需要动用较多的能量，使心率加快，心输出量增大。坚持长期进行游泳锻炼，心脏体积呈运动性增大，心肌收缩有力，安静心率减慢，每搏输出量增加，血管壁增厚，弹性加大，心血管系统的效率得到提高。\n\n**4、改善体温调节机能** 由于水的温度一般低于气温，水的导热能力又比空气强数十倍，因此人在水中失散的热量远远快于在空气中。经常游泳能改善体温调节能力，从而更能够承受外界温度的变化。\n\n**5、调节内分泌** 游泳还能够起到改善内分泌失调的作用,让人减少焦虑、心态更为平和,皮肤也更加光滑美丽,这些都让女性在性生活中更有魅力，令心情放松。\n\n**6、塑造肌肉线条、增强肌肉力度、提高身体柔韧与协调** 游泳动作属于伸展运动，而且需要多肌肉群的协调，因此对于塑形和协调有很大的帮助。\n\n**7、改善脊椎问题** 游泳是公认对脊椎有好处的运动，个人觉得更多的是来自蛙泳的好处，蛙泳的时候，头一低一抬，增强后颈肌肉力量，改善驼背和颈椎病。胸椎有肋骨防护，一般很难出现问题，因为两侧有心脏肺等各种主要器官，一旦出现问题，即便是小错位都够受的，划船和蛙泳的划手动作都可以有效的加强胸椎的防护能力。\n\n**8、误区** 即便游泳有各种好处，但并不代表你可以随意的游，错误的动作可能带来严重的后果，详见**【常见问题与误区篇】**\n\n## 一、必备装备篇\n### （一）泳帽\n**作用** 希望在泳池游泳都能自觉戴泳帽，一方面保护自己的头发，也可以减少游泳阻力\n另一方面也防止脱发影响泳者发挥和泳池的过滤系统。\n\n**分类** 泳帽一般分为布帽、PU帽、胶帽。\n\n- **布帽** 防水性能差，和头的密合性差，佩戴较为舒适，不推荐；如果是一次性游泳的话布帽是首选，物美价廉，但是一般只有小区泳池可戴布帽，较为标准的泳池大都要求戴PU或胶帽。\n\n- **PU帽** 复合材料的泳帽，和头的密合性和防水性都是介于布帽和胶帽之间，舒适度一般。\n\n- **胶帽** 不透水，和头的密合性佳，佩戴有小小紧勒感，最大化的减小阻力，强烈推荐。\n\n**佩戴** 泳帽都有折痕，棱边对准眉心，从前往后戴；妹纸的话推荐第二种方法，把泳帽撑开，从后往前，尽量把头发都套住，同样是棱边要对准眉心，如果折痕在两边，无法形容，反正很丑。准确的来说泳帽要套住耳朵防止进水，但是太勒了，不推荐。\n<center><img width=300 src=\"/image/swimming/泳帽的戴法.jpg\" />\n（泳帽的正确戴法）</center>\n**选择** 最好选择跟泳装同色或近色，当然个性的花花绿绿也是可以的，赚足回头率。\n\n### （二）泳镜\n**作用** 避免眼睛接触池水后发炎或被感染，不过最主要的原因当然是看妹纸啦。\n\n**分类** 大致特征有大框、小框、镀膜、非镀膜。\n\n**选择**\n\n- 慎选全透明泳镜，看起来眼珠子都要突出来了，你喜欢的话我也拦不住。\n\n- 莫选大框泳镜，特别是潜水镜，相对来说防水性没有小框的好，而且不好看，略浮夸。\n\n<center><img width=300 src=\"/image/swimming/大框泳镜.jpg\" /></center>\n- 一定要买防雾的，特别是冬天。\n\n- 200度近视以下可以不买近视泳镜，200度以上的不用近视泳镜就是你的损失了，想想有个美女经过而你又看不清，可悲可叹。散光者，散光度数除以2，加上近视的度数，就是理想的泳镜度数。\n\n- 推荐小框泳镜，防水又专业。\n\n- 室内选浅色透明（室内较暗，用电镀看不太清）\n\n<center><img width=300 src=\"/image/swimming/透明泳镜.jpg\" /></center>\n- 室外选电镀（光线较强，可防紫外线，而且别人看不到你的眼睛，显得比较酷炫高冷，hehe~）。\n\n<center><img width=300 src=\"/image/swimming/电镀泳镜.jpg\" /></center>\n\n**保养**\n\n- 切忌用热水洗\n\n- 镜内莫洗\n\n- 戴久了要摘一下，防止局部缺氧对眼睛不好\n\n- 不管买的时候宣传的防雾功能多好，基本用几次就不防雾了，网上卖的防雾剂效果跟直接用洗洁精或者肥皂差不多。或者你也可以像专业选手一样，舔一舔。我试过，口感一般2333\n\n### （三）泳装\n- **泳裤** \n**分类** 泳裤的区分主要是长度，另外是材料（影响泳裤的寿命，然而不管什么材料，不要坐在泳池边，也不要用热水洗，泳裤表示心很累）。\n    \n     * **长度** 大致分为三角、平角、五分、到脚踝、连体、全覆盖。\n * 以前面料发展还不发达的时候，以减小阻力为目的尽量减少覆盖面积，所以大多选择低腰三角泳裤，目前的话这类泳裤在西方国家是带有“特定标签”的人使用的，除非你技术棒棒哒，否则还是不要引起误会了。\n * 推荐平角泳裤或五分裤，中规中矩，来看看泳届大佬的装备。\n<center><img width=300 src=\"/image/swimming/低边平角泳裤.jpg\" />（低边平角泳裤）</center>\n<center><img width=300 src=\"/image/swimming/普通平角泳裤.jpg\" />（普通平角泳裤）</center>\n<center><img width=300 src=\"/image/swimming/五分泳裤.jpg\" />（五分泳裤）</center>\n * 超过五分长的泳裤就不推荐了，由于泳装发展太快太牛逼，各种高科技泳装层出不穷，现在国际比赛已经规定比赛的时候泳裤只能到膝盖。\n\n- **泳衣**\n**分类** 这里主要针对妹纸来讲，泳衣大致可分为连体和衣裤分离\n     * 背交叉连体（推荐）\n<center><img width=300 src=\"/image/swimming/背交叉连体.jpg\" /></center>\n     * 较为时尚流行的背交叉连体（推荐）\n<center><img width=300 src=\"/image/swimming/时尚背交叉连体.jpg\" /></center>\n     * 三角连体（一般般）\n<center><img width=300 src=\"/image/swimming/三角连体.jpg\" /></center>\n     * 带小花边连体（泡水还可以，游的话兜水，而且大都是肩带型，不推荐。还不如穿比基尼2333）\n<center><img width=300 src=\"/image/swimming/花边泳衣.jpg\" /></center>\n     * 竞速泳衣（土豪与专业人士可选，相当的紧，上图的背交叉连体就是）\n\n     * 比基尼（男士福音，身材好的不管是认真游还是泡水都很好看，我喜欢2333）\n<center><img width=300 src=\"/image/swimming/比基尼.jpg\" /></center>\n\n**选择** 材料方面没什么研究，一般买贴身速干的就可以了，泡水群众可以买宽松的，专业的可以选择高压缩型的，看看傅爷这表情就知道高压缩型的有多紧了\n<center><img width=300 src=\"/image/swimming/傅爷表情.jpg\" /></center>\n\n### （四）物品寄放\n**一般分为以下几种**\n\n- 押金寄物（有些全退，像长隆那些记得是押50退20酱紫）\n\n- 投币寄物（一般是一个或两个硬币，坑爹的设计，感觉带钢镚不爽）\n\n- 自备锁（这种是最好也是最常见的）\n\n**锁的选择**\n\n- 带钥匙的（不推荐，为了防止钥匙掉落，普通手绳易坏，推荐钥匙手环，几毛钱）\n<center><img width=300 src=\"/image/swimming/钥匙手环.jpg\" /></center>\n- 密码锁（推荐，没有钥匙掉落的风险，也不会因为手环影响发挥，一般也就几块钱）\n\n## 二、辅助装备篇\n### （一）耳塞\n很少有人戴，而且容易掉水里，比赛都是泳帽直接盖住耳朵达到防水效果\n### （二）鼻夹\n不是花样游泳一般都不戴，虽说有防鼻子进水的效果，但是容易产生依赖，影响换气的学习。另外，汉子还是不要戴了，妹纸随便，感觉挺好看~\n### （三）背漂（泳圈同理）\n一般儿童用，不推荐。一样容易产生依赖，影响动作。推荐8字浮板，下面会讲到。\n### （四）打水浮板\n- 新手必备神器，一般是下图这种，一般用来练打腿\n<center><img width=300 src=\"/image/swimming/打水浮板.jpg\" /></center>\n- 墙裂推荐，理由是它可以像上面的浮板一样用来练打腿，也可以，夹在腿间让下半身浮起来，用来练手划水动作（不推荐背漂的原因）。\n<center><img width=300 src=\"/image/swimming/8字浮板.jpg\" /></center>\n\n### （五）跟屁虫/漂流包/潜浮包\n- 不管水性如何，野泳的时候一定要带，尊重自己与他人的生命。（不会游的最好不要野泳，这种也只是对会游的有基本的保障）\n- 常见的跟屁虫长这样，橙色有警醒作用，小的不能储物，大的可以放点东西，不过不能太多，基本满足。\n<center><img width=300 src=\"/image/swimming/小跟屁虫.jpg\" />（小跟屁虫）</center>\n<center><img width=300 src=\"/image/swimming/大跟屁虫.jpg\" />（大跟屁虫）</center>\n不过现在大都流行这种漂流包，比较好看，可以承受更大的重量，切记，表买单肩的\n<center><img width=300 src=\"/image/swimming/漂流包.jpg\" /></center>\n### （六）划水掌\n现在划水掌做得都很好看了，各式各样，自行选择\n\n**作用** 适用中高阶爬泳者，可以有效改正手臂划水的动作，增大划水面积，可以划得更快，最主要的还是为了手臂力量得到训练。不要过份依赖，戴久了会导致腿打水时转跨配合力度变小，不戴的时候协调性就变差了。\n\n**选择** 买跟手掌差不多大小的就行，不要买太大的，费力不说，还容易受伤。\n\n### （七）脚蹼\n\n**作用** 练蝶泳必备，可以让你更好的感受到身体的波动，纠正姿势，保持上下S型前进的动力。\n\n**选择** 买游泳型的就行，如图\n\n<center><img width=300 src=\"/image/swimming/游泳脚蹼.jpg\" /></center>\n不要买成下面这种潜水型的，不过这种用来练波动好像更好。\n\n<center><img width=300 src=\"/image/swimming/潜水脚蹼.jpg\" /></center>\n\n### （八）其它\n- 呼吸管（分游泳和潜水用，游泳的可以忽略呼吸专心练动作，不推荐。我主张先适应水先学会换气再学动作）\n\n- 阻力裤（原理是兜水，加重阻碍前进，用以力量训练）\n\n- 拉力筋（一头绑腰上，手拿着另一头，用以力量训练）\n\n## 三、沐浴装备篇\n**理由** 特别是泳池，大都加了混凝剂和一些含氯的消毒品，对头发跟皮肤有一定的伤害，所以游泳必备篇的装备防水性很重要。同时，沐浴用品也很重要，我一般洗完回去再洗都还有一点点漂白水的味道，想象以下如果游泳后就简单冲一下，等回去再洗，期间氯在你身上悠哉的进行化学反应，啧啧。\n\n**清单** \n\n- 洗发水\n\n- 护发素（可以游之前涂一点在泳帽内侧，厉害了2333）\n\n- 沐浴露\n\n- 毛巾/浴巾\n\n- 拖鞋\n\n- 吹风筒\n\n**选择** \n\n- 现在有去氯的沐浴用品，用后也没啥区别，心理作用。觉得普通的平时用的就行（不懂，保留意见）\n\n- 毛巾/浴巾必须有有木有，忘带的时候用衣服擦干，唉~都是泪。\n\n- 拖鞋不一定要，带的话会方便很多，洗完后脚湿的总不能直接穿鞋吧。\n\n- 有些游泳馆有吹风筒（少见），有些没有，妹纸有需要可以自带吹风筒，不过没啥必要，因为大多泳馆并没有插头。/无辜脸\n\n**分装瓶** 大大小小的瓶子带起来不方便咋办，放包里可能还会漏出来（说多都是泪），推荐这种分装瓶，最好买压嘴的，白色透明的话可以根据颜色分清是什么，不用像我一样贴标签，而且有个卡扣，不怕不小心压到，用起来比较方便，几毛钱一个，不过加上邮费就贵了。\n<center><img width=300 src=\"/image/swimming/分装瓶.jpg\" /></center>\n\n## 四、技术篇（视频学习较好）\n小生浅见，欢迎大佬斧正。\n\n**水性** 解释以下水性是什么，不是你游多快，会多少种游法，体力多好，耐力多好。而是指对水的适应程度，如果你泳镜突然掉了或者突然抽筋了，你就变得很紧张，那只能说你水性还不到家。这也是很多新手的问题，对水的恐惧感。\n\n**水感与呼吸** 不建议直接上来就是干，新手要先体验一下水感，可以在浅水区行走，感受水的波动，然后尝试向前、向侧、向后的走、跑、跳，。\n\n适应了之后练习呼吸，不管什么运动，呼吸都是重中之重，要领是出水口吸气，不要用鼻子，会呛水。入水口鼻吐气，重点在鼻吐气，一般很累很喘的时候才用到口吐气，入水的时候不要憋气，入水临界点的时候就开始吐气，不要吐尽，吐尽就会有憋的感觉，留一口气在出水的临界点吐掉，然后快速在吸一口，赛过活神仙。\n\n虽然我是主张先打好基础在练动作的，但是这种练习显得很枯燥，初学者会觉得很无聊，在现在快节奏的生活和快餐文化的氛围下，初学者学水感和呼吸的时候不会有丝毫成就感，容易厌倦。但是游前5分钟的练习和适应还是很有必要的（不论新手老手）\n\n**狗爬** 顾名思义就是像狗一样手脚扒水，大多数江湖海边玩大的基本都是狗爬，俺一开始也是，这是一种本能反应，3个月大的婴儿就开始有的踢踏反射动作，淹也淹不死，游也游不快，毕竟费力和low了点，学点比赛泳姿还是有必要的。\n<center><img width=300 src=\"/image/swimming/狗爬式.jpg\" /></center>\n\n**仰泳** 可用反蛙泳、反爬泳、反蝶泳法游，没专门练过，不发表意见，放个妹纸镇场。\n<center><img width=300 src=\"/image/swimming/蝶仰泳.jpg\" /></center>\n\n**蛙泳** 蛙泳分手和脚的练习，脚有三个动作：收、翻、蹬，手的动作也有三个：划水，收手，伸手。\n\n　**收** 双腿伸直，腿往胸口收（没那么夸张，形象一点而已），最多和身体呈90度\n<center><img width=300 src=\"/image/swimming/收腿.jpg\" /></center>\n　**翻** 重点动作，翻不过来是柔韧度不够，需要配合压筋练习。膝盖外翻，脚尖向外（这是重点），可以在陆上让人抓着脚练习，让肌肉记忆动作。\n<center><img width=300 src=\"/image/swimming/蛙泳翻腿.jpg\" /></center>\n<center><img width=300 src=\"/image/swimming/蛙泳抓腿.jpg\" /></center>\n　**蹬夹** 这里其实是两个动作，一个是向两侧蹬，一个是双腿并拢。必须连贯起来（画弧形，这是腿法精髓，前进动力在此）\n<center><img width=300 src=\"/image/swimming/蛙泳蹬夹.jpg\" /></center>\n　**划水** 划水分为外划和内划，外划的时候想象一下手往两边拨开一层水\n　\n<center><img width=300 src=\"/image/swimming/蛙泳外划.jpg\" /></center>\n　内划在外划的基础上，手弯曲角度大概120度\n　\n<center><img width=300 src=\"/image/swimming/蛙泳内划.jpg\" /></center>\n　**收手** 收手即为抱水，这是手部动作的精髓，在泳池里经常可以看到很多人划到腰间再收回来，这是错误的，我称之为养生蛙，不能笑（哈哈哈~），抱水应该在胸口进行抱水，看一下大佬的抱水动作，想象一下手里托着个宝贝\n　\n<center><img width=300 src=\"/image/swimming/蛙泳抱水.jpg\" /></center>\n　**伸手** 这个没什么讲的，就是从抱水后的一个前冲动作，要记住伸手之后才蹬腿\n　\n<center><img width=300 src=\"/image/swimming/蛙泳伸手蹬夹.jpg\" /></center>\n　**配合** 外划腿不动，内划慢收腿，收手后收腿，伸手快蹬夹，手脚伸直漂一会\n　\n**爬泳** 爬泳就是常说的自由泳，详见【常见问题篇】，也是分为手和腿的练习，大多数培训都是从蛙泳开始教起，个人认为蛙泳动作复杂，不适合初学，爬泳动作较为简单，容易产生前进力，初学者容易找到成就感，不会中途放弃，废话不多说，一般从打腿开始练习\n\n　**打腿第一阶段** 因为初学者腿部柔韧性不够，所以要拉筋拉筋拉筋，重要的事说三遍，一开始还比较僵硬，要点是膝盖和脚绷直（不要蹦死，易抽筋，放松，有点弯曲也可以接受），然后就上下小幅度的打水即可\n　\n　**打腿第二阶段**  腿像鞭子一样打水，大腿是手臂，小腿是棍子，棍子本身是不发力的，只有手臂发力才能发挥作用，爬泳打腿也是，要大腿带动小腿打水，如果感觉小腿弯曲后用力打水就是错误的（这就是第一阶段要膝盖绷直练的原因），另外，打水的时候内八，力学问题，不用刻意，基本都是很自然就内八的。\n　\n<center><img width=300 src=\"/image/swimming/爬泳腿法.jpg\" /></center>\n\n　**打腿第三阶段** 这是精髓，腿可以自然打水后，注意力放在髋部，上文说的大腿带动小腿，其实发力点是通过髋部的转动带动的，从侧面看比较好理解，这个时候腿相对于水平面来说不是上下打水，而是要做一个转动打水的动作。\n<center><img width=300 src=\"/image/swimming/爬泳转髋.jpg\" /></center>\n\n　**打腿第四阶段** 这里讲打腿频率，初学的时候都是死命的打，谁管你二次腿四次腿还是六次腿，最常见的就是六次腿（指的是左右手划动一次打腿的次数），很多人感觉爬泳很累，因为大多数人都是用六次甚至毫无规律的频率来打水的，六次腿只会在冲刺阶段用到，如果用这种频率在平时嬉戏中，不累才怪。四次腿比较少见，这里主要讲二次腿，长游必备。说白了真正掌握爬泳呼吸规律的时候可以很自然控制打腿频率。动作跟我们走路一样，一次手一次腿，不要顺拐喽（只要记住左手伸右腿打，右手伸左腿打就可以），看到【打腿第三阶段】那里的图没有，那个动作的下一步就是右手入水（伸），这时图中的左腿是在上方的，当右手伸的时候左腿就向下打腿，自行领悟。\n　\n　**手臂第一阶段** 手伸直做预备态，开始划水，手臂之间呈120度角度向后划水，练习的时候拇指擦着打腿经过把划水动作进行到底\n<center><img width=300 src=\"/image/swimming/爬泳划手.jpg\" /></center>\n<center><img width=300 src=\"/image/swimming/爬泳划水到底.jpg\" /></center>\n　**手臂第二阶段** 空中移臂，这是最精髓也是最容易出错的地方，切记，爬泳划水的任何时候，**肘的位置都是高于手的**，把意念都放在肘上，想象肘带着你的手在运动，有助于练习。最好回去看镜子练习，做不出动作的再说三遍压筋压筋压筋。下图分别为错误示范，柔韧度不够但是正确的移臂以及正确的移臂\n　\n<center><img width=300 src=\"/image/swimming/爬泳错误移臂.jpg\" />这种就是手高于肘，移臂很累又不好看</center>\n<center><img width=300 src=\"/image/swimming/爬泳柔韧性不够的移臂.jpg\" />这个动作是对的，只是柔韧性不够，手抬得太高了 </center>\n<center><img width=300 src=\"/image/swimming/爬泳正确移臂.jpg\" />正确的爬泳移臂</center>\n\n　**手臂第三阶段** 入水，角度如图，这里要讲一下两手的配合，在长游的时候，一只手完全入水后另一手才开始划水，只有比赛的时候为了速度，才需要在移臂准备入水的时候另一手开始划水。\n<center><img width=300 src=\"/image/swimming/爬泳手臂入手.jpg\" /></center>\n　**换气** 一般是划3次手换一次气，我体力不足，反正我基本10来分钟后就都是2次手换一次气（这里就要注意不要只一边换气了，详见【常见问题篇】），千万不要一次换一下，那是不可能的，看起来就是左边甩一下，右边甩一下，看着都费劲。\n　\n　换气的时机在于哪只手划水，就哪边换气，从开始划水到移臂结束为吸气阶段，入水开始吐气，看到没有，吸气的阶段很足，这就是爬泳适合长游的原因，速度快又不费劲。练习的时候，手开始划的时候下巴贴着锁骨，眼睛往斜后方看。正确的换气是只露出半个泳镜（如手臂第三阶段图），不用担心呛水，人前进的时候嘴边形成了真空地带，不用怕，做不到的整个脸都向上，也可以，像下面这种。\n\n<center><img width=300 src=\"/image/swimming/爬泳换气.jpg\" /></center>\n\n**蝶泳**  终于讲到我最喜欢的了，蝶泳在实际游泳中并没有太大的作用。但作为一种运动项目，最主要的意义还是在于锻炼，爆发力强，对身体协调能力要求高。所以短时间内力量需求和热量消耗更大。对上肢肌肉锻炼效果明显。还有一个最最重要的理由，蝶泳可以装逼，无限美感，清场必备。咳咳，下面开始入门\n\n　**蝶泳腿第一阶段** 也叫海豚腿，任何泳姿比赛起跳的时候都会采用蝶泳腿，为什么，快。\n　陆上练习：看过钢管舞的身体波动没有（搜舞蹈wave），对着镜子练，我觉得我一个汉子练这个也还看得下去2333，建议练全身，港真，实际只要练腿也可以啦。如图，先顶跨，然后膝盖弯曲，屁股后翘，不要直接站直，膝盖往回收，画个弧度回归\n<center><img width=300 src=\"/image/swimming/海豚泳陆地练习.jpg\" /></center>\n　水里练习：最好戴个脚蹼，可以感受身体的波动，练习的时候压胸产生前进动力，后半身随波逐流，屁股稍微抬一下露出水面，这个阶段会有点久，一开始会一直往水下潜，慢慢习惯就可以了。\n\n<center><img width=300 src=\"/image/swimming/海豚腿水中练习.jpg\" /></center>\n\n　**蝶泳腿第二阶段** 当可以很自然的作出海豚腿的动作的时候，你会发现，游不快，这个时候意念就不要放在压胸上了，用力甩动你的腰，你会飞快的前进，这里小小练习一下就能进阶了。\n　\n　**手臂练习** 蝶泳手臂跟爬泳完全一样，可以在陆地先单手练，然后双手练。\n　\n　**单手蝶** 单手蝶的练习是很有必要的，蝶泳的时候累了可以用单手蝶过度一下。单手蝶不需要像双手蝶那样配合，像爬泳一样，一只手划水，然后用海豚泳的腿法打水1-3下都可以。\n　\n　**蛙腿蝶手/蝶腿蛙手** 主要为了游的时候着重练习蝶手或蝶腿，体会手脚配合的节奏。\n　\n　**配合（难点）** 重中之重的部分，文字比较难表达，建议看慢蝶的视频，容易看出端倪。这里分别讲手跟腿的时机。全身伸直做预备状态，开始抱水划水，腰微塌下去，脚自然就上来了，如图\n\n<center><img width=300 src=\"/image/swimming/蝶泳第二次打腿预备.jpg\" /></center>\n接下来是第一次打腿也是最重要的一次，重点发力，带动身体出水，吸气，要感觉身体是贴着水面的前进的，不要为了吸气成直力型。如图，看出水角度\n\n<center><img width=300 src=\"/image/swimming/蝶泳第二次打腿.jpg\" /></center>\n接下来空中移臂的过程很快结束，手入水，两手入水姿势同爬泳，注意间隔差不多与肩同宽，不用特别在意，手入水的瞬间还没入水，迅速做第二次打腿，这次力道可以小一点，这个时候手刚好入水，用抬腰（有一种把屁股网上甩的感觉），为下一次打腿做准备。\n\n<center><img width=300 src=\"/image/swimming/蝶泳第一次打腿.jpg\" /></center>\n<center><img width=300 src=\"/image/swimming/蝶泳第一次打腿1.jpg\" /></center>\n\n　**换气** 蝶泳的换气跟蛙泳有异曲同工之妙，划水的时候出水吸气，手出水的时候低头吐气。\n　\n　**暴力蝶与慢蝶** 两者的区别是暴力蝶在于速度，而慢蝶适合长游。上文讲的都是暴蝶，而慢蝶慢在滑行，就是腰发力的时候，还有一个显著的地方，就如上文第二次打腿的时候，本来应该手还没入水就开始迅速打腿，而慢蝶恰恰是等入水后再悠哉悠哉的打一下腿，再滑行一下，除了抱水跟打腿都要迅速，其它整体节奏放慢。\n　\n　**注意** 蝶泳需要很高的协调力，即便慢蝶也需要很好的体力和耐力，否则蝶个100米就累了，这\n里讲累的时候出现的问题，因为身体腰腹力量是短板，其它肌肉还有余力的时候，腰已经没力，这种时候很容易不自觉的切换成小腿打水，这是常见现象，我也是这样玩得不亦乐乎的。不过建议动作变\n形就不要继续了。\n\n**转身与跳水** 只做出摸墙转身和爬泳的背泳翻滚转身动作，不标准，没专门学过就不发表意见了。\n\n## 五、常见问题篇\n- 游泳会使肌肉线条拉长，在于塑形，并不能练出大块肌肉，器械健身在于紧实肌肉，如果两者配合简直无敌。\n- 学游泳不止水里要练，陆地练习也很重要，可以看着镜子，模拟水中动作，看看自己是否动作变形，多练习，让肌肉记忆动作。\n- 有些人动作永远做不好，是身体柔韧性不够，需要配合陆地的压筋联系。\n- 其它泳姿动作错误会影响游泳速度，但是要特别注意爬泳和单手蝶，在泳池可以看到很多人游着游着就游偏了，而且只能单边换气，这是因为双手双脚力量不对等导致的，出现这种情况一定要着重练某一边的力量。如果爬泳做不到三划一换气，可以半场一边换气，下半场换另一半换气。单手蝶同理。如果不注意的话，可能造成严重后果，两边肌肉不平衡反而对脊椎不好。\n- 一个常识误区，自由泳的意思是你可以用任何泳姿游，只是在比赛的时候由于爬泳速度最快，所以自由泳都采取爬泳的姿势。so，记住就好，不要闹笑话。\n- 腰不好不要蝶泳，好好静养吧。","source":"_posts/游泳攻略.md","raw":"---\ntitle: 游泳攻略\ndate: 2017-06-10 15:23:51\ncategories: [Swimming]\ntags: [Swimming]\n---\n# <center>游泳攻略</center>\n<img width=300 src=\"/image/swimming/主题.jpg\" />\n## 引言\n　游泳是一种全身性运动，素有“运动之王”的美称，可以避免常规运动可能造成的关节损伤，而且老少皆宜。益处多多，待我一一道来\n　\n**1、保护身体多处关节的健康** 游泳锻炼是克服水的阻力而不是克服重力， 肌肉和关节不易受伤在游泳时，在水的浮力和阻力的相互作用下，身体能够得到按摩，起到很好的保健作用。\n\n**2、能够能起到减肥的作用** 游泳一项全身的运动，因此，随着全身的运动，肌肉会松弛舒展，人体的脂肪消耗得更快（水温低，热量流失快），使得身体更加匀称、协调。\n\n**3、改善心血管系统的功能** 游泳时要克服水的阻力需要动用较多的能量，使心率加快，心输出量增大。坚持长期进行游泳锻炼，心脏体积呈运动性增大，心肌收缩有力，安静心率减慢，每搏输出量增加，血管壁增厚，弹性加大，心血管系统的效率得到提高。\n\n**4、改善体温调节机能** 由于水的温度一般低于气温，水的导热能力又比空气强数十倍，因此人在水中失散的热量远远快于在空气中。经常游泳能改善体温调节能力，从而更能够承受外界温度的变化。\n\n**5、调节内分泌** 游泳还能够起到改善内分泌失调的作用,让人减少焦虑、心态更为平和,皮肤也更加光滑美丽,这些都让女性在性生活中更有魅力，令心情放松。\n\n**6、塑造肌肉线条、增强肌肉力度、提高身体柔韧与协调** 游泳动作属于伸展运动，而且需要多肌肉群的协调，因此对于塑形和协调有很大的帮助。\n\n**7、改善脊椎问题** 游泳是公认对脊椎有好处的运动，个人觉得更多的是来自蛙泳的好处，蛙泳的时候，头一低一抬，增强后颈肌肉力量，改善驼背和颈椎病。胸椎有肋骨防护，一般很难出现问题，因为两侧有心脏肺等各种主要器官，一旦出现问题，即便是小错位都够受的，划船和蛙泳的划手动作都可以有效的加强胸椎的防护能力。\n\n**8、误区** 即便游泳有各种好处，但并不代表你可以随意的游，错误的动作可能带来严重的后果，详见**【常见问题与误区篇】**\n\n## 一、必备装备篇\n### （一）泳帽\n**作用** 希望在泳池游泳都能自觉戴泳帽，一方面保护自己的头发，也可以减少游泳阻力\n另一方面也防止脱发影响泳者发挥和泳池的过滤系统。\n\n**分类** 泳帽一般分为布帽、PU帽、胶帽。\n\n- **布帽** 防水性能差，和头的密合性差，佩戴较为舒适，不推荐；如果是一次性游泳的话布帽是首选，物美价廉，但是一般只有小区泳池可戴布帽，较为标准的泳池大都要求戴PU或胶帽。\n\n- **PU帽** 复合材料的泳帽，和头的密合性和防水性都是介于布帽和胶帽之间，舒适度一般。\n\n- **胶帽** 不透水，和头的密合性佳，佩戴有小小紧勒感，最大化的减小阻力，强烈推荐。\n\n**佩戴** 泳帽都有折痕，棱边对准眉心，从前往后戴；妹纸的话推荐第二种方法，把泳帽撑开，从后往前，尽量把头发都套住，同样是棱边要对准眉心，如果折痕在两边，无法形容，反正很丑。准确的来说泳帽要套住耳朵防止进水，但是太勒了，不推荐。\n<center><img width=300 src=\"/image/swimming/泳帽的戴法.jpg\" />\n（泳帽的正确戴法）</center>\n**选择** 最好选择跟泳装同色或近色，当然个性的花花绿绿也是可以的，赚足回头率。\n\n### （二）泳镜\n**作用** 避免眼睛接触池水后发炎或被感染，不过最主要的原因当然是看妹纸啦。\n\n**分类** 大致特征有大框、小框、镀膜、非镀膜。\n\n**选择**\n\n- 慎选全透明泳镜，看起来眼珠子都要突出来了，你喜欢的话我也拦不住。\n\n- 莫选大框泳镜，特别是潜水镜，相对来说防水性没有小框的好，而且不好看，略浮夸。\n\n<center><img width=300 src=\"/image/swimming/大框泳镜.jpg\" /></center>\n- 一定要买防雾的，特别是冬天。\n\n- 200度近视以下可以不买近视泳镜，200度以上的不用近视泳镜就是你的损失了，想想有个美女经过而你又看不清，可悲可叹。散光者，散光度数除以2，加上近视的度数，就是理想的泳镜度数。\n\n- 推荐小框泳镜，防水又专业。\n\n- 室内选浅色透明（室内较暗，用电镀看不太清）\n\n<center><img width=300 src=\"/image/swimming/透明泳镜.jpg\" /></center>\n- 室外选电镀（光线较强，可防紫外线，而且别人看不到你的眼睛，显得比较酷炫高冷，hehe~）。\n\n<center><img width=300 src=\"/image/swimming/电镀泳镜.jpg\" /></center>\n\n**保养**\n\n- 切忌用热水洗\n\n- 镜内莫洗\n\n- 戴久了要摘一下，防止局部缺氧对眼睛不好\n\n- 不管买的时候宣传的防雾功能多好，基本用几次就不防雾了，网上卖的防雾剂效果跟直接用洗洁精或者肥皂差不多。或者你也可以像专业选手一样，舔一舔。我试过，口感一般2333\n\n### （三）泳装\n- **泳裤** \n**分类** 泳裤的区分主要是长度，另外是材料（影响泳裤的寿命，然而不管什么材料，不要坐在泳池边，也不要用热水洗，泳裤表示心很累）。\n    \n     * **长度** 大致分为三角、平角、五分、到脚踝、连体、全覆盖。\n * 以前面料发展还不发达的时候，以减小阻力为目的尽量减少覆盖面积，所以大多选择低腰三角泳裤，目前的话这类泳裤在西方国家是带有“特定标签”的人使用的，除非你技术棒棒哒，否则还是不要引起误会了。\n * 推荐平角泳裤或五分裤，中规中矩，来看看泳届大佬的装备。\n<center><img width=300 src=\"/image/swimming/低边平角泳裤.jpg\" />（低边平角泳裤）</center>\n<center><img width=300 src=\"/image/swimming/普通平角泳裤.jpg\" />（普通平角泳裤）</center>\n<center><img width=300 src=\"/image/swimming/五分泳裤.jpg\" />（五分泳裤）</center>\n * 超过五分长的泳裤就不推荐了，由于泳装发展太快太牛逼，各种高科技泳装层出不穷，现在国际比赛已经规定比赛的时候泳裤只能到膝盖。\n\n- **泳衣**\n**分类** 这里主要针对妹纸来讲，泳衣大致可分为连体和衣裤分离\n     * 背交叉连体（推荐）\n<center><img width=300 src=\"/image/swimming/背交叉连体.jpg\" /></center>\n     * 较为时尚流行的背交叉连体（推荐）\n<center><img width=300 src=\"/image/swimming/时尚背交叉连体.jpg\" /></center>\n     * 三角连体（一般般）\n<center><img width=300 src=\"/image/swimming/三角连体.jpg\" /></center>\n     * 带小花边连体（泡水还可以，游的话兜水，而且大都是肩带型，不推荐。还不如穿比基尼2333）\n<center><img width=300 src=\"/image/swimming/花边泳衣.jpg\" /></center>\n     * 竞速泳衣（土豪与专业人士可选，相当的紧，上图的背交叉连体就是）\n\n     * 比基尼（男士福音，身材好的不管是认真游还是泡水都很好看，我喜欢2333）\n<center><img width=300 src=\"/image/swimming/比基尼.jpg\" /></center>\n\n**选择** 材料方面没什么研究，一般买贴身速干的就可以了，泡水群众可以买宽松的，专业的可以选择高压缩型的，看看傅爷这表情就知道高压缩型的有多紧了\n<center><img width=300 src=\"/image/swimming/傅爷表情.jpg\" /></center>\n\n### （四）物品寄放\n**一般分为以下几种**\n\n- 押金寄物（有些全退，像长隆那些记得是押50退20酱紫）\n\n- 投币寄物（一般是一个或两个硬币，坑爹的设计，感觉带钢镚不爽）\n\n- 自备锁（这种是最好也是最常见的）\n\n**锁的选择**\n\n- 带钥匙的（不推荐，为了防止钥匙掉落，普通手绳易坏，推荐钥匙手环，几毛钱）\n<center><img width=300 src=\"/image/swimming/钥匙手环.jpg\" /></center>\n- 密码锁（推荐，没有钥匙掉落的风险，也不会因为手环影响发挥，一般也就几块钱）\n\n## 二、辅助装备篇\n### （一）耳塞\n很少有人戴，而且容易掉水里，比赛都是泳帽直接盖住耳朵达到防水效果\n### （二）鼻夹\n不是花样游泳一般都不戴，虽说有防鼻子进水的效果，但是容易产生依赖，影响换气的学习。另外，汉子还是不要戴了，妹纸随便，感觉挺好看~\n### （三）背漂（泳圈同理）\n一般儿童用，不推荐。一样容易产生依赖，影响动作。推荐8字浮板，下面会讲到。\n### （四）打水浮板\n- 新手必备神器，一般是下图这种，一般用来练打腿\n<center><img width=300 src=\"/image/swimming/打水浮板.jpg\" /></center>\n- 墙裂推荐，理由是它可以像上面的浮板一样用来练打腿，也可以，夹在腿间让下半身浮起来，用来练手划水动作（不推荐背漂的原因）。\n<center><img width=300 src=\"/image/swimming/8字浮板.jpg\" /></center>\n\n### （五）跟屁虫/漂流包/潜浮包\n- 不管水性如何，野泳的时候一定要带，尊重自己与他人的生命。（不会游的最好不要野泳，这种也只是对会游的有基本的保障）\n- 常见的跟屁虫长这样，橙色有警醒作用，小的不能储物，大的可以放点东西，不过不能太多，基本满足。\n<center><img width=300 src=\"/image/swimming/小跟屁虫.jpg\" />（小跟屁虫）</center>\n<center><img width=300 src=\"/image/swimming/大跟屁虫.jpg\" />（大跟屁虫）</center>\n不过现在大都流行这种漂流包，比较好看，可以承受更大的重量，切记，表买单肩的\n<center><img width=300 src=\"/image/swimming/漂流包.jpg\" /></center>\n### （六）划水掌\n现在划水掌做得都很好看了，各式各样，自行选择\n\n**作用** 适用中高阶爬泳者，可以有效改正手臂划水的动作，增大划水面积，可以划得更快，最主要的还是为了手臂力量得到训练。不要过份依赖，戴久了会导致腿打水时转跨配合力度变小，不戴的时候协调性就变差了。\n\n**选择** 买跟手掌差不多大小的就行，不要买太大的，费力不说，还容易受伤。\n\n### （七）脚蹼\n\n**作用** 练蝶泳必备，可以让你更好的感受到身体的波动，纠正姿势，保持上下S型前进的动力。\n\n**选择** 买游泳型的就行，如图\n\n<center><img width=300 src=\"/image/swimming/游泳脚蹼.jpg\" /></center>\n不要买成下面这种潜水型的，不过这种用来练波动好像更好。\n\n<center><img width=300 src=\"/image/swimming/潜水脚蹼.jpg\" /></center>\n\n### （八）其它\n- 呼吸管（分游泳和潜水用，游泳的可以忽略呼吸专心练动作，不推荐。我主张先适应水先学会换气再学动作）\n\n- 阻力裤（原理是兜水，加重阻碍前进，用以力量训练）\n\n- 拉力筋（一头绑腰上，手拿着另一头，用以力量训练）\n\n## 三、沐浴装备篇\n**理由** 特别是泳池，大都加了混凝剂和一些含氯的消毒品，对头发跟皮肤有一定的伤害，所以游泳必备篇的装备防水性很重要。同时，沐浴用品也很重要，我一般洗完回去再洗都还有一点点漂白水的味道，想象以下如果游泳后就简单冲一下，等回去再洗，期间氯在你身上悠哉的进行化学反应，啧啧。\n\n**清单** \n\n- 洗发水\n\n- 护发素（可以游之前涂一点在泳帽内侧，厉害了2333）\n\n- 沐浴露\n\n- 毛巾/浴巾\n\n- 拖鞋\n\n- 吹风筒\n\n**选择** \n\n- 现在有去氯的沐浴用品，用后也没啥区别，心理作用。觉得普通的平时用的就行（不懂，保留意见）\n\n- 毛巾/浴巾必须有有木有，忘带的时候用衣服擦干，唉~都是泪。\n\n- 拖鞋不一定要，带的话会方便很多，洗完后脚湿的总不能直接穿鞋吧。\n\n- 有些游泳馆有吹风筒（少见），有些没有，妹纸有需要可以自带吹风筒，不过没啥必要，因为大多泳馆并没有插头。/无辜脸\n\n**分装瓶** 大大小小的瓶子带起来不方便咋办，放包里可能还会漏出来（说多都是泪），推荐这种分装瓶，最好买压嘴的，白色透明的话可以根据颜色分清是什么，不用像我一样贴标签，而且有个卡扣，不怕不小心压到，用起来比较方便，几毛钱一个，不过加上邮费就贵了。\n<center><img width=300 src=\"/image/swimming/分装瓶.jpg\" /></center>\n\n## 四、技术篇（视频学习较好）\n小生浅见，欢迎大佬斧正。\n\n**水性** 解释以下水性是什么，不是你游多快，会多少种游法，体力多好，耐力多好。而是指对水的适应程度，如果你泳镜突然掉了或者突然抽筋了，你就变得很紧张，那只能说你水性还不到家。这也是很多新手的问题，对水的恐惧感。\n\n**水感与呼吸** 不建议直接上来就是干，新手要先体验一下水感，可以在浅水区行走，感受水的波动，然后尝试向前、向侧、向后的走、跑、跳，。\n\n适应了之后练习呼吸，不管什么运动，呼吸都是重中之重，要领是出水口吸气，不要用鼻子，会呛水。入水口鼻吐气，重点在鼻吐气，一般很累很喘的时候才用到口吐气，入水的时候不要憋气，入水临界点的时候就开始吐气，不要吐尽，吐尽就会有憋的感觉，留一口气在出水的临界点吐掉，然后快速在吸一口，赛过活神仙。\n\n虽然我是主张先打好基础在练动作的，但是这种练习显得很枯燥，初学者会觉得很无聊，在现在快节奏的生活和快餐文化的氛围下，初学者学水感和呼吸的时候不会有丝毫成就感，容易厌倦。但是游前5分钟的练习和适应还是很有必要的（不论新手老手）\n\n**狗爬** 顾名思义就是像狗一样手脚扒水，大多数江湖海边玩大的基本都是狗爬，俺一开始也是，这是一种本能反应，3个月大的婴儿就开始有的踢踏反射动作，淹也淹不死，游也游不快，毕竟费力和low了点，学点比赛泳姿还是有必要的。\n<center><img width=300 src=\"/image/swimming/狗爬式.jpg\" /></center>\n\n**仰泳** 可用反蛙泳、反爬泳、反蝶泳法游，没专门练过，不发表意见，放个妹纸镇场。\n<center><img width=300 src=\"/image/swimming/蝶仰泳.jpg\" /></center>\n\n**蛙泳** 蛙泳分手和脚的练习，脚有三个动作：收、翻、蹬，手的动作也有三个：划水，收手，伸手。\n\n　**收** 双腿伸直，腿往胸口收（没那么夸张，形象一点而已），最多和身体呈90度\n<center><img width=300 src=\"/image/swimming/收腿.jpg\" /></center>\n　**翻** 重点动作，翻不过来是柔韧度不够，需要配合压筋练习。膝盖外翻，脚尖向外（这是重点），可以在陆上让人抓着脚练习，让肌肉记忆动作。\n<center><img width=300 src=\"/image/swimming/蛙泳翻腿.jpg\" /></center>\n<center><img width=300 src=\"/image/swimming/蛙泳抓腿.jpg\" /></center>\n　**蹬夹** 这里其实是两个动作，一个是向两侧蹬，一个是双腿并拢。必须连贯起来（画弧形，这是腿法精髓，前进动力在此）\n<center><img width=300 src=\"/image/swimming/蛙泳蹬夹.jpg\" /></center>\n　**划水** 划水分为外划和内划，外划的时候想象一下手往两边拨开一层水\n　\n<center><img width=300 src=\"/image/swimming/蛙泳外划.jpg\" /></center>\n　内划在外划的基础上，手弯曲角度大概120度\n　\n<center><img width=300 src=\"/image/swimming/蛙泳内划.jpg\" /></center>\n　**收手** 收手即为抱水，这是手部动作的精髓，在泳池里经常可以看到很多人划到腰间再收回来，这是错误的，我称之为养生蛙，不能笑（哈哈哈~），抱水应该在胸口进行抱水，看一下大佬的抱水动作，想象一下手里托着个宝贝\n　\n<center><img width=300 src=\"/image/swimming/蛙泳抱水.jpg\" /></center>\n　**伸手** 这个没什么讲的，就是从抱水后的一个前冲动作，要记住伸手之后才蹬腿\n　\n<center><img width=300 src=\"/image/swimming/蛙泳伸手蹬夹.jpg\" /></center>\n　**配合** 外划腿不动，内划慢收腿，收手后收腿，伸手快蹬夹，手脚伸直漂一会\n　\n**爬泳** 爬泳就是常说的自由泳，详见【常见问题篇】，也是分为手和腿的练习，大多数培训都是从蛙泳开始教起，个人认为蛙泳动作复杂，不适合初学，爬泳动作较为简单，容易产生前进力，初学者容易找到成就感，不会中途放弃，废话不多说，一般从打腿开始练习\n\n　**打腿第一阶段** 因为初学者腿部柔韧性不够，所以要拉筋拉筋拉筋，重要的事说三遍，一开始还比较僵硬，要点是膝盖和脚绷直（不要蹦死，易抽筋，放松，有点弯曲也可以接受），然后就上下小幅度的打水即可\n　\n　**打腿第二阶段**  腿像鞭子一样打水，大腿是手臂，小腿是棍子，棍子本身是不发力的，只有手臂发力才能发挥作用，爬泳打腿也是，要大腿带动小腿打水，如果感觉小腿弯曲后用力打水就是错误的（这就是第一阶段要膝盖绷直练的原因），另外，打水的时候内八，力学问题，不用刻意，基本都是很自然就内八的。\n　\n<center><img width=300 src=\"/image/swimming/爬泳腿法.jpg\" /></center>\n\n　**打腿第三阶段** 这是精髓，腿可以自然打水后，注意力放在髋部，上文说的大腿带动小腿，其实发力点是通过髋部的转动带动的，从侧面看比较好理解，这个时候腿相对于水平面来说不是上下打水，而是要做一个转动打水的动作。\n<center><img width=300 src=\"/image/swimming/爬泳转髋.jpg\" /></center>\n\n　**打腿第四阶段** 这里讲打腿频率，初学的时候都是死命的打，谁管你二次腿四次腿还是六次腿，最常见的就是六次腿（指的是左右手划动一次打腿的次数），很多人感觉爬泳很累，因为大多数人都是用六次甚至毫无规律的频率来打水的，六次腿只会在冲刺阶段用到，如果用这种频率在平时嬉戏中，不累才怪。四次腿比较少见，这里主要讲二次腿，长游必备。说白了真正掌握爬泳呼吸规律的时候可以很自然控制打腿频率。动作跟我们走路一样，一次手一次腿，不要顺拐喽（只要记住左手伸右腿打，右手伸左腿打就可以），看到【打腿第三阶段】那里的图没有，那个动作的下一步就是右手入水（伸），这时图中的左腿是在上方的，当右手伸的时候左腿就向下打腿，自行领悟。\n　\n　**手臂第一阶段** 手伸直做预备态，开始划水，手臂之间呈120度角度向后划水，练习的时候拇指擦着打腿经过把划水动作进行到底\n<center><img width=300 src=\"/image/swimming/爬泳划手.jpg\" /></center>\n<center><img width=300 src=\"/image/swimming/爬泳划水到底.jpg\" /></center>\n　**手臂第二阶段** 空中移臂，这是最精髓也是最容易出错的地方，切记，爬泳划水的任何时候，**肘的位置都是高于手的**，把意念都放在肘上，想象肘带着你的手在运动，有助于练习。最好回去看镜子练习，做不出动作的再说三遍压筋压筋压筋。下图分别为错误示范，柔韧度不够但是正确的移臂以及正确的移臂\n　\n<center><img width=300 src=\"/image/swimming/爬泳错误移臂.jpg\" />这种就是手高于肘，移臂很累又不好看</center>\n<center><img width=300 src=\"/image/swimming/爬泳柔韧性不够的移臂.jpg\" />这个动作是对的，只是柔韧性不够，手抬得太高了 </center>\n<center><img width=300 src=\"/image/swimming/爬泳正确移臂.jpg\" />正确的爬泳移臂</center>\n\n　**手臂第三阶段** 入水，角度如图，这里要讲一下两手的配合，在长游的时候，一只手完全入水后另一手才开始划水，只有比赛的时候为了速度，才需要在移臂准备入水的时候另一手开始划水。\n<center><img width=300 src=\"/image/swimming/爬泳手臂入手.jpg\" /></center>\n　**换气** 一般是划3次手换一次气，我体力不足，反正我基本10来分钟后就都是2次手换一次气（这里就要注意不要只一边换气了，详见【常见问题篇】），千万不要一次换一下，那是不可能的，看起来就是左边甩一下，右边甩一下，看着都费劲。\n　\n　换气的时机在于哪只手划水，就哪边换气，从开始划水到移臂结束为吸气阶段，入水开始吐气，看到没有，吸气的阶段很足，这就是爬泳适合长游的原因，速度快又不费劲。练习的时候，手开始划的时候下巴贴着锁骨，眼睛往斜后方看。正确的换气是只露出半个泳镜（如手臂第三阶段图），不用担心呛水，人前进的时候嘴边形成了真空地带，不用怕，做不到的整个脸都向上，也可以，像下面这种。\n\n<center><img width=300 src=\"/image/swimming/爬泳换气.jpg\" /></center>\n\n**蝶泳**  终于讲到我最喜欢的了，蝶泳在实际游泳中并没有太大的作用。但作为一种运动项目，最主要的意义还是在于锻炼，爆发力强，对身体协调能力要求高。所以短时间内力量需求和热量消耗更大。对上肢肌肉锻炼效果明显。还有一个最最重要的理由，蝶泳可以装逼，无限美感，清场必备。咳咳，下面开始入门\n\n　**蝶泳腿第一阶段** 也叫海豚腿，任何泳姿比赛起跳的时候都会采用蝶泳腿，为什么，快。\n　陆上练习：看过钢管舞的身体波动没有（搜舞蹈wave），对着镜子练，我觉得我一个汉子练这个也还看得下去2333，建议练全身，港真，实际只要练腿也可以啦。如图，先顶跨，然后膝盖弯曲，屁股后翘，不要直接站直，膝盖往回收，画个弧度回归\n<center><img width=300 src=\"/image/swimming/海豚泳陆地练习.jpg\" /></center>\n　水里练习：最好戴个脚蹼，可以感受身体的波动，练习的时候压胸产生前进动力，后半身随波逐流，屁股稍微抬一下露出水面，这个阶段会有点久，一开始会一直往水下潜，慢慢习惯就可以了。\n\n<center><img width=300 src=\"/image/swimming/海豚腿水中练习.jpg\" /></center>\n\n　**蝶泳腿第二阶段** 当可以很自然的作出海豚腿的动作的时候，你会发现，游不快，这个时候意念就不要放在压胸上了，用力甩动你的腰，你会飞快的前进，这里小小练习一下就能进阶了。\n　\n　**手臂练习** 蝶泳手臂跟爬泳完全一样，可以在陆地先单手练，然后双手练。\n　\n　**单手蝶** 单手蝶的练习是很有必要的，蝶泳的时候累了可以用单手蝶过度一下。单手蝶不需要像双手蝶那样配合，像爬泳一样，一只手划水，然后用海豚泳的腿法打水1-3下都可以。\n　\n　**蛙腿蝶手/蝶腿蛙手** 主要为了游的时候着重练习蝶手或蝶腿，体会手脚配合的节奏。\n　\n　**配合（难点）** 重中之重的部分，文字比较难表达，建议看慢蝶的视频，容易看出端倪。这里分别讲手跟腿的时机。全身伸直做预备状态，开始抱水划水，腰微塌下去，脚自然就上来了，如图\n\n<center><img width=300 src=\"/image/swimming/蝶泳第二次打腿预备.jpg\" /></center>\n接下来是第一次打腿也是最重要的一次，重点发力，带动身体出水，吸气，要感觉身体是贴着水面的前进的，不要为了吸气成直力型。如图，看出水角度\n\n<center><img width=300 src=\"/image/swimming/蝶泳第二次打腿.jpg\" /></center>\n接下来空中移臂的过程很快结束，手入水，两手入水姿势同爬泳，注意间隔差不多与肩同宽，不用特别在意，手入水的瞬间还没入水，迅速做第二次打腿，这次力道可以小一点，这个时候手刚好入水，用抬腰（有一种把屁股网上甩的感觉），为下一次打腿做准备。\n\n<center><img width=300 src=\"/image/swimming/蝶泳第一次打腿.jpg\" /></center>\n<center><img width=300 src=\"/image/swimming/蝶泳第一次打腿1.jpg\" /></center>\n\n　**换气** 蝶泳的换气跟蛙泳有异曲同工之妙，划水的时候出水吸气，手出水的时候低头吐气。\n　\n　**暴力蝶与慢蝶** 两者的区别是暴力蝶在于速度，而慢蝶适合长游。上文讲的都是暴蝶，而慢蝶慢在滑行，就是腰发力的时候，还有一个显著的地方，就如上文第二次打腿的时候，本来应该手还没入水就开始迅速打腿，而慢蝶恰恰是等入水后再悠哉悠哉的打一下腿，再滑行一下，除了抱水跟打腿都要迅速，其它整体节奏放慢。\n　\n　**注意** 蝶泳需要很高的协调力，即便慢蝶也需要很好的体力和耐力，否则蝶个100米就累了，这\n里讲累的时候出现的问题，因为身体腰腹力量是短板，其它肌肉还有余力的时候，腰已经没力，这种时候很容易不自觉的切换成小腿打水，这是常见现象，我也是这样玩得不亦乐乎的。不过建议动作变\n形就不要继续了。\n\n**转身与跳水** 只做出摸墙转身和爬泳的背泳翻滚转身动作，不标准，没专门学过就不发表意见了。\n\n## 五、常见问题篇\n- 游泳会使肌肉线条拉长，在于塑形，并不能练出大块肌肉，器械健身在于紧实肌肉，如果两者配合简直无敌。\n- 学游泳不止水里要练，陆地练习也很重要，可以看着镜子，模拟水中动作，看看自己是否动作变形，多练习，让肌肉记忆动作。\n- 有些人动作永远做不好，是身体柔韧性不够，需要配合陆地的压筋联系。\n- 其它泳姿动作错误会影响游泳速度，但是要特别注意爬泳和单手蝶，在泳池可以看到很多人游着游着就游偏了，而且只能单边换气，这是因为双手双脚力量不对等导致的，出现这种情况一定要着重练某一边的力量。如果爬泳做不到三划一换气，可以半场一边换气，下半场换另一半换气。单手蝶同理。如果不注意的话，可能造成严重后果，两边肌肉不平衡反而对脊椎不好。\n- 一个常识误区，自由泳的意思是你可以用任何泳姿游，只是在比赛的时候由于爬泳速度最快，所以自由泳都采取爬泳的姿势。so，记住就好，不要闹笑话。\n- 腰不好不要蝶泳，好好静养吧。","slug":"游泳攻略","published":1,"updated":"2017-06-13T01:41:12.439Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou60002wpo2yi45t6bhc","content":"<h1 id=\"游泳攻略\"><a href=\"#游泳攻略\" class=\"headerlink\" title=\"游泳攻略\"></a><center>游泳攻略</center></h1><p><img width=\"300\" src=\"/image/swimming/主题.jpg\"></p>\n<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>　游泳是一种全身性运动，素有“运动之王”的美称，可以避免常规运动可能造成的关节损伤，而且老少皆宜。益处多多，待我一一道来<br>　<br><strong>1、保护身体多处关节的健康</strong> 游泳锻炼是克服水的阻力而不是克服重力， 肌肉和关节不易受伤在游泳时，在水的浮力和阻力的相互作用下，身体能够得到按摩，起到很好的保健作用。</p>\n<p><strong>2、能够能起到减肥的作用</strong> 游泳一项全身的运动，因此，随着全身的运动，肌肉会松弛舒展，人体的脂肪消耗得更快（水温低，热量流失快），使得身体更加匀称、协调。</p>\n<p><strong>3、改善心血管系统的功能</strong> 游泳时要克服水的阻力需要动用较多的能量，使心率加快，心输出量增大。坚持长期进行游泳锻炼，心脏体积呈运动性增大，心肌收缩有力，安静心率减慢，每搏输出量增加，血管壁增厚，弹性加大，心血管系统的效率得到提高。</p>\n<p><strong>4、改善体温调节机能</strong> 由于水的温度一般低于气温，水的导热能力又比空气强数十倍，因此人在水中失散的热量远远快于在空气中。经常游泳能改善体温调节能力，从而更能够承受外界温度的变化。</p>\n<p><strong>5、调节内分泌</strong> 游泳还能够起到改善内分泌失调的作用,让人减少焦虑、心态更为平和,皮肤也更加光滑美丽,这些都让女性在性生活中更有魅力，令心情放松。</p>\n<p><strong>6、塑造肌肉线条、增强肌肉力度、提高身体柔韧与协调</strong> 游泳动作属于伸展运动，而且需要多肌肉群的协调，因此对于塑形和协调有很大的帮助。</p>\n<p><strong>7、改善脊椎问题</strong> 游泳是公认对脊椎有好处的运动，个人觉得更多的是来自蛙泳的好处，蛙泳的时候，头一低一抬，增强后颈肌肉力量，改善驼背和颈椎病。胸椎有肋骨防护，一般很难出现问题，因为两侧有心脏肺等各种主要器官，一旦出现问题，即便是小错位都够受的，划船和蛙泳的划手动作都可以有效的加强胸椎的防护能力。</p>\n<p><strong>8、误区</strong> 即便游泳有各种好处，但并不代表你可以随意的游，错误的动作可能带来严重的后果，详见<strong>【常见问题与误区篇】</strong></p>\n<h2 id=\"一、必备装备篇\"><a href=\"#一、必备装备篇\" class=\"headerlink\" title=\"一、必备装备篇\"></a>一、必备装备篇</h2><h3 id=\"（一）泳帽\"><a href=\"#（一）泳帽\" class=\"headerlink\" title=\"（一）泳帽\"></a>（一）泳帽</h3><p><strong>作用</strong> 希望在泳池游泳都能自觉戴泳帽，一方面保护自己的头发，也可以减少游泳阻力<br>另一方面也防止脱发影响泳者发挥和泳池的过滤系统。</p>\n<p><strong>分类</strong> 泳帽一般分为布帽、PU帽、胶帽。</p>\n<ul>\n<li><p><strong>布帽</strong> 防水性能差，和头的密合性差，佩戴较为舒适，不推荐；如果是一次性游泳的话布帽是首选，物美价廉，但是一般只有小区泳池可戴布帽，较为标准的泳池大都要求戴PU或胶帽。</p>\n</li>\n<li><p><strong>PU帽</strong> 复合材料的泳帽，和头的密合性和防水性都是介于布帽和胶帽之间，舒适度一般。</p>\n</li>\n<li><p><strong>胶帽</strong> 不透水，和头的密合性佳，佩戴有小小紧勒感，最大化的减小阻力，强烈推荐。</p>\n</li>\n</ul>\n<p><strong>佩戴</strong> 泳帽都有折痕，棱边对准眉心，从前往后戴；妹纸的话推荐第二种方法，把泳帽撑开，从后往前，尽量把头发都套住，同样是棱边要对准眉心，如果折痕在两边，无法形容，反正很丑。准确的来说泳帽要套住耳朵防止进水，但是太勒了，不推荐。</p>\n<center><img width=\"300\" src=\"/image/swimming/泳帽的戴法.jpg\"><br>（泳帽的正确戴法）</center><br><strong>选择</strong> 最好选择跟泳装同色或近色，当然个性的花花绿绿也是可以的，赚足回头率。<br><br>### （二）泳镜<br><strong>作用</strong> 避免眼睛接触池水后发炎或被感染，不过最主要的原因当然是看妹纸啦。<br><br><strong>分类</strong> 大致特征有大框、小框、镀膜、非镀膜。<br><br><strong>选择</strong><br><br>- 慎选全透明泳镜，看起来眼珠子都要突出来了，你喜欢的话我也拦不住。<br><br>- 莫选大框泳镜，特别是潜水镜，相对来说防水性没有小框的好，而且不好看，略浮夸。<br><br><center><img width=\"300\" src=\"/image/swimming/大框泳镜.jpg\"></center><br>- 一定要买防雾的，特别是冬天。<br><br>- 200度近视以下可以不买近视泳镜，200度以上的不用近视泳镜就是你的损失了，想想有个美女经过而你又看不清，可悲可叹。散光者，散光度数除以2，加上近视的度数，就是理想的泳镜度数。<br><br>- 推荐小框泳镜，防水又专业。<br><br>- 室内选浅色透明（室内较暗，用电镀看不太清）<br><br><center><img width=\"300\" src=\"/image/swimming/透明泳镜.jpg\"></center><br>- 室外选电镀（光线较强，可防紫外线，而且别人看不到你的眼睛，显得比较酷炫高冷，hehe~）。<br><br><center><img width=\"300\" src=\"/image/swimming/电镀泳镜.jpg\"></center>\n\n<p><strong>保养</strong></p>\n<ul>\n<li><p>切忌用热水洗</p>\n</li>\n<li><p>镜内莫洗</p>\n</li>\n<li><p>戴久了要摘一下，防止局部缺氧对眼睛不好</p>\n</li>\n<li><p>不管买的时候宣传的防雾功能多好，基本用几次就不防雾了，网上卖的防雾剂效果跟直接用洗洁精或者肥皂差不多。或者你也可以像专业选手一样，舔一舔。我试过，口感一般2333</p>\n</li>\n</ul>\n<h3 id=\"（三）泳装\"><a href=\"#（三）泳装\" class=\"headerlink\" title=\"（三）泳装\"></a>（三）泳装</h3><ul>\n<li><p><strong>泳裤</strong><br><strong>分类</strong> 泳裤的区分主要是长度，另外是材料（影响泳裤的寿命，然而不管什么材料，不要坐在泳池边，也不要用热水洗，泳裤表示心很累）。</p>\n<ul>\n<li><strong>长度</strong> 大致分为三角、平角、五分、到脚踝、连体、全覆盖。<ul>\n<li>以前面料发展还不发达的时候，以减小阻力为目的尽量减少覆盖面积，所以大多选择低腰三角泳裤，目前的话这类泳裤在西方国家是带有“特定标签”的人使用的，除非你技术棒棒哒，否则还是不要引起误会了。</li>\n<li>推荐平角泳裤或五分裤，中规中矩，来看看泳届大佬的装备。<center><img width=\"300\" src=\"/image/swimming/低边平角泳裤.jpg\">（低边平角泳裤）</center><br><center><img width=\"300\" src=\"/image/swimming/普通平角泳裤.jpg\">（普通平角泳裤）</center><br><center><img width=\"300\" src=\"/image/swimming/五分泳裤.jpg\">（五分泳裤）</center></li>\n<li>超过五分长的泳裤就不推荐了，由于泳装发展太快太牛逼，各种高科技泳装层出不穷，现在国际比赛已经规定比赛的时候泳裤只能到膝盖。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>泳衣</strong><br><strong>分类</strong> 这里主要针对妹纸来讲，泳衣大致可分为连体和衣裤分离</p>\n<ul>\n<li>背交叉连体（推荐）<center><img width=\"300\" src=\"/image/swimming/背交叉连体.jpg\"></center></li>\n<li>较为时尚流行的背交叉连体（推荐）<center><img width=\"300\" src=\"/image/swimming/时尚背交叉连体.jpg\"></center></li>\n<li>三角连体（一般般）<center><img width=\"300\" src=\"/image/swimming/三角连体.jpg\"></center></li>\n<li>带小花边连体（泡水还可以，游的话兜水，而且大都是肩带型，不推荐。还不如穿比基尼2333）<center><img width=\"300\" src=\"/image/swimming/花边泳衣.jpg\"></center></li>\n<li><p>竞速泳衣（土豪与专业人士可选，相当的紧，上图的背交叉连体就是）</p>\n</li>\n<li><p>比基尼（男士福音，身材好的不管是认真游还是泡水都很好看，我喜欢2333）</p>\n<center><img width=\"300\" src=\"/image/swimming/比基尼.jpg\"></center>\n\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>选择</strong> 材料方面没什么研究，一般买贴身速干的就可以了，泡水群众可以买宽松的，专业的可以选择高压缩型的，看看傅爷这表情就知道高压缩型的有多紧了</p>\n<center><img width=\"300\" src=\"/image/swimming/傅爷表情.jpg\"></center>\n\n<h3 id=\"（四）物品寄放\"><a href=\"#（四）物品寄放\" class=\"headerlink\" title=\"（四）物品寄放\"></a>（四）物品寄放</h3><p><strong>一般分为以下几种</strong></p>\n<ul>\n<li><p>押金寄物（有些全退，像长隆那些记得是押50退20酱紫）</p>\n</li>\n<li><p>投币寄物（一般是一个或两个硬币，坑爹的设计，感觉带钢镚不爽）</p>\n</li>\n<li><p>自备锁（这种是最好也是最常见的）</p>\n</li>\n</ul>\n<p><strong>锁的选择</strong></p>\n<ul>\n<li>带钥匙的（不推荐，为了防止钥匙掉落，普通手绳易坏，推荐钥匙手环，几毛钱）<center><img width=\"300\" src=\"/image/swimming/钥匙手环.jpg\"></center></li>\n<li>密码锁（推荐，没有钥匙掉落的风险，也不会因为手环影响发挥，一般也就几块钱）</li>\n</ul>\n<h2 id=\"二、辅助装备篇\"><a href=\"#二、辅助装备篇\" class=\"headerlink\" title=\"二、辅助装备篇\"></a>二、辅助装备篇</h2><h3 id=\"（一）耳塞\"><a href=\"#（一）耳塞\" class=\"headerlink\" title=\"（一）耳塞\"></a>（一）耳塞</h3><p>很少有人戴，而且容易掉水里，比赛都是泳帽直接盖住耳朵达到防水效果</p>\n<h3 id=\"（二）鼻夹\"><a href=\"#（二）鼻夹\" class=\"headerlink\" title=\"（二）鼻夹\"></a>（二）鼻夹</h3><p>不是花样游泳一般都不戴，虽说有防鼻子进水的效果，但是容易产生依赖，影响换气的学习。另外，汉子还是不要戴了，妹纸随便，感觉挺好看~</p>\n<h3 id=\"（三）背漂（泳圈同理）\"><a href=\"#（三）背漂（泳圈同理）\" class=\"headerlink\" title=\"（三）背漂（泳圈同理）\"></a>（三）背漂（泳圈同理）</h3><p>一般儿童用，不推荐。一样容易产生依赖，影响动作。推荐8字浮板，下面会讲到。</p>\n<h3 id=\"（四）打水浮板\"><a href=\"#（四）打水浮板\" class=\"headerlink\" title=\"（四）打水浮板\"></a>（四）打水浮板</h3><ul>\n<li>新手必备神器，一般是下图这种，一般用来练打腿<center><img width=\"300\" src=\"/image/swimming/打水浮板.jpg\"></center></li>\n<li>墙裂推荐，理由是它可以像上面的浮板一样用来练打腿，也可以，夹在腿间让下半身浮起来，用来练手划水动作（不推荐背漂的原因）。<center><img width=\"300\" src=\"/image/swimming/8字浮板.jpg\"></center>\n\n</li>\n</ul>\n<h3 id=\"（五）跟屁虫-漂流包-潜浮包\"><a href=\"#（五）跟屁虫-漂流包-潜浮包\" class=\"headerlink\" title=\"（五）跟屁虫/漂流包/潜浮包\"></a>（五）跟屁虫/漂流包/潜浮包</h3><ul>\n<li>不管水性如何，野泳的时候一定要带，尊重自己与他人的生命。（不会游的最好不要野泳，这种也只是对会游的有基本的保障）</li>\n<li>常见的跟屁虫长这样，橙色有警醒作用，小的不能储物，大的可以放点东西，不过不能太多，基本满足。<br><center><img width=\"300\" src=\"/image/swimming/小跟屁虫.jpg\">（小跟屁虫）</center><br><center><img width=\"300\" src=\"/image/swimming/大跟屁虫.jpg\">（大跟屁虫）</center><br>不过现在大都流行这种漂流包，比较好看，可以承受更大的重量，切记，表买单肩的<br><center><img width=\"300\" src=\"/image/swimming/漂流包.jpg\"></center><h3 id=\"（六）划水掌\"><a href=\"#（六）划水掌\" class=\"headerlink\" title=\"（六）划水掌\"></a>（六）划水掌</h3>现在划水掌做得都很好看了，各式各样，自行选择</li>\n</ul>\n<p><strong>作用</strong> 适用中高阶爬泳者，可以有效改正手臂划水的动作，增大划水面积，可以划得更快，最主要的还是为了手臂力量得到训练。不要过份依赖，戴久了会导致腿打水时转跨配合力度变小，不戴的时候协调性就变差了。</p>\n<p><strong>选择</strong> 买跟手掌差不多大小的就行，不要买太大的，费力不说，还容易受伤。</p>\n<h3 id=\"（七）脚蹼\"><a href=\"#（七）脚蹼\" class=\"headerlink\" title=\"（七）脚蹼\"></a>（七）脚蹼</h3><p><strong>作用</strong> 练蝶泳必备，可以让你更好的感受到身体的波动，纠正姿势，保持上下S型前进的动力。</p>\n<p><strong>选择</strong> 买游泳型的就行，如图</p>\n<center><img width=\"300\" src=\"/image/swimming/游泳脚蹼.jpg\"></center><br>不要买成下面这种潜水型的，不过这种用来练波动好像更好。<br><br><center><img width=\"300\" src=\"/image/swimming/潜水脚蹼.jpg\"></center>\n\n<h3 id=\"（八）其它\"><a href=\"#（八）其它\" class=\"headerlink\" title=\"（八）其它\"></a>（八）其它</h3><ul>\n<li><p>呼吸管（分游泳和潜水用，游泳的可以忽略呼吸专心练动作，不推荐。我主张先适应水先学会换气再学动作）</p>\n</li>\n<li><p>阻力裤（原理是兜水，加重阻碍前进，用以力量训练）</p>\n</li>\n<li><p>拉力筋（一头绑腰上，手拿着另一头，用以力量训练）</p>\n</li>\n</ul>\n<h2 id=\"三、沐浴装备篇\"><a href=\"#三、沐浴装备篇\" class=\"headerlink\" title=\"三、沐浴装备篇\"></a>三、沐浴装备篇</h2><p><strong>理由</strong> 特别是泳池，大都加了混凝剂和一些含氯的消毒品，对头发跟皮肤有一定的伤害，所以游泳必备篇的装备防水性很重要。同时，沐浴用品也很重要，我一般洗完回去再洗都还有一点点漂白水的味道，想象以下如果游泳后就简单冲一下，等回去再洗，期间氯在你身上悠哉的进行化学反应，啧啧。</p>\n<p><strong>清单</strong> </p>\n<ul>\n<li><p>洗发水</p>\n</li>\n<li><p>护发素（可以游之前涂一点在泳帽内侧，厉害了2333）</p>\n</li>\n<li><p>沐浴露</p>\n</li>\n<li><p>毛巾/浴巾</p>\n</li>\n<li><p>拖鞋</p>\n</li>\n<li><p>吹风筒</p>\n</li>\n</ul>\n<p><strong>选择</strong> </p>\n<ul>\n<li><p>现在有去氯的沐浴用品，用后也没啥区别，心理作用。觉得普通的平时用的就行（不懂，保留意见）</p>\n</li>\n<li><p>毛巾/浴巾必须有有木有，忘带的时候用衣服擦干，唉~都是泪。</p>\n</li>\n<li><p>拖鞋不一定要，带的话会方便很多，洗完后脚湿的总不能直接穿鞋吧。</p>\n</li>\n<li><p>有些游泳馆有吹风筒（少见），有些没有，妹纸有需要可以自带吹风筒，不过没啥必要，因为大多泳馆并没有插头。/无辜脸</p>\n</li>\n</ul>\n<p><strong>分装瓶</strong> 大大小小的瓶子带起来不方便咋办，放包里可能还会漏出来（说多都是泪），推荐这种分装瓶，最好买压嘴的，白色透明的话可以根据颜色分清是什么，不用像我一样贴标签，而且有个卡扣，不怕不小心压到，用起来比较方便，几毛钱一个，不过加上邮费就贵了。</p>\n<center><img width=\"300\" src=\"/image/swimming/分装瓶.jpg\"></center>\n\n<h2 id=\"四、技术篇（视频学习较好）\"><a href=\"#四、技术篇（视频学习较好）\" class=\"headerlink\" title=\"四、技术篇（视频学习较好）\"></a>四、技术篇（视频学习较好）</h2><p>小生浅见，欢迎大佬斧正。</p>\n<p><strong>水性</strong> 解释以下水性是什么，不是你游多快，会多少种游法，体力多好，耐力多好。而是指对水的适应程度，如果你泳镜突然掉了或者突然抽筋了，你就变得很紧张，那只能说你水性还不到家。这也是很多新手的问题，对水的恐惧感。</p>\n<p><strong>水感与呼吸</strong> 不建议直接上来就是干，新手要先体验一下水感，可以在浅水区行走，感受水的波动，然后尝试向前、向侧、向后的走、跑、跳，。</p>\n<p>适应了之后练习呼吸，不管什么运动，呼吸都是重中之重，要领是出水口吸气，不要用鼻子，会呛水。入水口鼻吐气，重点在鼻吐气，一般很累很喘的时候才用到口吐气，入水的时候不要憋气，入水临界点的时候就开始吐气，不要吐尽，吐尽就会有憋的感觉，留一口气在出水的临界点吐掉，然后快速在吸一口，赛过活神仙。</p>\n<p>虽然我是主张先打好基础在练动作的，但是这种练习显得很枯燥，初学者会觉得很无聊，在现在快节奏的生活和快餐文化的氛围下，初学者学水感和呼吸的时候不会有丝毫成就感，容易厌倦。但是游前5分钟的练习和适应还是很有必要的（不论新手老手）</p>\n<p><strong>狗爬</strong> 顾名思义就是像狗一样手脚扒水，大多数江湖海边玩大的基本都是狗爬，俺一开始也是，这是一种本能反应，3个月大的婴儿就开始有的踢踏反射动作，淹也淹不死，游也游不快，毕竟费力和low了点，学点比赛泳姿还是有必要的。</p>\n<center><img width=\"300\" src=\"/image/swimming/狗爬式.jpg\"></center>\n\n<p><strong>仰泳</strong> 可用反蛙泳、反爬泳、反蝶泳法游，没专门练过，不发表意见，放个妹纸镇场。</p>\n<center><img width=\"300\" src=\"/image/swimming/蝶仰泳.jpg\"></center>\n\n<p><strong>蛙泳</strong> 蛙泳分手和脚的练习，脚有三个动作：收、翻、蹬，手的动作也有三个：划水，收手，伸手。</p>\n<p>　<strong>收</strong> 双腿伸直，腿往胸口收（没那么夸张，形象一点而已），最多和身体呈90度</p>\n<center><img width=\"300\" src=\"/image/swimming/收腿.jpg\"></center><br>　<strong>翻</strong> 重点动作，翻不过来是柔韧度不够，需要配合压筋练习。膝盖外翻，脚尖向外（这是重点），可以在陆上让人抓着脚练习，让肌肉记忆动作。<br><center><img width=\"300\" src=\"/image/swimming/蛙泳翻腿.jpg\"></center><br><center><img width=\"300\" src=\"/image/swimming/蛙泳抓腿.jpg\"></center><br>　<strong>蹬夹</strong> 这里其实是两个动作，一个是向两侧蹬，一个是双腿并拢。必须连贯起来（画弧形，这是腿法精髓，前进动力在此）<br><center><img width=\"300\" src=\"/image/swimming/蛙泳蹬夹.jpg\"></center><br>　<strong>划水</strong> 划水分为外划和内划，外划的时候想象一下手往两边拨开一层水<br>　<br><center><img width=\"300\" src=\"/image/swimming/蛙泳外划.jpg\"></center><br>　内划在外划的基础上，手弯曲角度大概120度<br>　<br><center><img width=\"300\" src=\"/image/swimming/蛙泳内划.jpg\"></center><br>　<strong>收手</strong> 收手即为抱水，这是手部动作的精髓，在泳池里经常可以看到很多人划到腰间再收回来，这是错误的，我称之为养生蛙，不能笑（哈哈哈~），抱水应该在胸口进行抱水，看一下大佬的抱水动作，想象一下手里托着个宝贝<br>　<br><center><img width=\"300\" src=\"/image/swimming/蛙泳抱水.jpg\"></center><br>　<strong>伸手</strong> 这个没什么讲的，就是从抱水后的一个前冲动作，要记住伸手之后才蹬腿<br>　<br><center><img width=\"300\" src=\"/image/swimming/蛙泳伸手蹬夹.jpg\"></center><br>　<strong>配合</strong> 外划腿不动，内划慢收腿，收手后收腿，伸手快蹬夹，手脚伸直漂一会<br>　<br><strong>爬泳</strong> 爬泳就是常说的自由泳，详见【常见问题篇】，也是分为手和腿的练习，大多数培训都是从蛙泳开始教起，个人认为蛙泳动作复杂，不适合初学，爬泳动作较为简单，容易产生前进力，初学者容易找到成就感，不会中途放弃，废话不多说，一般从打腿开始练习<br><br>　<strong>打腿第一阶段</strong> 因为初学者腿部柔韧性不够，所以要拉筋拉筋拉筋，重要的事说三遍，一开始还比较僵硬，要点是膝盖和脚绷直（不要蹦死，易抽筋，放松，有点弯曲也可以接受），然后就上下小幅度的打水即可<br>　<br>　<strong>打腿第二阶段</strong>  腿像鞭子一样打水，大腿是手臂，小腿是棍子，棍子本身是不发力的，只有手臂发力才能发挥作用，爬泳打腿也是，要大腿带动小腿打水，如果感觉小腿弯曲后用力打水就是错误的（这就是第一阶段要膝盖绷直练的原因），另外，打水的时候内八，力学问题，不用刻意，基本都是很自然就内八的。<br>　<br><center><img width=\"300\" src=\"/image/swimming/爬泳腿法.jpg\"></center>\n\n<p>　<strong>打腿第三阶段</strong> 这是精髓，腿可以自然打水后，注意力放在髋部，上文说的大腿带动小腿，其实发力点是通过髋部的转动带动的，从侧面看比较好理解，这个时候腿相对于水平面来说不是上下打水，而是要做一个转动打水的动作。</p>\n<center><img width=\"300\" src=\"/image/swimming/爬泳转髋.jpg\"></center>\n\n<p>　<strong>打腿第四阶段</strong> 这里讲打腿频率，初学的时候都是死命的打，谁管你二次腿四次腿还是六次腿，最常见的就是六次腿（指的是左右手划动一次打腿的次数），很多人感觉爬泳很累，因为大多数人都是用六次甚至毫无规律的频率来打水的，六次腿只会在冲刺阶段用到，如果用这种频率在平时嬉戏中，不累才怪。四次腿比较少见，这里主要讲二次腿，长游必备。说白了真正掌握爬泳呼吸规律的时候可以很自然控制打腿频率。动作跟我们走路一样，一次手一次腿，不要顺拐喽（只要记住左手伸右腿打，右手伸左腿打就可以），看到【打腿第三阶段】那里的图没有，那个动作的下一步就是右手入水（伸），这时图中的左腿是在上方的，当右手伸的时候左腿就向下打腿，自行领悟。<br>　<br>　<strong>手臂第一阶段</strong> 手伸直做预备态，开始划水，手臂之间呈120度角度向后划水，练习的时候拇指擦着打腿经过把划水动作进行到底</p>\n<center><img width=\"300\" src=\"/image/swimming/爬泳划手.jpg\"></center><br><center><img width=\"300\" src=\"/image/swimming/爬泳划水到底.jpg\"></center><br>　<strong>手臂第二阶段</strong> 空中移臂，这是最精髓也是最容易出错的地方，切记，爬泳划水的任何时候，<strong>肘的位置都是高于手的</strong>，把意念都放在肘上，想象肘带着你的手在运动，有助于练习。最好回去看镜子练习，做不出动作的再说三遍压筋压筋压筋。下图分别为错误示范，柔韧度不够但是正确的移臂以及正确的移臂<br>　<br><center><img width=\"300\" src=\"/image/swimming/爬泳错误移臂.jpg\">这种就是手高于肘，移臂很累又不好看</center><br><center><img width=\"300\" src=\"/image/swimming/爬泳柔韧性不够的移臂.jpg\">这个动作是对的，只是柔韧性不够，手抬得太高了 </center><br><center><img width=\"300\" src=\"/image/swimming/爬泳正确移臂.jpg\">正确的爬泳移臂</center>\n\n<p>　<strong>手臂第三阶段</strong> 入水，角度如图，这里要讲一下两手的配合，在长游的时候，一只手完全入水后另一手才开始划水，只有比赛的时候为了速度，才需要在移臂准备入水的时候另一手开始划水。</p>\n<center><img width=\"300\" src=\"/image/swimming/爬泳手臂入手.jpg\"></center><br>　<strong>换气</strong> 一般是划3次手换一次气，我体力不足，反正我基本10来分钟后就都是2次手换一次气（这里就要注意不要只一边换气了，详见【常见问题篇】），千万不要一次换一下，那是不可能的，看起来就是左边甩一下，右边甩一下，看着都费劲。<br>　<br>　换气的时机在于哪只手划水，就哪边换气，从开始划水到移臂结束为吸气阶段，入水开始吐气，看到没有，吸气的阶段很足，这就是爬泳适合长游的原因，速度快又不费劲。练习的时候，手开始划的时候下巴贴着锁骨，眼睛往斜后方看。正确的换气是只露出半个泳镜（如手臂第三阶段图），不用担心呛水，人前进的时候嘴边形成了真空地带，不用怕，做不到的整个脸都向上，也可以，像下面这种。<br><br><center><img width=\"300\" src=\"/image/swimming/爬泳换气.jpg\"></center>\n\n<p><strong>蝶泳</strong>  终于讲到我最喜欢的了，蝶泳在实际游泳中并没有太大的作用。但作为一种运动项目，最主要的意义还是在于锻炼，爆发力强，对身体协调能力要求高。所以短时间内力量需求和热量消耗更大。对上肢肌肉锻炼效果明显。还有一个最最重要的理由，蝶泳可以装逼，无限美感，清场必备。咳咳，下面开始入门</p>\n<p>　<strong>蝶泳腿第一阶段</strong> 也叫海豚腿，任何泳姿比赛起跳的时候都会采用蝶泳腿，为什么，快。<br>　陆上练习：看过钢管舞的身体波动没有（搜舞蹈wave），对着镜子练，我觉得我一个汉子练这个也还看得下去2333，建议练全身，港真，实际只要练腿也可以啦。如图，先顶跨，然后膝盖弯曲，屁股后翘，不要直接站直，膝盖往回收，画个弧度回归</p>\n<center><img width=\"300\" src=\"/image/swimming/海豚泳陆地练习.jpg\"></center><br>　水里练习：最好戴个脚蹼，可以感受身体的波动，练习的时候压胸产生前进动力，后半身随波逐流，屁股稍微抬一下露出水面，这个阶段会有点久，一开始会一直往水下潜，慢慢习惯就可以了。<br><br><center><img width=\"300\" src=\"/image/swimming/海豚腿水中练习.jpg\"></center>\n\n<p>　<strong>蝶泳腿第二阶段</strong> 当可以很自然的作出海豚腿的动作的时候，你会发现，游不快，这个时候意念就不要放在压胸上了，用力甩动你的腰，你会飞快的前进，这里小小练习一下就能进阶了。<br>　<br>　<strong>手臂练习</strong> 蝶泳手臂跟爬泳完全一样，可以在陆地先单手练，然后双手练。<br>　<br>　<strong>单手蝶</strong> 单手蝶的练习是很有必要的，蝶泳的时候累了可以用单手蝶过度一下。单手蝶不需要像双手蝶那样配合，像爬泳一样，一只手划水，然后用海豚泳的腿法打水1-3下都可以。<br>　<br>　<strong>蛙腿蝶手/蝶腿蛙手</strong> 主要为了游的时候着重练习蝶手或蝶腿，体会手脚配合的节奏。<br>　<br>　<strong>配合（难点）</strong> 重中之重的部分，文字比较难表达，建议看慢蝶的视频，容易看出端倪。这里分别讲手跟腿的时机。全身伸直做预备状态，开始抱水划水，腰微塌下去，脚自然就上来了，如图</p>\n<center><img width=\"300\" src=\"/image/swimming/蝶泳第二次打腿预备.jpg\"></center><br>接下来是第一次打腿也是最重要的一次，重点发力，带动身体出水，吸气，要感觉身体是贴着水面的前进的，不要为了吸气成直力型。如图，看出水角度<br><br><center><img width=\"300\" src=\"/image/swimming/蝶泳第二次打腿.jpg\"></center><br>接下来空中移臂的过程很快结束，手入水，两手入水姿势同爬泳，注意间隔差不多与肩同宽，不用特别在意，手入水的瞬间还没入水，迅速做第二次打腿，这次力道可以小一点，这个时候手刚好入水，用抬腰（有一种把屁股网上甩的感觉），为下一次打腿做准备。<br><br><center><img width=\"300\" src=\"/image/swimming/蝶泳第一次打腿.jpg\"></center><br><center><img width=\"300\" src=\"/image/swimming/蝶泳第一次打腿1.jpg\"></center>\n\n<p>　<strong>换气</strong> 蝶泳的换气跟蛙泳有异曲同工之妙，划水的时候出水吸气，手出水的时候低头吐气。<br>　<br>　<strong>暴力蝶与慢蝶</strong> 两者的区别是暴力蝶在于速度，而慢蝶适合长游。上文讲的都是暴蝶，而慢蝶慢在滑行，就是腰发力的时候，还有一个显著的地方，就如上文第二次打腿的时候，本来应该手还没入水就开始迅速打腿，而慢蝶恰恰是等入水后再悠哉悠哉的打一下腿，再滑行一下，除了抱水跟打腿都要迅速，其它整体节奏放慢。<br>　<br>　<strong>注意</strong> 蝶泳需要很高的协调力，即便慢蝶也需要很好的体力和耐力，否则蝶个100米就累了，这<br>里讲累的时候出现的问题，因为身体腰腹力量是短板，其它肌肉还有余力的时候，腰已经没力，这种时候很容易不自觉的切换成小腿打水，这是常见现象，我也是这样玩得不亦乐乎的。不过建议动作变<br>形就不要继续了。</p>\n<p><strong>转身与跳水</strong> 只做出摸墙转身和爬泳的背泳翻滚转身动作，不标准，没专门学过就不发表意见了。</p>\n<h2 id=\"五、常见问题篇\"><a href=\"#五、常见问题篇\" class=\"headerlink\" title=\"五、常见问题篇\"></a>五、常见问题篇</h2><ul>\n<li>游泳会使肌肉线条拉长，在于塑形，并不能练出大块肌肉，器械健身在于紧实肌肉，如果两者配合简直无敌。</li>\n<li>学游泳不止水里要练，陆地练习也很重要，可以看着镜子，模拟水中动作，看看自己是否动作变形，多练习，让肌肉记忆动作。</li>\n<li>有些人动作永远做不好，是身体柔韧性不够，需要配合陆地的压筋联系。</li>\n<li>其它泳姿动作错误会影响游泳速度，但是要特别注意爬泳和单手蝶，在泳池可以看到很多人游着游着就游偏了，而且只能单边换气，这是因为双手双脚力量不对等导致的，出现这种情况一定要着重练某一边的力量。如果爬泳做不到三划一换气，可以半场一边换气，下半场换另一半换气。单手蝶同理。如果不注意的话，可能造成严重后果，两边肌肉不平衡反而对脊椎不好。</li>\n<li>一个常识误区，自由泳的意思是你可以用任何泳姿游，只是在比赛的时候由于爬泳速度最快，所以自由泳都采取爬泳的姿势。so，记住就好，不要闹笑话。</li>\n<li>腰不好不要蝶泳，好好静养吧。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"游泳攻略\"><a href=\"#游泳攻略\" class=\"headerlink\" title=\"游泳攻略\"></a><center>游泳攻略</center></h1><p><img width=300 src=\"/image/swimming/主题.jpg\" /></p>\n<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>　游泳是一种全身性运动，素有“运动之王”的美称，可以避免常规运动可能造成的关节损伤，而且老少皆宜。益处多多，待我一一道来<br>　<br><strong>1、保护身体多处关节的健康</strong> 游泳锻炼是克服水的阻力而不是克服重力， 肌肉和关节不易受伤在游泳时，在水的浮力和阻力的相互作用下，身体能够得到按摩，起到很好的保健作用。</p>\n<p><strong>2、能够能起到减肥的作用</strong> 游泳一项全身的运动，因此，随着全身的运动，肌肉会松弛舒展，人体的脂肪消耗得更快（水温低，热量流失快），使得身体更加匀称、协调。</p>\n<p><strong>3、改善心血管系统的功能</strong> 游泳时要克服水的阻力需要动用较多的能量，使心率加快，心输出量增大。坚持长期进行游泳锻炼，心脏体积呈运动性增大，心肌收缩有力，安静心率减慢，每搏输出量增加，血管壁增厚，弹性加大，心血管系统的效率得到提高。</p>\n<p><strong>4、改善体温调节机能</strong> 由于水的温度一般低于气温，水的导热能力又比空气强数十倍，因此人在水中失散的热量远远快于在空气中。经常游泳能改善体温调节能力，从而更能够承受外界温度的变化。</p>\n<p><strong>5、调节内分泌</strong> 游泳还能够起到改善内分泌失调的作用,让人减少焦虑、心态更为平和,皮肤也更加光滑美丽,这些都让女性在性生活中更有魅力，令心情放松。</p>\n<p><strong>6、塑造肌肉线条、增强肌肉力度、提高身体柔韧与协调</strong> 游泳动作属于伸展运动，而且需要多肌肉群的协调，因此对于塑形和协调有很大的帮助。</p>\n<p><strong>7、改善脊椎问题</strong> 游泳是公认对脊椎有好处的运动，个人觉得更多的是来自蛙泳的好处，蛙泳的时候，头一低一抬，增强后颈肌肉力量，改善驼背和颈椎病。胸椎有肋骨防护，一般很难出现问题，因为两侧有心脏肺等各种主要器官，一旦出现问题，即便是小错位都够受的，划船和蛙泳的划手动作都可以有效的加强胸椎的防护能力。</p>\n<p><strong>8、误区</strong> 即便游泳有各种好处，但并不代表你可以随意的游，错误的动作可能带来严重的后果，详见<strong>【常见问题与误区篇】</strong></p>\n<h2 id=\"一、必备装备篇\"><a href=\"#一、必备装备篇\" class=\"headerlink\" title=\"一、必备装备篇\"></a>一、必备装备篇</h2><h3 id=\"（一）泳帽\"><a href=\"#（一）泳帽\" class=\"headerlink\" title=\"（一）泳帽\"></a>（一）泳帽</h3><p><strong>作用</strong> 希望在泳池游泳都能自觉戴泳帽，一方面保护自己的头发，也可以减少游泳阻力<br>另一方面也防止脱发影响泳者发挥和泳池的过滤系统。</p>\n<p><strong>分类</strong> 泳帽一般分为布帽、PU帽、胶帽。</p>\n<ul>\n<li><p><strong>布帽</strong> 防水性能差，和头的密合性差，佩戴较为舒适，不推荐；如果是一次性游泳的话布帽是首选，物美价廉，但是一般只有小区泳池可戴布帽，较为标准的泳池大都要求戴PU或胶帽。</p>\n</li>\n<li><p><strong>PU帽</strong> 复合材料的泳帽，和头的密合性和防水性都是介于布帽和胶帽之间，舒适度一般。</p>\n</li>\n<li><p><strong>胶帽</strong> 不透水，和头的密合性佳，佩戴有小小紧勒感，最大化的减小阻力，强烈推荐。</p>\n</li>\n</ul>\n<p><strong>佩戴</strong> 泳帽都有折痕，棱边对准眉心，从前往后戴；妹纸的话推荐第二种方法，把泳帽撑开，从后往前，尽量把头发都套住，同样是棱边要对准眉心，如果折痕在两边，无法形容，反正很丑。准确的来说泳帽要套住耳朵防止进水，但是太勒了，不推荐。</p>\n<center><img width=300 src=\"/image/swimming/泳帽的戴法.jpg\" /><br>（泳帽的正确戴法）</center><br><strong>选择</strong> 最好选择跟泳装同色或近色，当然个性的花花绿绿也是可以的，赚足回头率。<br><br>### （二）泳镜<br><strong>作用</strong> 避免眼睛接触池水后发炎或被感染，不过最主要的原因当然是看妹纸啦。<br><br><strong>分类</strong> 大致特征有大框、小框、镀膜、非镀膜。<br><br><strong>选择</strong><br><br>- 慎选全透明泳镜，看起来眼珠子都要突出来了，你喜欢的话我也拦不住。<br><br>- 莫选大框泳镜，特别是潜水镜，相对来说防水性没有小框的好，而且不好看，略浮夸。<br><br><center><img width=300 src=\"/image/swimming/大框泳镜.jpg\" /></center><br>- 一定要买防雾的，特别是冬天。<br><br>- 200度近视以下可以不买近视泳镜，200度以上的不用近视泳镜就是你的损失了，想想有个美女经过而你又看不清，可悲可叹。散光者，散光度数除以2，加上近视的度数，就是理想的泳镜度数。<br><br>- 推荐小框泳镜，防水又专业。<br><br>- 室内选浅色透明（室内较暗，用电镀看不太清）<br><br><center><img width=300 src=\"/image/swimming/透明泳镜.jpg\" /></center><br>- 室外选电镀（光线较强，可防紫外线，而且别人看不到你的眼睛，显得比较酷炫高冷，hehe~）。<br><br><center><img width=300 src=\"/image/swimming/电镀泳镜.jpg\" /></center>\n\n<p><strong>保养</strong></p>\n<ul>\n<li><p>切忌用热水洗</p>\n</li>\n<li><p>镜内莫洗</p>\n</li>\n<li><p>戴久了要摘一下，防止局部缺氧对眼睛不好</p>\n</li>\n<li><p>不管买的时候宣传的防雾功能多好，基本用几次就不防雾了，网上卖的防雾剂效果跟直接用洗洁精或者肥皂差不多。或者你也可以像专业选手一样，舔一舔。我试过，口感一般2333</p>\n</li>\n</ul>\n<h3 id=\"（三）泳装\"><a href=\"#（三）泳装\" class=\"headerlink\" title=\"（三）泳装\"></a>（三）泳装</h3><ul>\n<li><p><strong>泳裤</strong><br><strong>分类</strong> 泳裤的区分主要是长度，另外是材料（影响泳裤的寿命，然而不管什么材料，不要坐在泳池边，也不要用热水洗，泳裤表示心很累）。</p>\n<ul>\n<li><strong>长度</strong> 大致分为三角、平角、五分、到脚踝、连体、全覆盖。<ul>\n<li>以前面料发展还不发达的时候，以减小阻力为目的尽量减少覆盖面积，所以大多选择低腰三角泳裤，目前的话这类泳裤在西方国家是带有“特定标签”的人使用的，除非你技术棒棒哒，否则还是不要引起误会了。</li>\n<li>推荐平角泳裤或五分裤，中规中矩，来看看泳届大佬的装备。<center><img width=300 src=\"/image/swimming/低边平角泳裤.jpg\" />（低边平角泳裤）</center><br><center><img width=300 src=\"/image/swimming/普通平角泳裤.jpg\" />（普通平角泳裤）</center><br><center><img width=300 src=\"/image/swimming/五分泳裤.jpg\" />（五分泳裤）</center></li>\n<li>超过五分长的泳裤就不推荐了，由于泳装发展太快太牛逼，各种高科技泳装层出不穷，现在国际比赛已经规定比赛的时候泳裤只能到膝盖。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>泳衣</strong><br><strong>分类</strong> 这里主要针对妹纸来讲，泳衣大致可分为连体和衣裤分离</p>\n<ul>\n<li>背交叉连体（推荐）<center><img width=300 src=\"/image/swimming/背交叉连体.jpg\" /></center></li>\n<li>较为时尚流行的背交叉连体（推荐）<center><img width=300 src=\"/image/swimming/时尚背交叉连体.jpg\" /></center></li>\n<li>三角连体（一般般）<center><img width=300 src=\"/image/swimming/三角连体.jpg\" /></center></li>\n<li>带小花边连体（泡水还可以，游的话兜水，而且大都是肩带型，不推荐。还不如穿比基尼2333）<center><img width=300 src=\"/image/swimming/花边泳衣.jpg\" /></center></li>\n<li><p>竞速泳衣（土豪与专业人士可选，相当的紧，上图的背交叉连体就是）</p>\n</li>\n<li><p>比基尼（男士福音，身材好的不管是认真游还是泡水都很好看，我喜欢2333）</p>\n<center><img width=300 src=\"/image/swimming/比基尼.jpg\" /></center>\n\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>选择</strong> 材料方面没什么研究，一般买贴身速干的就可以了，泡水群众可以买宽松的，专业的可以选择高压缩型的，看看傅爷这表情就知道高压缩型的有多紧了</p>\n<center><img width=300 src=\"/image/swimming/傅爷表情.jpg\" /></center>\n\n<h3 id=\"（四）物品寄放\"><a href=\"#（四）物品寄放\" class=\"headerlink\" title=\"（四）物品寄放\"></a>（四）物品寄放</h3><p><strong>一般分为以下几种</strong></p>\n<ul>\n<li><p>押金寄物（有些全退，像长隆那些记得是押50退20酱紫）</p>\n</li>\n<li><p>投币寄物（一般是一个或两个硬币，坑爹的设计，感觉带钢镚不爽）</p>\n</li>\n<li><p>自备锁（这种是最好也是最常见的）</p>\n</li>\n</ul>\n<p><strong>锁的选择</strong></p>\n<ul>\n<li>带钥匙的（不推荐，为了防止钥匙掉落，普通手绳易坏，推荐钥匙手环，几毛钱）<center><img width=300 src=\"/image/swimming/钥匙手环.jpg\" /></center></li>\n<li>密码锁（推荐，没有钥匙掉落的风险，也不会因为手环影响发挥，一般也就几块钱）</li>\n</ul>\n<h2 id=\"二、辅助装备篇\"><a href=\"#二、辅助装备篇\" class=\"headerlink\" title=\"二、辅助装备篇\"></a>二、辅助装备篇</h2><h3 id=\"（一）耳塞\"><a href=\"#（一）耳塞\" class=\"headerlink\" title=\"（一）耳塞\"></a>（一）耳塞</h3><p>很少有人戴，而且容易掉水里，比赛都是泳帽直接盖住耳朵达到防水效果</p>\n<h3 id=\"（二）鼻夹\"><a href=\"#（二）鼻夹\" class=\"headerlink\" title=\"（二）鼻夹\"></a>（二）鼻夹</h3><p>不是花样游泳一般都不戴，虽说有防鼻子进水的效果，但是容易产生依赖，影响换气的学习。另外，汉子还是不要戴了，妹纸随便，感觉挺好看~</p>\n<h3 id=\"（三）背漂（泳圈同理）\"><a href=\"#（三）背漂（泳圈同理）\" class=\"headerlink\" title=\"（三）背漂（泳圈同理）\"></a>（三）背漂（泳圈同理）</h3><p>一般儿童用，不推荐。一样容易产生依赖，影响动作。推荐8字浮板，下面会讲到。</p>\n<h3 id=\"（四）打水浮板\"><a href=\"#（四）打水浮板\" class=\"headerlink\" title=\"（四）打水浮板\"></a>（四）打水浮板</h3><ul>\n<li>新手必备神器，一般是下图这种，一般用来练打腿<center><img width=300 src=\"/image/swimming/打水浮板.jpg\" /></center></li>\n<li>墙裂推荐，理由是它可以像上面的浮板一样用来练打腿，也可以，夹在腿间让下半身浮起来，用来练手划水动作（不推荐背漂的原因）。<center><img width=300 src=\"/image/swimming/8字浮板.jpg\" /></center>\n\n</li>\n</ul>\n<h3 id=\"（五）跟屁虫-漂流包-潜浮包\"><a href=\"#（五）跟屁虫-漂流包-潜浮包\" class=\"headerlink\" title=\"（五）跟屁虫/漂流包/潜浮包\"></a>（五）跟屁虫/漂流包/潜浮包</h3><ul>\n<li>不管水性如何，野泳的时候一定要带，尊重自己与他人的生命。（不会游的最好不要野泳，这种也只是对会游的有基本的保障）</li>\n<li>常见的跟屁虫长这样，橙色有警醒作用，小的不能储物，大的可以放点东西，不过不能太多，基本满足。<br><center><img width=300 src=\"/image/swimming/小跟屁虫.jpg\" />（小跟屁虫）</center><br><center><img width=300 src=\"/image/swimming/大跟屁虫.jpg\" />（大跟屁虫）</center><br>不过现在大都流行这种漂流包，比较好看，可以承受更大的重量，切记，表买单肩的<br><center><img width=300 src=\"/image/swimming/漂流包.jpg\" /></center><h3 id=\"（六）划水掌\"><a href=\"#（六）划水掌\" class=\"headerlink\" title=\"（六）划水掌\"></a>（六）划水掌</h3>现在划水掌做得都很好看了，各式各样，自行选择</li>\n</ul>\n<p><strong>作用</strong> 适用中高阶爬泳者，可以有效改正手臂划水的动作，增大划水面积，可以划得更快，最主要的还是为了手臂力量得到训练。不要过份依赖，戴久了会导致腿打水时转跨配合力度变小，不戴的时候协调性就变差了。</p>\n<p><strong>选择</strong> 买跟手掌差不多大小的就行，不要买太大的，费力不说，还容易受伤。</p>\n<h3 id=\"（七）脚蹼\"><a href=\"#（七）脚蹼\" class=\"headerlink\" title=\"（七）脚蹼\"></a>（七）脚蹼</h3><p><strong>作用</strong> 练蝶泳必备，可以让你更好的感受到身体的波动，纠正姿势，保持上下S型前进的动力。</p>\n<p><strong>选择</strong> 买游泳型的就行，如图</p>\n<center><img width=300 src=\"/image/swimming/游泳脚蹼.jpg\" /></center><br>不要买成下面这种潜水型的，不过这种用来练波动好像更好。<br><br><center><img width=300 src=\"/image/swimming/潜水脚蹼.jpg\" /></center>\n\n<h3 id=\"（八）其它\"><a href=\"#（八）其它\" class=\"headerlink\" title=\"（八）其它\"></a>（八）其它</h3><ul>\n<li><p>呼吸管（分游泳和潜水用，游泳的可以忽略呼吸专心练动作，不推荐。我主张先适应水先学会换气再学动作）</p>\n</li>\n<li><p>阻力裤（原理是兜水，加重阻碍前进，用以力量训练）</p>\n</li>\n<li><p>拉力筋（一头绑腰上，手拿着另一头，用以力量训练）</p>\n</li>\n</ul>\n<h2 id=\"三、沐浴装备篇\"><a href=\"#三、沐浴装备篇\" class=\"headerlink\" title=\"三、沐浴装备篇\"></a>三、沐浴装备篇</h2><p><strong>理由</strong> 特别是泳池，大都加了混凝剂和一些含氯的消毒品，对头发跟皮肤有一定的伤害，所以游泳必备篇的装备防水性很重要。同时，沐浴用品也很重要，我一般洗完回去再洗都还有一点点漂白水的味道，想象以下如果游泳后就简单冲一下，等回去再洗，期间氯在你身上悠哉的进行化学反应，啧啧。</p>\n<p><strong>清单</strong> </p>\n<ul>\n<li><p>洗发水</p>\n</li>\n<li><p>护发素（可以游之前涂一点在泳帽内侧，厉害了2333）</p>\n</li>\n<li><p>沐浴露</p>\n</li>\n<li><p>毛巾/浴巾</p>\n</li>\n<li><p>拖鞋</p>\n</li>\n<li><p>吹风筒</p>\n</li>\n</ul>\n<p><strong>选择</strong> </p>\n<ul>\n<li><p>现在有去氯的沐浴用品，用后也没啥区别，心理作用。觉得普通的平时用的就行（不懂，保留意见）</p>\n</li>\n<li><p>毛巾/浴巾必须有有木有，忘带的时候用衣服擦干，唉~都是泪。</p>\n</li>\n<li><p>拖鞋不一定要，带的话会方便很多，洗完后脚湿的总不能直接穿鞋吧。</p>\n</li>\n<li><p>有些游泳馆有吹风筒（少见），有些没有，妹纸有需要可以自带吹风筒，不过没啥必要，因为大多泳馆并没有插头。/无辜脸</p>\n</li>\n</ul>\n<p><strong>分装瓶</strong> 大大小小的瓶子带起来不方便咋办，放包里可能还会漏出来（说多都是泪），推荐这种分装瓶，最好买压嘴的，白色透明的话可以根据颜色分清是什么，不用像我一样贴标签，而且有个卡扣，不怕不小心压到，用起来比较方便，几毛钱一个，不过加上邮费就贵了。</p>\n<center><img width=300 src=\"/image/swimming/分装瓶.jpg\" /></center>\n\n<h2 id=\"四、技术篇（视频学习较好）\"><a href=\"#四、技术篇（视频学习较好）\" class=\"headerlink\" title=\"四、技术篇（视频学习较好）\"></a>四、技术篇（视频学习较好）</h2><p>小生浅见，欢迎大佬斧正。</p>\n<p><strong>水性</strong> 解释以下水性是什么，不是你游多快，会多少种游法，体力多好，耐力多好。而是指对水的适应程度，如果你泳镜突然掉了或者突然抽筋了，你就变得很紧张，那只能说你水性还不到家。这也是很多新手的问题，对水的恐惧感。</p>\n<p><strong>水感与呼吸</strong> 不建议直接上来就是干，新手要先体验一下水感，可以在浅水区行走，感受水的波动，然后尝试向前、向侧、向后的走、跑、跳，。</p>\n<p>适应了之后练习呼吸，不管什么运动，呼吸都是重中之重，要领是出水口吸气，不要用鼻子，会呛水。入水口鼻吐气，重点在鼻吐气，一般很累很喘的时候才用到口吐气，入水的时候不要憋气，入水临界点的时候就开始吐气，不要吐尽，吐尽就会有憋的感觉，留一口气在出水的临界点吐掉，然后快速在吸一口，赛过活神仙。</p>\n<p>虽然我是主张先打好基础在练动作的，但是这种练习显得很枯燥，初学者会觉得很无聊，在现在快节奏的生活和快餐文化的氛围下，初学者学水感和呼吸的时候不会有丝毫成就感，容易厌倦。但是游前5分钟的练习和适应还是很有必要的（不论新手老手）</p>\n<p><strong>狗爬</strong> 顾名思义就是像狗一样手脚扒水，大多数江湖海边玩大的基本都是狗爬，俺一开始也是，这是一种本能反应，3个月大的婴儿就开始有的踢踏反射动作，淹也淹不死，游也游不快，毕竟费力和low了点，学点比赛泳姿还是有必要的。</p>\n<center><img width=300 src=\"/image/swimming/狗爬式.jpg\" /></center>\n\n<p><strong>仰泳</strong> 可用反蛙泳、反爬泳、反蝶泳法游，没专门练过，不发表意见，放个妹纸镇场。</p>\n<center><img width=300 src=\"/image/swimming/蝶仰泳.jpg\" /></center>\n\n<p><strong>蛙泳</strong> 蛙泳分手和脚的练习，脚有三个动作：收、翻、蹬，手的动作也有三个：划水，收手，伸手。</p>\n<p>　<strong>收</strong> 双腿伸直，腿往胸口收（没那么夸张，形象一点而已），最多和身体呈90度</p>\n<center><img width=300 src=\"/image/swimming/收腿.jpg\" /></center><br>　<strong>翻</strong> 重点动作，翻不过来是柔韧度不够，需要配合压筋练习。膝盖外翻，脚尖向外（这是重点），可以在陆上让人抓着脚练习，让肌肉记忆动作。<br><center><img width=300 src=\"/image/swimming/蛙泳翻腿.jpg\" /></center><br><center><img width=300 src=\"/image/swimming/蛙泳抓腿.jpg\" /></center><br>　<strong>蹬夹</strong> 这里其实是两个动作，一个是向两侧蹬，一个是双腿并拢。必须连贯起来（画弧形，这是腿法精髓，前进动力在此）<br><center><img width=300 src=\"/image/swimming/蛙泳蹬夹.jpg\" /></center><br>　<strong>划水</strong> 划水分为外划和内划，外划的时候想象一下手往两边拨开一层水<br>　<br><center><img width=300 src=\"/image/swimming/蛙泳外划.jpg\" /></center><br>　内划在外划的基础上，手弯曲角度大概120度<br>　<br><center><img width=300 src=\"/image/swimming/蛙泳内划.jpg\" /></center><br>　<strong>收手</strong> 收手即为抱水，这是手部动作的精髓，在泳池里经常可以看到很多人划到腰间再收回来，这是错误的，我称之为养生蛙，不能笑（哈哈哈~），抱水应该在胸口进行抱水，看一下大佬的抱水动作，想象一下手里托着个宝贝<br>　<br><center><img width=300 src=\"/image/swimming/蛙泳抱水.jpg\" /></center><br>　<strong>伸手</strong> 这个没什么讲的，就是从抱水后的一个前冲动作，要记住伸手之后才蹬腿<br>　<br><center><img width=300 src=\"/image/swimming/蛙泳伸手蹬夹.jpg\" /></center><br>　<strong>配合</strong> 外划腿不动，内划慢收腿，收手后收腿，伸手快蹬夹，手脚伸直漂一会<br>　<br><strong>爬泳</strong> 爬泳就是常说的自由泳，详见【常见问题篇】，也是分为手和腿的练习，大多数培训都是从蛙泳开始教起，个人认为蛙泳动作复杂，不适合初学，爬泳动作较为简单，容易产生前进力，初学者容易找到成就感，不会中途放弃，废话不多说，一般从打腿开始练习<br><br>　<strong>打腿第一阶段</strong> 因为初学者腿部柔韧性不够，所以要拉筋拉筋拉筋，重要的事说三遍，一开始还比较僵硬，要点是膝盖和脚绷直（不要蹦死，易抽筋，放松，有点弯曲也可以接受），然后就上下小幅度的打水即可<br>　<br>　<strong>打腿第二阶段</strong>  腿像鞭子一样打水，大腿是手臂，小腿是棍子，棍子本身是不发力的，只有手臂发力才能发挥作用，爬泳打腿也是，要大腿带动小腿打水，如果感觉小腿弯曲后用力打水就是错误的（这就是第一阶段要膝盖绷直练的原因），另外，打水的时候内八，力学问题，不用刻意，基本都是很自然就内八的。<br>　<br><center><img width=300 src=\"/image/swimming/爬泳腿法.jpg\" /></center>\n\n<p>　<strong>打腿第三阶段</strong> 这是精髓，腿可以自然打水后，注意力放在髋部，上文说的大腿带动小腿，其实发力点是通过髋部的转动带动的，从侧面看比较好理解，这个时候腿相对于水平面来说不是上下打水，而是要做一个转动打水的动作。</p>\n<center><img width=300 src=\"/image/swimming/爬泳转髋.jpg\" /></center>\n\n<p>　<strong>打腿第四阶段</strong> 这里讲打腿频率，初学的时候都是死命的打，谁管你二次腿四次腿还是六次腿，最常见的就是六次腿（指的是左右手划动一次打腿的次数），很多人感觉爬泳很累，因为大多数人都是用六次甚至毫无规律的频率来打水的，六次腿只会在冲刺阶段用到，如果用这种频率在平时嬉戏中，不累才怪。四次腿比较少见，这里主要讲二次腿，长游必备。说白了真正掌握爬泳呼吸规律的时候可以很自然控制打腿频率。动作跟我们走路一样，一次手一次腿，不要顺拐喽（只要记住左手伸右腿打，右手伸左腿打就可以），看到【打腿第三阶段】那里的图没有，那个动作的下一步就是右手入水（伸），这时图中的左腿是在上方的，当右手伸的时候左腿就向下打腿，自行领悟。<br>　<br>　<strong>手臂第一阶段</strong> 手伸直做预备态，开始划水，手臂之间呈120度角度向后划水，练习的时候拇指擦着打腿经过把划水动作进行到底</p>\n<center><img width=300 src=\"/image/swimming/爬泳划手.jpg\" /></center><br><center><img width=300 src=\"/image/swimming/爬泳划水到底.jpg\" /></center><br>　<strong>手臂第二阶段</strong> 空中移臂，这是最精髓也是最容易出错的地方，切记，爬泳划水的任何时候，<strong>肘的位置都是高于手的</strong>，把意念都放在肘上，想象肘带着你的手在运动，有助于练习。最好回去看镜子练习，做不出动作的再说三遍压筋压筋压筋。下图分别为错误示范，柔韧度不够但是正确的移臂以及正确的移臂<br>　<br><center><img width=300 src=\"/image/swimming/爬泳错误移臂.jpg\" />这种就是手高于肘，移臂很累又不好看</center><br><center><img width=300 src=\"/image/swimming/爬泳柔韧性不够的移臂.jpg\" />这个动作是对的，只是柔韧性不够，手抬得太高了 </center><br><center><img width=300 src=\"/image/swimming/爬泳正确移臂.jpg\" />正确的爬泳移臂</center>\n\n<p>　<strong>手臂第三阶段</strong> 入水，角度如图，这里要讲一下两手的配合，在长游的时候，一只手完全入水后另一手才开始划水，只有比赛的时候为了速度，才需要在移臂准备入水的时候另一手开始划水。</p>\n<center><img width=300 src=\"/image/swimming/爬泳手臂入手.jpg\" /></center><br>　<strong>换气</strong> 一般是划3次手换一次气，我体力不足，反正我基本10来分钟后就都是2次手换一次气（这里就要注意不要只一边换气了，详见【常见问题篇】），千万不要一次换一下，那是不可能的，看起来就是左边甩一下，右边甩一下，看着都费劲。<br>　<br>　换气的时机在于哪只手划水，就哪边换气，从开始划水到移臂结束为吸气阶段，入水开始吐气，看到没有，吸气的阶段很足，这就是爬泳适合长游的原因，速度快又不费劲。练习的时候，手开始划的时候下巴贴着锁骨，眼睛往斜后方看。正确的换气是只露出半个泳镜（如手臂第三阶段图），不用担心呛水，人前进的时候嘴边形成了真空地带，不用怕，做不到的整个脸都向上，也可以，像下面这种。<br><br><center><img width=300 src=\"/image/swimming/爬泳换气.jpg\" /></center>\n\n<p><strong>蝶泳</strong>  终于讲到我最喜欢的了，蝶泳在实际游泳中并没有太大的作用。但作为一种运动项目，最主要的意义还是在于锻炼，爆发力强，对身体协调能力要求高。所以短时间内力量需求和热量消耗更大。对上肢肌肉锻炼效果明显。还有一个最最重要的理由，蝶泳可以装逼，无限美感，清场必备。咳咳，下面开始入门</p>\n<p>　<strong>蝶泳腿第一阶段</strong> 也叫海豚腿，任何泳姿比赛起跳的时候都会采用蝶泳腿，为什么，快。<br>　陆上练习：看过钢管舞的身体波动没有（搜舞蹈wave），对着镜子练，我觉得我一个汉子练这个也还看得下去2333，建议练全身，港真，实际只要练腿也可以啦。如图，先顶跨，然后膝盖弯曲，屁股后翘，不要直接站直，膝盖往回收，画个弧度回归</p>\n<center><img width=300 src=\"/image/swimming/海豚泳陆地练习.jpg\" /></center><br>　水里练习：最好戴个脚蹼，可以感受身体的波动，练习的时候压胸产生前进动力，后半身随波逐流，屁股稍微抬一下露出水面，这个阶段会有点久，一开始会一直往水下潜，慢慢习惯就可以了。<br><br><center><img width=300 src=\"/image/swimming/海豚腿水中练习.jpg\" /></center>\n\n<p>　<strong>蝶泳腿第二阶段</strong> 当可以很自然的作出海豚腿的动作的时候，你会发现，游不快，这个时候意念就不要放在压胸上了，用力甩动你的腰，你会飞快的前进，这里小小练习一下就能进阶了。<br>　<br>　<strong>手臂练习</strong> 蝶泳手臂跟爬泳完全一样，可以在陆地先单手练，然后双手练。<br>　<br>　<strong>单手蝶</strong> 单手蝶的练习是很有必要的，蝶泳的时候累了可以用单手蝶过度一下。单手蝶不需要像双手蝶那样配合，像爬泳一样，一只手划水，然后用海豚泳的腿法打水1-3下都可以。<br>　<br>　<strong>蛙腿蝶手/蝶腿蛙手</strong> 主要为了游的时候着重练习蝶手或蝶腿，体会手脚配合的节奏。<br>　<br>　<strong>配合（难点）</strong> 重中之重的部分，文字比较难表达，建议看慢蝶的视频，容易看出端倪。这里分别讲手跟腿的时机。全身伸直做预备状态，开始抱水划水，腰微塌下去，脚自然就上来了，如图</p>\n<center><img width=300 src=\"/image/swimming/蝶泳第二次打腿预备.jpg\" /></center><br>接下来是第一次打腿也是最重要的一次，重点发力，带动身体出水，吸气，要感觉身体是贴着水面的前进的，不要为了吸气成直力型。如图，看出水角度<br><br><center><img width=300 src=\"/image/swimming/蝶泳第二次打腿.jpg\" /></center><br>接下来空中移臂的过程很快结束，手入水，两手入水姿势同爬泳，注意间隔差不多与肩同宽，不用特别在意，手入水的瞬间还没入水，迅速做第二次打腿，这次力道可以小一点，这个时候手刚好入水，用抬腰（有一种把屁股网上甩的感觉），为下一次打腿做准备。<br><br><center><img width=300 src=\"/image/swimming/蝶泳第一次打腿.jpg\" /></center><br><center><img width=300 src=\"/image/swimming/蝶泳第一次打腿1.jpg\" /></center>\n\n<p>　<strong>换气</strong> 蝶泳的换气跟蛙泳有异曲同工之妙，划水的时候出水吸气，手出水的时候低头吐气。<br>　<br>　<strong>暴力蝶与慢蝶</strong> 两者的区别是暴力蝶在于速度，而慢蝶适合长游。上文讲的都是暴蝶，而慢蝶慢在滑行，就是腰发力的时候，还有一个显著的地方，就如上文第二次打腿的时候，本来应该手还没入水就开始迅速打腿，而慢蝶恰恰是等入水后再悠哉悠哉的打一下腿，再滑行一下，除了抱水跟打腿都要迅速，其它整体节奏放慢。<br>　<br>　<strong>注意</strong> 蝶泳需要很高的协调力，即便慢蝶也需要很好的体力和耐力，否则蝶个100米就累了，这<br>里讲累的时候出现的问题，因为身体腰腹力量是短板，其它肌肉还有余力的时候，腰已经没力，这种时候很容易不自觉的切换成小腿打水，这是常见现象，我也是这样玩得不亦乐乎的。不过建议动作变<br>形就不要继续了。</p>\n<p><strong>转身与跳水</strong> 只做出摸墙转身和爬泳的背泳翻滚转身动作，不标准，没专门学过就不发表意见了。</p>\n<h2 id=\"五、常见问题篇\"><a href=\"#五、常见问题篇\" class=\"headerlink\" title=\"五、常见问题篇\"></a>五、常见问题篇</h2><ul>\n<li>游泳会使肌肉线条拉长，在于塑形，并不能练出大块肌肉，器械健身在于紧实肌肉，如果两者配合简直无敌。</li>\n<li>学游泳不止水里要练，陆地练习也很重要，可以看着镜子，模拟水中动作，看看自己是否动作变形，多练习，让肌肉记忆动作。</li>\n<li>有些人动作永远做不好，是身体柔韧性不够，需要配合陆地的压筋联系。</li>\n<li>其它泳姿动作错误会影响游泳速度，但是要特别注意爬泳和单手蝶，在泳池可以看到很多人游着游着就游偏了，而且只能单边换气，这是因为双手双脚力量不对等导致的，出现这种情况一定要着重练某一边的力量。如果爬泳做不到三划一换气，可以半场一边换气，下半场换另一半换气。单手蝶同理。如果不注意的话，可能造成严重后果，两边肌肉不平衡反而对脊椎不好。</li>\n<li>一个常识误区，自由泳的意思是你可以用任何泳姿游，只是在比赛的时候由于爬泳速度最快，所以自由泳都采取爬泳的姿势。so，记住就好，不要闹笑话。</li>\n<li>腰不好不要蝶泳，好好静养吧。</li>\n</ul>\n"},{"title":"获取URL链接的文件类型","date":"2016-05-22T03:46:01.000Z","_content":"##### 事例中的URL原本是一个格式为wav的音频文件，file type: audio/x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection.guessContentTypeFromStream方法来做判断\n```Java\npackage test;\n\nimport java.io.BufferedInputStream;\nimport java.io.IOException;\nimport java.net.HttpURLConnection;\nimport java.net.MalformedURLException;\nimport java.net.URL;\n\npublic class Test {\n\n\tpublic static void main(String[] args) {\n\t\tHttpURLConnection urlConn = null;\n\t\tURL url = null;\n\t\tBufferedInputStream bis = null;\n     \n        try {\n        \turl = new URL(\"http://www.ucpaas.com/fileserver/record/aee9011d2ee0f21f67310422ce62e71c_1464078387210374_20160524?sig=648DA4EC9E16704C44E5424D7A29CCD2\"); \n\t\t\turlConn = (HttpURLConnection) url.openConnection();\n\t\t\turlConn.connect();\n\t\t\tbis = new BufferedInputStream(urlConn.getInputStream());\n\t\t\t// HttpURLConnection.guessContentTypeFromStream 可以获取流的类型\n\t\t\tSystem.out.println(\"file type: \" + HttpURLConnection.guessContentTypeFromStream(bis));\n\t\t} catch (MalformedURLException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tif(bis != null) {\n\t\t\t\ttry {\n\t\t\t\t\tbis.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n}\n```\n控制台打印结果：file type: text/html\n\n---\n\n##### 还可以使用下面这种方式获取文件类型\n\n```Java\npackage test;\n\nimport java.io.IOException;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.net.URLConnection;\n\npublic class Test {\n\n\tpublic static void main(String[] args) {\n\t\tURL url = null;\n\t\tURLConnection conn = null;\n     \n        try {\n        \turl = new URL(\"http://www.ucpaas.com/fileserver/record/aee9011d2ee0f21f67310422ce62e71c_1464078387210374_20160524?sig=648DA4EC9E16704C44E5424D7A29CCD2\"); \n        \tconn = url.openConnection();\n\t\t\tSystem.out.println(\"file type: \" + conn.getContentType());\n\t\t} catch (MalformedURLException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n}\n```\n控制台打印结果：file type: text/html;charset=utf-8","source":"_posts/获取URL链接的文件类型.md","raw":"---\ntitle: 获取URL链接的文件类型\ndate: 2016-05-22 11:46:01\ncategories: [Java]\ntags: [Java]\n---\n##### 事例中的URL原本是一个格式为wav的音频文件，file type: audio/x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection.guessContentTypeFromStream方法来做判断\n```Java\npackage test;\n\nimport java.io.BufferedInputStream;\nimport java.io.IOException;\nimport java.net.HttpURLConnection;\nimport java.net.MalformedURLException;\nimport java.net.URL;\n\npublic class Test {\n\n\tpublic static void main(String[] args) {\n\t\tHttpURLConnection urlConn = null;\n\t\tURL url = null;\n\t\tBufferedInputStream bis = null;\n     \n        try {\n        \turl = new URL(\"http://www.ucpaas.com/fileserver/record/aee9011d2ee0f21f67310422ce62e71c_1464078387210374_20160524?sig=648DA4EC9E16704C44E5424D7A29CCD2\"); \n\t\t\turlConn = (HttpURLConnection) url.openConnection();\n\t\t\turlConn.connect();\n\t\t\tbis = new BufferedInputStream(urlConn.getInputStream());\n\t\t\t// HttpURLConnection.guessContentTypeFromStream 可以获取流的类型\n\t\t\tSystem.out.println(\"file type: \" + HttpURLConnection.guessContentTypeFromStream(bis));\n\t\t} catch (MalformedURLException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\tif(bis != null) {\n\t\t\t\ttry {\n\t\t\t\t\tbis.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n}\n```\n控制台打印结果：file type: text/html\n\n---\n\n##### 还可以使用下面这种方式获取文件类型\n\n```Java\npackage test;\n\nimport java.io.IOException;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.net.URLConnection;\n\npublic class Test {\n\n\tpublic static void main(String[] args) {\n\t\tURL url = null;\n\t\tURLConnection conn = null;\n     \n        try {\n        \turl = new URL(\"http://www.ucpaas.com/fileserver/record/aee9011d2ee0f21f67310422ce62e71c_1464078387210374_20160524?sig=648DA4EC9E16704C44E5424D7A29CCD2\"); \n        \tconn = url.openConnection();\n\t\t\tSystem.out.println(\"file type: \" + conn.getContentType());\n\t\t} catch (MalformedURLException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n}\n```\n控制台打印结果：file type: text/html;charset=utf-8","slug":"获取URL链接的文件类型","published":1,"updated":"2017-01-03T01:23:44.252Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou61002zpo2yzhygszlb","content":"<h5 id=\"事例中的URL原本是一个格式为wav的音频文件，file-type-audio-x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection-guessContentTypeFromStream方法来做判断\"><a href=\"#事例中的URL原本是一个格式为wav的音频文件，file-type-audio-x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection-guessContentTypeFromStream方法来做判断\" class=\"headerlink\" title=\"事例中的URL原本是一个格式为wav的音频文件，file type: audio/x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection.guessContentTypeFromStream方法来做判断\"></a>事例中的URL原本是一个格式为wav的音频文件，file type: audio/x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection.guessContentTypeFromStream方法来做判断</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.HttpURLConnection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.MalformedURLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tHttpURLConnection urlConn = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tURL url = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tBufferedInputStream bis = <span class=\"keyword\">null</span>;</div><div class=\"line\">     </div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        \turl = <span class=\"keyword\">new</span> URL(<span class=\"string\">\"http://www.ucpaas.com/fileserver/record/aee9011d2ee0f21f67310422ce62e71c_1464078387210374_20160524?sig=648DA4EC9E16704C44E5424D7A29CCD2\"</span>); </div><div class=\"line\">\t\t\turlConn = (HttpURLConnection) url.openConnection();</div><div class=\"line\">\t\t\turlConn.connect();</div><div class=\"line\">\t\t\tbis = <span class=\"keyword\">new</span> BufferedInputStream(urlConn.getInputStream());</div><div class=\"line\">\t\t\t<span class=\"comment\">// HttpURLConnection.guessContentTypeFromStream 可以获取流的类型</span></div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"file type: \"</span> + HttpURLConnection.guessContentTypeFromStream(bis));</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (MalformedURLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(bis != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t\tbis.close();</div><div class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>控制台打印结果：file type: text/html</p>\n<hr>\n<h5 id=\"还可以使用下面这种方式获取文件类型\"><a href=\"#还可以使用下面这种方式获取文件类型\" class=\"headerlink\" title=\"还可以使用下面这种方式获取文件类型\"></a>还可以使用下面这种方式获取文件类型</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.MalformedURLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.URLConnection;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tURL url = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tURLConnection conn = <span class=\"keyword\">null</span>;</div><div class=\"line\">     </div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        \turl = <span class=\"keyword\">new</span> URL(<span class=\"string\">\"http://www.ucpaas.com/fileserver/record/aee9011d2ee0f21f67310422ce62e71c_1464078387210374_20160524?sig=648DA4EC9E16704C44E5424D7A29CCD2\"</span>); </div><div class=\"line\">        \tconn = url.openConnection();</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"file type: \"</span> + conn.getContentType());</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (MalformedURLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>控制台打印结果：file type: text/html;charset=utf-8</p>\n","excerpt":"","more":"<h5 id=\"事例中的URL原本是一个格式为wav的音频文件，file-type-audio-x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection-guessContentTypeFromStream方法来做判断\"><a href=\"#事例中的URL原本是一个格式为wav的音频文件，file-type-audio-x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection-guessContentTypeFromStream方法来做判断\" class=\"headerlink\" title=\"事例中的URL原本是一个格式为wav的音频文件，file type: audio/x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection.guessContentTypeFromStream方法来做判断\"></a>事例中的URL原本是一个格式为wav的音频文件，file type: audio/x-wav，在保存文件的时候需要判断url是否还有效，这个时候就可以用到HttpURLConnection.guessContentTypeFromStream方法来做判断</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.HttpURLConnection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.MalformedURLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tHttpURLConnection urlConn = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tURL url = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tBufferedInputStream bis = <span class=\"keyword\">null</span>;</div><div class=\"line\">     </div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        \turl = <span class=\"keyword\">new</span> URL(<span class=\"string\">\"http://www.ucpaas.com/fileserver/record/aee9011d2ee0f21f67310422ce62e71c_1464078387210374_20160524?sig=648DA4EC9E16704C44E5424D7A29CCD2\"</span>); </div><div class=\"line\">\t\t\turlConn = (HttpURLConnection) url.openConnection();</div><div class=\"line\">\t\t\turlConn.connect();</div><div class=\"line\">\t\t\tbis = <span class=\"keyword\">new</span> BufferedInputStream(urlConn.getInputStream());</div><div class=\"line\">\t\t\t<span class=\"comment\">// HttpURLConnection.guessContentTypeFromStream 可以获取流的类型</span></div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"file type: \"</span> + HttpURLConnection.guessContentTypeFromStream(bis));</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (MalformedURLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(bis != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t\t\tbis.close();</div><div class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>控制台打印结果：file type: text/html</p>\n<hr>\n<h5 id=\"还可以使用下面这种方式获取文件类型\"><a href=\"#还可以使用下面这种方式获取文件类型\" class=\"headerlink\" title=\"还可以使用下面这种方式获取文件类型\"></a>还可以使用下面这种方式获取文件类型</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.MalformedURLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</div><div class=\"line\"><span class=\"keyword\">import</span> java.net.URLConnection;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tURL url = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\tURLConnection conn = <span class=\"keyword\">null</span>;</div><div class=\"line\">     </div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        \turl = <span class=\"keyword\">new</span> URL(<span class=\"string\">\"http://www.ucpaas.com/fileserver/record/aee9011d2ee0f21f67310422ce62e71c_1464078387210374_20160524?sig=648DA4EC9E16704C44E5424D7A29CCD2\"</span>); </div><div class=\"line\">        \tconn = url.openConnection();</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"file type: \"</span> + conn.getContentType());</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (MalformedURLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>控制台打印结果：file type: text/html;charset=utf-8</p>\n"},{"title":"spring4.0读取properties文件","date":"2016-09-24T09:02:22.000Z","_content":"##### 若我们的项目配置了多环境\n##### 注入properties属性，spring4.0配置，要引入\n##### xmlns:util=\"http://www.springframework.org/schema/util\"和\n##### http://www.springframework.org/schema/util/spring-util-4.0.xsd\n\n我的配置是\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop=\"http://www.springframework.org/schema/aop\"\n\txmlns:tx=\"http://www.springframework.org/schema/tx\" xmlns:context=\"http://www.springframework.org/schema/context\"\n\txmlns:util=\"http://www.springframework.org/schema/util\" \n\txsi:schemaLocation=\"\n       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd\n       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\n       \">\n\t<description>spring总配置</description>\n\n\t<!-- 打开Spring的Annotation支持 -->\n\t<context:annotation-config />\n\n\t<!-- 设定Spring 去哪些包中找Annotation -->\n\t<context:component-scan base-package=\"com.test\" />\n\n\t<!-- 使用aop -->\n\t<aop:aspectj-autoproxy proxy-target-class=\"true\" />\n\n\t<!-- 读入配置属性文件 -->\n\t<context:property-placeholder location=\"classpath:${profiles.active}/system.properties\" />\n\t\n\t<util:properties id=\"pro\" location=\"classpath:${profiles.active}/system.properties\"/>\n\n\t<!--引入其他spring配置文件  -->\n\t<import resource=\"classpath:spring/spring-datasource.xml\" />\n\t<import resource=\"classpath:spring/spring-mybatits.xml\" />\n\t<import resource=\"classpath:spring/spring-transaction.xml\" />\n\t<import resource=\"classpath:spring/spring-redis.xml\" />\n\n</beans>\n\n```\n在类中的属性上@Value(\"#{pro.xxx}\")就可以自动注入了\n```Java\npackage com.sq580.mall.common.util.proper;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class PropsUtils {\n\n\t@Value(\"#{pro.protocal}\")\n\tprivate String protocal;\n\n\t@Value(\"#{pro.endpoint}\")\n\tprivate String endpoint;\n\n\tpublic String getProtocal() {\n\t\treturn protocal;\n\t}\n\n\tpublic void setProtocal(String protocal) {\n\t\tthis.protocal = protocal;\n\t}\n\n\tpublic String getEndpoint() {\n\t\treturn endpoint;\n\t}\n\n\tpublic void setEndpoint(String endpoint) {\n\t\tthis.endpoint = endpoint;\n\t}\n\t\n}\n```\n直接在需要使用的地方注入PropsUtils，然后get需要的属性即可，需要注意的是，配置中的属性名不能使用“.”","source":"_posts/获取properties文件键值.md","raw":"---\ntitle: spring4.0读取properties文件\ndate: 2016-09-24 17:02:22\ncategories: [Java]\ntags: [Java]\n---\n##### 若我们的项目配置了多环境\n##### 注入properties属性，spring4.0配置，要引入\n##### xmlns:util=\"http://www.springframework.org/schema/util\"和\n##### http://www.springframework.org/schema/util/spring-util-4.0.xsd\n\n我的配置是\n```XML\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop=\"http://www.springframework.org/schema/aop\"\n\txmlns:tx=\"http://www.springframework.org/schema/tx\" xmlns:context=\"http://www.springframework.org/schema/context\"\n\txmlns:util=\"http://www.springframework.org/schema/util\" \n\txsi:schemaLocation=\"\n       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd\n       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\n       \">\n\t<description>spring总配置</description>\n\n\t<!-- 打开Spring的Annotation支持 -->\n\t<context:annotation-config />\n\n\t<!-- 设定Spring 去哪些包中找Annotation -->\n\t<context:component-scan base-package=\"com.test\" />\n\n\t<!-- 使用aop -->\n\t<aop:aspectj-autoproxy proxy-target-class=\"true\" />\n\n\t<!-- 读入配置属性文件 -->\n\t<context:property-placeholder location=\"classpath:${profiles.active}/system.properties\" />\n\t\n\t<util:properties id=\"pro\" location=\"classpath:${profiles.active}/system.properties\"/>\n\n\t<!--引入其他spring配置文件  -->\n\t<import resource=\"classpath:spring/spring-datasource.xml\" />\n\t<import resource=\"classpath:spring/spring-mybatits.xml\" />\n\t<import resource=\"classpath:spring/spring-transaction.xml\" />\n\t<import resource=\"classpath:spring/spring-redis.xml\" />\n\n</beans>\n\n```\n在类中的属性上@Value(\"#{pro.xxx}\")就可以自动注入了\n```Java\npackage com.sq580.mall.common.util.proper;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class PropsUtils {\n\n\t@Value(\"#{pro.protocal}\")\n\tprivate String protocal;\n\n\t@Value(\"#{pro.endpoint}\")\n\tprivate String endpoint;\n\n\tpublic String getProtocal() {\n\t\treturn protocal;\n\t}\n\n\tpublic void setProtocal(String protocal) {\n\t\tthis.protocal = protocal;\n\t}\n\n\tpublic String getEndpoint() {\n\t\treturn endpoint;\n\t}\n\n\tpublic void setEndpoint(String endpoint) {\n\t\tthis.endpoint = endpoint;\n\t}\n\t\n}\n```\n直接在需要使用的地方注入PropsUtils，然后get需要的属性即可，需要注意的是，配置中的属性名不能使用“.”","slug":"获取properties文件键值","published":1,"updated":"2017-01-17T07:42:21.302Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou620033po2yorm1i7j6","content":"<h5 id=\"若我们的项目配置了多环境\"><a href=\"#若我们的项目配置了多环境\" class=\"headerlink\" title=\"若我们的项目配置了多环境\"></a>若我们的项目配置了多环境</h5><h5 id=\"注入properties属性，spring4-0配置，要引入\"><a href=\"#注入properties属性，spring4-0配置，要引入\" class=\"headerlink\" title=\"注入properties属性，spring4.0配置，要引入\"></a>注入properties属性，spring4.0配置，要引入</h5><h5 id=\"xmlns-util-”http-www-springframework-org-schema-util-quot-和\"><a href=\"#xmlns-util-”http-www-springframework-org-schema-util-quot-和\" class=\"headerlink\" title=\"xmlns:util=”http://www.springframework.org/schema/util&quot;和\"></a>xmlns:util=”<a href=\"http://www.springframework.org/schema/util&quot;和\" target=\"_blank\" rel=\"external\">http://www.springframework.org/schema/util&quot;和</a></h5><h5 id=\"http-www-springframework-org-schema-util-spring-util-4-0-xsd\"><a href=\"#http-www-springframework-org-schema-util-spring-util-4-0-xsd\" class=\"headerlink\" title=\"http://www.springframework.org/schema/util/spring-util-4.0.xsd\"></a><a href=\"http://www.springframework.org/schema/util/spring-util-4.0.xsd\" target=\"_blank\" rel=\"external\">http://www.springframework.org/schema/util/spring-util-4.0.xsd</a></h5><p>我的配置是<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></div><div class=\"line\">\t<span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></div><div class=\"line\">\t<span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span> <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></div><div class=\"line\">\t<span class=\"attr\">xmlns:util</span>=<span class=\"string\">\"http://www.springframework.org/schema/util\"</span> </div><div class=\"line\">\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></div><div class=\"line\">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</div><div class=\"line\">       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd</div><div class=\"line\">       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</div><div class=\"line\">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</div><div class=\"line\">       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd</div><div class=\"line\">       \"&gt;</div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>spring总配置<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 打开Spring的Annotation支持 --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">context:annotation-config</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 设定Spring 去哪些包中找Annotation --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.test\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 使用aop --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span> <span class=\"attr\">proxy-target-class</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 读入配置属性文件 --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:$&#123;profiles.active&#125;/system.properties\"</span> /&gt;</span></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">util:properties</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pro\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:$&#123;profiles.active&#125;/system.properties\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!--引入其他spring配置文件  --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"classpath:spring/spring-datasource.xml\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"classpath:spring/spring-mybatits.xml\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"classpath:spring/spring-transaction.xml\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"classpath:spring/spring-redis.xml\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在类中的属性上@Value(“#{pro.xxx}”)就可以自动注入了<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.sq580.mall.common.util.proper;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Value;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PropsUtils</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"#&#123;pro.protocal&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String protocal;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"#&#123;pro.endpoint&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String endpoint;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getProtocal</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> protocal;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProtocal</span><span class=\"params\">(String protocal)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.protocal = protocal;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getEndpoint</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> endpoint;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEndpoint</span><span class=\"params\">(String endpoint)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.endpoint = endpoint;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>直接在需要使用的地方注入PropsUtils，然后get需要的属性即可，需要注意的是，配置中的属性名不能使用“.”</p>\n","excerpt":"","more":"<h5 id=\"若我们的项目配置了多环境\"><a href=\"#若我们的项目配置了多环境\" class=\"headerlink\" title=\"若我们的项目配置了多环境\"></a>若我们的项目配置了多环境</h5><h5 id=\"注入properties属性，spring4-0配置，要引入\"><a href=\"#注入properties属性，spring4-0配置，要引入\" class=\"headerlink\" title=\"注入properties属性，spring4.0配置，要引入\"></a>注入properties属性，spring4.0配置，要引入</h5><h5 id=\"xmlns-util-”http-www-springframework-org-schema-util-quot-和\"><a href=\"#xmlns-util-”http-www-springframework-org-schema-util-quot-和\" class=\"headerlink\" title=\"xmlns:util=”http://www.springframework.org/schema/util&quot;和\"></a>xmlns:util=”<a href=\"http://www.springframework.org/schema/util&quot;和\">http://www.springframework.org/schema/util&quot;和</a></h5><h5 id=\"http-www-springframework-org-schema-util-spring-util-4-0-xsd\"><a href=\"#http-www-springframework-org-schema-util-spring-util-4-0-xsd\" class=\"headerlink\" title=\"http://www.springframework.org/schema/util/spring-util-4.0.xsd\"></a><a href=\"http://www.springframework.org/schema/util/spring-util-4.0.xsd\">http://www.springframework.org/schema/util/spring-util-4.0.xsd</a></h5><p>我的配置是<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></div><div class=\"line\">\t<span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></div><div class=\"line\">\t<span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span> <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></div><div class=\"line\">\t<span class=\"attr\">xmlns:util</span>=<span class=\"string\">\"http://www.springframework.org/schema/util\"</span> </div><div class=\"line\">\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</div><div class=\"line\">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</div><div class=\"line\">       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd</div><div class=\"line\">       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</div><div class=\"line\">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</div><div class=\"line\">       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd</div><div class=\"line\">       \"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>spring总配置<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 打开Spring的Annotation支持 --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">context:annotation-config</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 设定Spring 去哪些包中找Annotation --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.test\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 使用aop --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">aop:aspectj-autoproxy</span> <span class=\"attr\">proxy-target-class</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- 读入配置属性文件 --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:$&#123;profiles.active&#125;/system.properties\"</span> /&gt;</span></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">util:properties</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pro\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:$&#123;profiles.active&#125;/system.properties\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">&lt;!--引入其他spring配置文件  --&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"classpath:spring/spring-datasource.xml\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"classpath:spring/spring-mybatits.xml\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"classpath:spring/spring-transaction.xml\"</span> /&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"classpath:spring/spring-redis.xml\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在类中的属性上@Value(“#{pro.xxx}”)就可以自动注入了<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.sq580.mall.common.util.proper;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Value;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PropsUtils</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"#&#123;pro.protocal&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String protocal;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Value</span>(<span class=\"string\">\"#&#123;pro.endpoint&#125;\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String endpoint;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getProtocal</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> protocal;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setProtocal</span><span class=\"params\">(String protocal)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.protocal = protocal;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getEndpoint</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> endpoint;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEndpoint</span><span class=\"params\">(String endpoint)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.endpoint = endpoint;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>直接在需要使用的地方注入PropsUtils，然后get需要的属性即可，需要注意的是，配置中的属性名不能使用“.”</p>\n"},{"title":"input标签获取本地图片并显示","date":"2016-04-01T03:31:29.000Z","_content":"```HTML\n<!doctype html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"UTF-8\">\n  <title>Document</title>\n </head>\n <body>\n  <input type=\"file\" name=\"file\" id=\"file\" />\n </body>\n <script>\n\t $('#file').change(function(event) {\n\t\t// 根据这个 <input> 获取文件的 HTML5 js 对象\n\t\tvar files = event.target.files;\n\t\tif (files && files.length > 0) {\n\t\t\t// 获取目前上传的文件\n\t\t\tfile = files[0];\n\t\t\t// 来在控制台看看到底这个对象是什么\n\t\t\tconsole.log(file);\n\t\t\t// 那么我们可以做一下诸如文件大小校验的动作\n\t\t\tif(file.size > 1024 * 64) {\n\t\t\t\talert('图片大小不能超过 64kB!');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// 下面是关键的关键，通过这个 file 对象生成一个可用的图像 URL\n\t\t\t// 获取 window 的 URL 工具\n\t\t\tvar URL = window.URL || window.webkitURL;\n\t\t\t// 通过 file 生成目标 url\n\t\t\tvar imgURL = URL.createObjectURL(file);\n\t\t\t// 用这个 URL 产生一个 <img> 将其显示出来\n\t\t\t$(\"#imghead\" ).attr(\"src\", imgURL);\n\t\t}\n\t});\n </script>\n</html>\n```","source":"_posts/获取本地图片并显示.md","raw":"---\ntitle: input标签获取本地图片并显示\ndate: 2016-04-01 11:31:29\ncategories: [html]\ntags: [html]\n---\n```HTML\n<!doctype html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"UTF-8\">\n  <title>Document</title>\n </head>\n <body>\n  <input type=\"file\" name=\"file\" id=\"file\" />\n </body>\n <script>\n\t $('#file').change(function(event) {\n\t\t// 根据这个 <input> 获取文件的 HTML5 js 对象\n\t\tvar files = event.target.files;\n\t\tif (files && files.length > 0) {\n\t\t\t// 获取目前上传的文件\n\t\t\tfile = files[0];\n\t\t\t// 来在控制台看看到底这个对象是什么\n\t\t\tconsole.log(file);\n\t\t\t// 那么我们可以做一下诸如文件大小校验的动作\n\t\t\tif(file.size > 1024 * 64) {\n\t\t\t\talert('图片大小不能超过 64kB!');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// 下面是关键的关键，通过这个 file 对象生成一个可用的图像 URL\n\t\t\t// 获取 window 的 URL 工具\n\t\t\tvar URL = window.URL || window.webkitURL;\n\t\t\t// 通过 file 生成目标 url\n\t\t\tvar imgURL = URL.createObjectURL(file);\n\t\t\t// 用这个 URL 产生一个 <img> 将其显示出来\n\t\t\t$(\"#imghead\" ).attr(\"src\", imgURL);\n\t\t}\n\t});\n </script>\n</html>\n```","slug":"获取本地图片并显示","published":1,"updated":"2016-11-30T01:06:07.380Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou630037po2ydxcipd63","content":"<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file\"</span> /&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"xml\"></span></div><div class=\"line\">\t $('#file').change(function(event) &#123;</div><div class=\"line\">\t\t// 根据这个 <span class=\"tag\">&lt;<span class=\"name\">input</span>&gt;</span> 获取文件的 HTML5 js 对象</div><div class=\"line\">\t\tvar files = event.target.files;</div><div class=\"line\">\t\tif (files &amp;&amp; files.length &gt; 0) &#123;</div><div class=\"line\">\t\t\t// 获取目前上传的文件</div><div class=\"line\">\t\t\tfile = files[0];</div><div class=\"line\">\t\t\t// 来在控制台看看到底这个对象是什么</div><div class=\"line\">\t\t\tconsole.log(file);</div><div class=\"line\">\t\t\t// 那么我们可以做一下诸如文件大小校验的动作</div><div class=\"line\">\t\t\tif(file.size &gt; 1024 * 64) &#123;</div><div class=\"line\">\t\t\t\talert('图片大小不能超过 64kB!');</div><div class=\"line\">\t\t\t\treturn false;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t// 下面是关键的关键，通过这个 file 对象生成一个可用的图像 URL</div><div class=\"line\">\t\t\t// 获取 window 的 URL 工具</div><div class=\"line\">\t\t\tvar URL = window.URL || window.webkitURL;</div><div class=\"line\">\t\t\t// 通过 file 生成目标 url</div><div class=\"line\">\t\t\tvar imgURL = URL.createObjectURL(file);</div><div class=\"line\">\t\t\t// 用这个 URL 产生一个 <span class=\"tag\">&lt;<span class=\"name\">img</span>&gt;</span> 将其显示出来</div><div class=\"line\">\t\t\t$(\"#imghead\" ).attr(\"src\", imgURL);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file\"</span> /&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"xml\"></div><div class=\"line\">\t $('#file').change(function(event) &#123;</div><div class=\"line\">\t\t// 根据这个 <span class=\"tag\">&lt;<span class=\"name\">input</span>&gt;</span> 获取文件的 HTML5 js 对象</div><div class=\"line\">\t\tvar files = event.target.files;</div><div class=\"line\">\t\tif (files &amp;&amp; files.length &gt; 0) &#123;</div><div class=\"line\">\t\t\t// 获取目前上传的文件</div><div class=\"line\">\t\t\tfile = files[0];</div><div class=\"line\">\t\t\t// 来在控制台看看到底这个对象是什么</div><div class=\"line\">\t\t\tconsole.log(file);</div><div class=\"line\">\t\t\t// 那么我们可以做一下诸如文件大小校验的动作</div><div class=\"line\">\t\t\tif(file.size &gt; 1024 * 64) &#123;</div><div class=\"line\">\t\t\t\talert('图片大小不能超过 64kB!');</div><div class=\"line\">\t\t\t\treturn false;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t// 下面是关键的关键，通过这个 file 对象生成一个可用的图像 URL</div><div class=\"line\">\t\t\t// 获取 window 的 URL 工具</div><div class=\"line\">\t\t\tvar URL = window.URL || window.webkitURL;</div><div class=\"line\">\t\t\t// 通过 file 生成目标 url</div><div class=\"line\">\t\t\tvar imgURL = URL.createObjectURL(file);</div><div class=\"line\">\t\t\t// 用这个 URL 产生一个 <span class=\"tag\">&lt;<span class=\"name\">img</span>&gt;</span> 将其显示出来</div><div class=\"line\">\t\t\t$(\"#imghead\" ).attr(\"src\", imgURL);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\"> </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"读取jar包中的文件","date":"2016-11-27T03:47:23.000Z","_content":"在jar包中读取资源文件，有时，我们的项目需要打成jar包，比如做maven父子依赖的时候，公共的项目被打成jar包放在子项目下，有一些公共的配置也被打入jar包中，读取相应文件的时候，如果按照常规web运行时的方式读取，读取到的路径是xxx.jar!xxx的形式，虽然路径是没有错，但是这种路径并不是一个目录路径，是不可读的，这时就需要用读流的方式来读取了\n\n对于在classpath下的文件，一般web启动时我们都是通过ClassLoader来读取资源文件\n```Java\n// 必须和class同级目录或者子目录下才能读到\nSystem.out.println(Test.class.getResource(\"\"));\n// 和调用classloader读取是同一个效果\nSystem.out.println(Test.class.getResource(\"/\"));\n// 效果同上\nSystem.out.println(Test.class.getClassLoader().getResource(\"\"));\n// 这是一种错误的读取方式，使用classloader的时候，不可以指定/来读取\nSystem.out.println(Test.class.getClassLoader().getResource(\"/\"));\n```\n正确的路径读取如下三种\n```Java\nSystem.out.println(Test.class.getResource(\"test.txt\"));  \nSystem.out.println(Test.class.getResource(\"/test.txt\"));  \nSystem.out.println(Test.class.getClassLoader().getResource(\"test.txt\"));\n```\n假设要读取comm项目下的profile/test/test.txt文件，之后comm被打成jar包引入某web项目。通常，我们先获取路径再读取资源\n```\nFile f = new File(Test.class.getClassLoader().getResource(\"/profile/test/test.txt\").getPath());\ntry(FileInputStream fis = new FileInputStream(f);  InputStreamReader read = new InputStreamReader(fis, \"UTF-8\"); BufferedReader bufferedReader = new BufferedReader(read);) {\n\tString line = null;\n\tStringBuffer txtcontent = new StringBuffer();\n\twhile((lineTxt = bufferedReader.readLine()) != null){\n\t\ttxtcontent.append(line);\n\t}\n\tSystem.out.println(txtcontent.toString());\n} catch (Exception e) {\n\t// TODO Exception\n}\n```\n却发现，无论在被打成jar包的类里（comm项目中）读取还是在引用了该jar包的项目中的类（web项目中）读取，都会报找不到路径的错误，改用getResourceAsStream，这时读到的流是可用的\n```Java\nthis.getClass().getResourceAsStream(\"/path\"); \n```\n代码示例：\n```Java\nInputStream is = Test.class.getResourceAsStream(\"/profile/test/test.txt\");\nInputStreamReader read = new InputStreamReader(is, \"UTF-8\");\nBufferedReader bufferedReader = new BufferedReader(read);\nString line = null;\nStringBuffer txtcontent = new StringBuffer();\nwhile ((line = bufferedReader.readLine()) != null) {\n\ttxtcontent.append(line);\n}\nSystem.out.println(txtcontent.toString());\n```\n","source":"_posts/读取jar包中的文件.md","raw":"---\ntitle: 读取jar包中的文件\ndate: 2016-11-27 11:47:23\ncategories: [Java]\ntags: [Java]\n---\n在jar包中读取资源文件，有时，我们的项目需要打成jar包，比如做maven父子依赖的时候，公共的项目被打成jar包放在子项目下，有一些公共的配置也被打入jar包中，读取相应文件的时候，如果按照常规web运行时的方式读取，读取到的路径是xxx.jar!xxx的形式，虽然路径是没有错，但是这种路径并不是一个目录路径，是不可读的，这时就需要用读流的方式来读取了\n\n对于在classpath下的文件，一般web启动时我们都是通过ClassLoader来读取资源文件\n```Java\n// 必须和class同级目录或者子目录下才能读到\nSystem.out.println(Test.class.getResource(\"\"));\n// 和调用classloader读取是同一个效果\nSystem.out.println(Test.class.getResource(\"/\"));\n// 效果同上\nSystem.out.println(Test.class.getClassLoader().getResource(\"\"));\n// 这是一种错误的读取方式，使用classloader的时候，不可以指定/来读取\nSystem.out.println(Test.class.getClassLoader().getResource(\"/\"));\n```\n正确的路径读取如下三种\n```Java\nSystem.out.println(Test.class.getResource(\"test.txt\"));  \nSystem.out.println(Test.class.getResource(\"/test.txt\"));  \nSystem.out.println(Test.class.getClassLoader().getResource(\"test.txt\"));\n```\n假设要读取comm项目下的profile/test/test.txt文件，之后comm被打成jar包引入某web项目。通常，我们先获取路径再读取资源\n```\nFile f = new File(Test.class.getClassLoader().getResource(\"/profile/test/test.txt\").getPath());\ntry(FileInputStream fis = new FileInputStream(f);  InputStreamReader read = new InputStreamReader(fis, \"UTF-8\"); BufferedReader bufferedReader = new BufferedReader(read);) {\n\tString line = null;\n\tStringBuffer txtcontent = new StringBuffer();\n\twhile((lineTxt = bufferedReader.readLine()) != null){\n\t\ttxtcontent.append(line);\n\t}\n\tSystem.out.println(txtcontent.toString());\n} catch (Exception e) {\n\t// TODO Exception\n}\n```\n却发现，无论在被打成jar包的类里（comm项目中）读取还是在引用了该jar包的项目中的类（web项目中）读取，都会报找不到路径的错误，改用getResourceAsStream，这时读到的流是可用的\n```Java\nthis.getClass().getResourceAsStream(\"/path\"); \n```\n代码示例：\n```Java\nInputStream is = Test.class.getResourceAsStream(\"/profile/test/test.txt\");\nInputStreamReader read = new InputStreamReader(is, \"UTF-8\");\nBufferedReader bufferedReader = new BufferedReader(read);\nString line = null;\nStringBuffer txtcontent = new StringBuffer();\nwhile ((line = bufferedReader.readLine()) != null) {\n\ttxtcontent.append(line);\n}\nSystem.out.println(txtcontent.toString());\n```\n","slug":"读取jar包中的文件","published":1,"updated":"2017-01-17T07:42:38.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4paou64003apo2y367h0dz0","content":"<p>在jar包中读取资源文件，有时，我们的项目需要打成jar包，比如做maven父子依赖的时候，公共的项目被打成jar包放在子项目下，有一些公共的配置也被打入jar包中，读取相应文件的时候，如果按照常规web运行时的方式读取，读取到的路径是xxx.jar!xxx的形式，虽然路径是没有错，但是这种路径并不是一个目录路径，是不可读的，这时就需要用读流的方式来读取了</p>\n<p>对于在classpath下的文件，一般web启动时我们都是通过ClassLoader来读取资源文件<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 必须和class同级目录或者子目录下才能读到</span></div><div class=\"line\">System.out.println(Test.class.getResource(<span class=\"string\">\"\"</span>));</div><div class=\"line\"><span class=\"comment\">// 和调用classloader读取是同一个效果</span></div><div class=\"line\">System.out.println(Test.class.getResource(<span class=\"string\">\"/\"</span>));</div><div class=\"line\"><span class=\"comment\">// 效果同上</span></div><div class=\"line\">System.out.println(Test.class.getClassLoader().getResource(<span class=\"string\">\"\"</span>));</div><div class=\"line\"><span class=\"comment\">// 这是一种错误的读取方式，使用classloader的时候，不可以指定/来读取</span></div><div class=\"line\">System.out.println(Test.class.getClassLoader().getResource(<span class=\"string\">\"/\"</span>));</div></pre></td></tr></table></figure></p>\n<p>正确的路径读取如下三种<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">System.out.println(Test.class.getResource(<span class=\"string\">\"test.txt\"</span>));  </div><div class=\"line\">System.out.println(Test.class.getResource(<span class=\"string\">\"/test.txt\"</span>));  </div><div class=\"line\">System.out.println(Test.class.getClassLoader().getResource(<span class=\"string\">\"test.txt\"</span>));</div></pre></td></tr></table></figure></p>\n<p>假设要读取comm项目下的profile/test/test.txt文件，之后comm被打成jar包引入某web项目。通常，我们先获取路径再读取资源<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">File f = new File(Test.class.getClassLoader().getResource(&quot;/profile/test/test.txt&quot;).getPath());</div><div class=\"line\">try(FileInputStream fis = new FileInputStream(f);  InputStreamReader read = new InputStreamReader(fis, &quot;UTF-8&quot;); BufferedReader bufferedReader = new BufferedReader(read);) &#123;</div><div class=\"line\">\tString line = null;</div><div class=\"line\">\tStringBuffer txtcontent = new StringBuffer();</div><div class=\"line\">\twhile((lineTxt = bufferedReader.readLine()) != null)&#123;</div><div class=\"line\">\t\ttxtcontent.append(line);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tSystem.out.println(txtcontent.toString());</div><div class=\"line\">&#125; catch (Exception e) &#123;</div><div class=\"line\">\t// TODO Exception</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>却发现，无论在被打成jar包的类里（comm项目中）读取还是在引用了该jar包的项目中的类（web项目中）读取，都会报找不到路径的错误，改用getResourceAsStream，这时读到的流是可用的<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.getClass().getResourceAsStream(<span class=\"string\">\"/path\"</span>);</div></pre></td></tr></table></figure></p>\n<p>代码示例：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">InputStream is = Test.class.getResourceAsStream(<span class=\"string\">\"/profile/test/test.txt\"</span>);</div><div class=\"line\">InputStreamReader read = <span class=\"keyword\">new</span> InputStreamReader(is, <span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">BufferedReader bufferedReader = <span class=\"keyword\">new</span> BufferedReader(read);</div><div class=\"line\">String line = <span class=\"keyword\">null</span>;</div><div class=\"line\">StringBuffer txtcontent = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\"><span class=\"keyword\">while</span> ((line = bufferedReader.readLine()) != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\ttxtcontent.append(line);</div><div class=\"line\">&#125;</div><div class=\"line\">System.out.println(txtcontent.toString());</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>在jar包中读取资源文件，有时，我们的项目需要打成jar包，比如做maven父子依赖的时候，公共的项目被打成jar包放在子项目下，有一些公共的配置也被打入jar包中，读取相应文件的时候，如果按照常规web运行时的方式读取，读取到的路径是xxx.jar!xxx的形式，虽然路径是没有错，但是这种路径并不是一个目录路径，是不可读的，这时就需要用读流的方式来读取了</p>\n<p>对于在classpath下的文件，一般web启动时我们都是通过ClassLoader来读取资源文件<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 必须和class同级目录或者子目录下才能读到</span></div><div class=\"line\">System.out.println(Test.class.getResource(<span class=\"string\">\"\"</span>));</div><div class=\"line\"><span class=\"comment\">// 和调用classloader读取是同一个效果</span></div><div class=\"line\">System.out.println(Test.class.getResource(<span class=\"string\">\"/\"</span>));</div><div class=\"line\"><span class=\"comment\">// 效果同上</span></div><div class=\"line\">System.out.println(Test.class.getClassLoader().getResource(<span class=\"string\">\"\"</span>));</div><div class=\"line\"><span class=\"comment\">// 这是一种错误的读取方式，使用classloader的时候，不可以指定/来读取</span></div><div class=\"line\">System.out.println(Test.class.getClassLoader().getResource(<span class=\"string\">\"/\"</span>));</div></pre></td></tr></table></figure></p>\n<p>正确的路径读取如下三种<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">System.out.println(Test.class.getResource(<span class=\"string\">\"test.txt\"</span>));  </div><div class=\"line\">System.out.println(Test.class.getResource(<span class=\"string\">\"/test.txt\"</span>));  </div><div class=\"line\">System.out.println(Test.class.getClassLoader().getResource(<span class=\"string\">\"test.txt\"</span>));</div></pre></td></tr></table></figure></p>\n<p>假设要读取comm项目下的profile/test/test.txt文件，之后comm被打成jar包引入某web项目。通常，我们先获取路径再读取资源<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">File f = new File(Test.class.getClassLoader().getResource(&quot;/profile/test/test.txt&quot;).getPath());</div><div class=\"line\">try(FileInputStream fis = new FileInputStream(f);  InputStreamReader read = new InputStreamReader(fis, &quot;UTF-8&quot;); BufferedReader bufferedReader = new BufferedReader(read);) &#123;</div><div class=\"line\">\tString line = null;</div><div class=\"line\">\tStringBuffer txtcontent = new StringBuffer();</div><div class=\"line\">\twhile((lineTxt = bufferedReader.readLine()) != null)&#123;</div><div class=\"line\">\t\ttxtcontent.append(line);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tSystem.out.println(txtcontent.toString());</div><div class=\"line\">&#125; catch (Exception e) &#123;</div><div class=\"line\">\t// TODO Exception</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>却发现，无论在被打成jar包的类里（comm项目中）读取还是在引用了该jar包的项目中的类（web项目中）读取，都会报找不到路径的错误，改用getResourceAsStream，这时读到的流是可用的<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.getClass().getResourceAsStream(<span class=\"string\">\"/path\"</span>);</div></pre></td></tr></table></figure></p>\n<p>代码示例：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">InputStream is = Test.class.getResourceAsStream(<span class=\"string\">\"/profile/test/test.txt\"</span>);</div><div class=\"line\">InputStreamReader read = <span class=\"keyword\">new</span> InputStreamReader(is, <span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">BufferedReader bufferedReader = <span class=\"keyword\">new</span> BufferedReader(read);</div><div class=\"line\">String line = <span class=\"keyword\">null</span>;</div><div class=\"line\">StringBuffer txtcontent = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\"><span class=\"keyword\">while</span> ((line = bufferedReader.readLine()) != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">\ttxtcontent.append(line);</div><div class=\"line\">&#125;</div><div class=\"line\">System.out.println(txtcontent.toString());</div></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj4paou3i0000po2ygkpupvjk","category_id":"cj4paou3o0003po2ylub2ky2l","_id":"cj4paou42000bpo2ywyn7pxng"},{"post_id":"cj4paou3y000apo2yo1g1u9ui","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou47000hpo2y2yllblol"},{"post_id":"cj4paou3m0002po2yhpnqyk46","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou49000mpo2yadc1vq02"},{"post_id":"cj4paou43000cpo2yx1drywv6","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou4a000ppo2yf13jm60v"},{"post_id":"cj4paou46000fpo2ylmbjvprg","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou4d000upo2yhkbekf5y"},{"post_id":"cj4paou3r0005po2yra28o1fc","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou4g000xpo2y2viuhmtg"},{"post_id":"cj4paou47000ipo2yl2v2qp21","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou4m0011po2ymqiurxjj"},{"post_id":"cj4paou4a000npo2yrqy202c4","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou4o0014po2yden8ppdk"},{"post_id":"cj4paou3u0006po2y8dd84glk","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou4r0018po2y4780yi68"},{"post_id":"cj4paou4b000qpo2y0m9f871r","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou4s001bpo2y3na22ysd"},{"post_id":"cj4paou4e000vpo2yamsz7bxg","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou4w001fpo2y6fb97rjt"},{"post_id":"cj4paou3w0007po2yv35xv3ls","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou4y001ipo2y4gjj8uvk"},{"post_id":"cj4paou4g000ypo2ym425dobf","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou51001lpo2y3dq27czc"},{"post_id":"cj4paou4n0012po2yjujn7g37","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou53001npo2yfy7wmxyy"},{"post_id":"cj4paou4o0015po2ypvdxcekl","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou55001qpo2ywlt0airq"},{"post_id":"cj4paou4r0019po2ytszxhmsh","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou57001upo2y4o22asrz"},{"post_id":"cj4paou4t001cpo2yxbyf9ml2","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou59001xpo2y4k3zrbi0"},{"post_id":"cj4paou4w001gpo2yk2pyyu30","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou5b0021po2yv4hevliz"},{"post_id":"cj4paou4y001jpo2ympbvljuu","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou5c0024po2yx4ertor1"},{"post_id":"cj4paou51001mpo2y040ea28i","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou5e0028po2yp3erg9x1"},{"post_id":"cj4paou53001opo2y72jq5zeu","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou5g002cpo2y6c10g1xt"},{"post_id":"cj4paou55001spo2ycexewyem","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou5i002gpo2ywe12lsjt"},{"post_id":"cj4paou5c0023po2yyzb49obd","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou5k002kpo2y64tjxvnk"},{"post_id":"cj4paou58001vpo2y0t202g46","category_id":"cj4paou5b0020po2ymgj3tw8z","_id":"cj4paou5u002opo2ymh52v8bt"},{"post_id":"cj4paou5e0029po2ygi50kqjh","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou5y002spo2ys3t0s8j4"},{"post_id":"cj4paou5g002dpo2yl5123581","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou5z002upo2ykq4ynhfa"},{"post_id":"cj4paou5a001ypo2y993uokh4","category_id":"cj4paou5f002apo2yetuske5l","_id":"cj4paou61002ypo2y90ac31nu"},{"post_id":"cj4paou5t002lpo2yjkkefc5s","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou620032po2y4uib7y2e"},{"post_id":"cj4paou5d0026po2y15p7myem","category_id":"cj4paou5j002ipo2ywlz4284p","_id":"cj4paou630036po2yqf60v0h7"},{"post_id":"cj4paou5u002ppo2y7ljvcoor","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou640039po2yl4c252fn"},{"post_id":"cj4paou5y002tpo2ysgmpuuv9","category_id":"cj4paou5j002ipo2ywlz4284p","_id":"cj4paou66003dpo2ynp1z3lnf"},{"post_id":"cj4paou5i002hpo2ykmg3kjxu","category_id":"cj4paou5x002qpo2y21v8hc74","_id":"cj4paou66003fpo2yxrt34aj8"},{"post_id":"cj4paou61002zpo2yzhygszlb","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou67003ipo2y550nhj8n"},{"post_id":"cj4paou620033po2yorm1i7j6","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou67003kpo2ylmfi9wr3"},{"post_id":"cj4paou630037po2ydxcipd63","category_id":"cj4paou5x002qpo2y21v8hc74","_id":"cj4paou68003npo2y44vq7lp5"},{"post_id":"cj4paou60002wpo2yi45t6bhc","category_id":"cj4paou620031po2yg5qkqcs8","_id":"cj4paou69003ppo2y8glsxqmx"},{"post_id":"cj4paou64003apo2y367h0dz0","category_id":"cj4paou3x0008po2yksi6crc3","_id":"cj4paou6a003spo2ye8tm705u"}],"PostTag":[{"post_id":"cj4paou3i0000po2ygkpupvjk","tag_id":"cj4paou3r0004po2yhql8rc1m","_id":"cj4paou47000gpo2y5auylke0"},{"post_id":"cj4paou3i0000po2ygkpupvjk","tag_id":"cj4paou3y0009po2yac3ahr8m","_id":"cj4paou48000jpo2yumysqz6f"},{"post_id":"cj4paou46000fpo2ylmbjvprg","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou4a000opo2ywf63dfg0"},{"post_id":"cj4paou3m0002po2yhpnqyk46","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou4c000rpo2ywv21s8du"},{"post_id":"cj4paou4a000npo2yrqy202c4","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou4f000wpo2yow4hwhb2"},{"post_id":"cj4paou3r0005po2yra28o1fc","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou4j000zpo2yusz72xen"},{"post_id":"cj4paou4b000qpo2y0m9f871r","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou4o0013po2yfjub3xlh"},{"post_id":"cj4paou3u0006po2y8dd84glk","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou4q0016po2yj30h60rf"},{"post_id":"cj4paou3w0007po2yv35xv3ls","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou4s001apo2ylzprd9j1"},{"post_id":"cj4paou4r0019po2ytszxhmsh","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou4v001epo2yqr9djbsq"},{"post_id":"cj4paou3y000apo2yo1g1u9ui","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou4x001hpo2ytr6fuplx"},{"post_id":"cj4paou51001mpo2y040ea28i","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou55001ppo2y2oe6ih3j"},{"post_id":"cj4paou43000cpo2yx1drywv6","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou57001tpo2ys2brbo20"},{"post_id":"cj4paou43000cpo2yx1drywv6","tag_id":"cj4paou51001kpo2ygs11zcpb","_id":"cj4paou59001wpo2yl0gkjhvv"},{"post_id":"cj4paou47000ipo2yl2v2qp21","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou5b0022po2yxlnipwn8"},{"post_id":"cj4paou47000ipo2yl2v2qp21","tag_id":"cj4paou55001rpo2ya7wfm6lh","_id":"cj4paou5c0025po2yzr5o8sht"},{"post_id":"cj4paou4e000vpo2yamsz7bxg","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou5g002bpo2yqxzxgw4a"},{"post_id":"cj4paou4e000vpo2yamsz7bxg","tag_id":"cj4paou5a001zpo2yg0m2mhtm","_id":"cj4paou5h002epo2yaucdr7eq"},{"post_id":"cj4paou4g000ypo2ym425dobf","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou5j002jpo2y4ic56cr0"},{"post_id":"cj4paou4g000ypo2ym425dobf","tag_id":"cj4paou5d0027po2y41nr7407","_id":"cj4paou5u002mpo2yoktd07p4"},{"post_id":"cj4paou5t002lpo2yjkkefc5s","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou5y002rpo2ybdgcubdq"},{"post_id":"cj4paou4n0012po2yjujn7g37","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou61002xpo2ytw7p8exn"},{"post_id":"cj4paou4n0012po2yjujn7g37","tag_id":"cj4paou5d0027po2y41nr7407","_id":"cj4paou620030po2ygv7dgw4t"},{"post_id":"cj4paou4n0012po2yjujn7g37","tag_id":"cj4paou5u002npo2yhkw9kjjr","_id":"cj4paou630035po2y3n27sz3w"},{"post_id":"cj4paou61002zpo2yzhygszlb","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou640038po2yxvtlxfvh"},{"post_id":"cj4paou4o0015po2ypvdxcekl","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou65003cpo2yn64yshq5"},{"post_id":"cj4paou4o0015po2ypvdxcekl","tag_id":"cj4paou60002vpo2y82qqdu9f","_id":"cj4paou66003epo2yx83wdja0"},{"post_id":"cj4paou620033po2yorm1i7j6","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou67003hpo2yuonv72fw"},{"post_id":"cj4paou64003apo2y367h0dz0","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou67003jpo2y5mk990f8"},{"post_id":"cj4paou4t001cpo2yxbyf9ml2","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou68003mpo2ydeom31x9"},{"post_id":"cj4paou4t001cpo2yxbyf9ml2","tag_id":"cj4paou630034po2ykqgtdn6r","_id":"cj4paou69003opo2ybxtufwsf"},{"post_id":"cj4paou4t001cpo2yxbyf9ml2","tag_id":"cj4paou65003bpo2ym9ai9ts3","_id":"cj4paou6a003rpo2y9laefwni"},{"post_id":"cj4paou4w001gpo2yk2pyyu30","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou6a003tpo2ydp25697n"},{"post_id":"cj4paou4w001gpo2yk2pyyu30","tag_id":"cj4paou65003bpo2ym9ai9ts3","_id":"cj4paou6a003upo2ysfit9wtx"},{"post_id":"cj4paou4y001jpo2ympbvljuu","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou6b003wpo2y77wpn6bo"},{"post_id":"cj4paou4y001jpo2ympbvljuu","tag_id":"cj4paou65003bpo2ym9ai9ts3","_id":"cj4paou6b003xpo2yjx1c9exg"},{"post_id":"cj4paou53001opo2y72jq5zeu","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou6d003zpo2y01k55fwv"},{"post_id":"cj4paou53001opo2y72jq5zeu","tag_id":"cj4paou6a003qpo2yb3f2p58j","_id":"cj4paou6d0040po2yuvu528jv"},{"post_id":"cj4paou55001spo2ycexewyem","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou6e0042po2yyuce15zz"},{"post_id":"cj4paou55001spo2ycexewyem","tag_id":"cj4paou6a003qpo2yb3f2p58j","_id":"cj4paou6g0043po2y35qxnagf"},{"post_id":"cj4paou58001vpo2y0t202g46","tag_id":"cj4paou6c003ypo2yzogqfma6","_id":"cj4paou6g0045po2yvc6pphew"},{"post_id":"cj4paou5a001ypo2y993uokh4","tag_id":"cj4paou65003bpo2ym9ai9ts3","_id":"cj4paou6g0046po2y0rja00rf"},{"post_id":"cj4paou5c0023po2yyzb49obd","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou6h0048po2ycu2u6k0f"},{"post_id":"cj4paou5c0023po2yyzb49obd","tag_id":"cj4paou6g0044po2yvp5lhs0p","_id":"cj4paou6h0049po2y3iqr3abi"},{"post_id":"cj4paou5d0026po2y15p7myem","tag_id":"cj4paou6h0047po2ynsugoxlz","_id":"cj4paou6i004bpo2yprludyko"},{"post_id":"cj4paou5e0029po2ygi50kqjh","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou6k004epo2ythd2etcp"},{"post_id":"cj4paou5e0029po2ygi50kqjh","tag_id":"cj4paou6h004apo2ytf81o5ol","_id":"cj4paou6k004fpo2yjbi3a9tk"},{"post_id":"cj4paou5e0029po2ygi50kqjh","tag_id":"cj4paou6j004cpo2y8ryfsucj","_id":"cj4paou6k004hpo2yc8iq3pfx"},{"post_id":"cj4paou5g002dpo2yl5123581","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou6l004ipo2yastrx3hy"},{"post_id":"cj4paou5g002dpo2yl5123581","tag_id":"cj4paou6j004dpo2yedv288wm","_id":"cj4paou6l004kpo2ylu21zj49"},{"post_id":"cj4paou5i002hpo2ykmg3kjxu","tag_id":"cj4paou6k004gpo2ylxxengpq","_id":"cj4paou6l004lpo2ylqm8n3qm"},{"post_id":"cj4paou5i002hpo2ykmg3kjxu","tag_id":"cj4paou3y0009po2yac3ahr8m","_id":"cj4paou6m004npo2ygcjklr41"},{"post_id":"cj4paou5u002ppo2y7ljvcoor","tag_id":"cj4paou44000epo2yviox42cp","_id":"cj4paou6m004ppo2yrqul9h7b"},{"post_id":"cj4paou5u002ppo2y7ljvcoor","tag_id":"cj4paou6c003ypo2yzogqfma6","_id":"cj4paou6n004qpo2y0jpim468"},{"post_id":"cj4paou5u002ppo2y7ljvcoor","tag_id":"cj4paou6k004gpo2ylxxengpq","_id":"cj4paou6n004spo2ynxnnfq6m"},{"post_id":"cj4paou5y002tpo2ysgmpuuv9","tag_id":"cj4paou6h0047po2ynsugoxlz","_id":"cj4paou6n004tpo2ys09n9viv"},{"post_id":"cj4paou60002wpo2yi45t6bhc","tag_id":"cj4paou6n004rpo2y17paj5z8","_id":"cj4paou6o004vpo2yfi0o1xnq"},{"post_id":"cj4paou630037po2ydxcipd63","tag_id":"cj4paou6k004gpo2ylxxengpq","_id":"cj4paou6o004wpo2yybldyim4"}],"Tag":[{"name":"AngularJs","_id":"cj4paou3r0004po2yhql8rc1m"},{"name":"js","_id":"cj4paou3y0009po2yac3ahr8m"},{"name":"Java","_id":"cj4paou44000epo2yviox42cp"},{"name":"excel","_id":"cj4paou51001kpo2ygs11zcpb"},{"name":"mybatis","_id":"cj4paou55001rpo2ya7wfm6lh"},{"name":"Srping boot","_id":"cj4paou5a001zpo2yg0m2mhtm"},{"name":"SpringMvc","_id":"cj4paou5d0027po2y41nr7407"},{"name":"api","_id":"cj4paou5u002npo2yhkw9kjjr"},{"name":"hibernate","_id":"cj4paou60002vpo2y82qqdu9f"},{"name":"svn","_id":"cj4paou630034po2ykqgtdn6r"},{"name":"eclipse","_id":"cj4paou65003bpo2ym9ai9ts3"},{"name":"maven","_id":"cj4paou6a003qpo2yb3f2p58j"},{"name":"mysql","_id":"cj4paou6c003ypo2yzogqfma6"},{"name":"Tomcat","_id":"cj4paou6g0044po2yvp5lhs0p"},{"name":"kong","_id":"cj4paou6h0047po2ynsugoxlz"},{"name":"springboot","_id":"cj4paou6h004apo2ytf81o5ol"},{"name":"mq","_id":"cj4paou6j004cpo2y8ryfsucj"},{"name":"redis","_id":"cj4paou6j004dpo2yedv288wm"},{"name":"html","_id":"cj4paou6k004gpo2ylxxengpq"},{"name":"Swimming","_id":"cj4paou6n004rpo2y17paj5z8"}]}}